!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/stochastic",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function e(t,e,i,o){t.hasOwnProperty(e)||(t[e]=o.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/ArrayUtilities.js",[],function(){return{getArrayExtremes:function(t,i,o){return t.reduce((t,e)=>[Math.min(t[0],e[i]),Math.max(t[1],e[o])],[Number.MAX_VALUE,-Number.MAX_VALUE])}}}),e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,i){const m=t.seriesTypes["sma"]["prototype"],{defined:y,error:g,merge:A}=i;var e;{t=e=e||{};const n=[],p=["bottomLine"],l=["top","bottom"],h=["top"];function x(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function v(t,e){const i=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&i.push(x(t))}),i}function o(){const i=this,t=i.pointValKey,e=i.linesApiNames,o=i.areaLinesNames,s=i.points,a=i.options,r=i.graph,n={options:{gapSize:a.gapSize}},p=[],l=v(i,t);let h=s.length,c;var u,d,f;l.forEach((t,e)=>{for(p[e]=[];h--;)c=s[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!y(c[t])});h=s.length}),i.userOptions.fillColor&&o.length&&(u=l.indexOf(x(o[0])),u=p[u],d=1===o.length?s:p[l.indexOf(x(o[1]))],f=i.color,i.points=d,i.nextPoints=u,i.color=i.userOptions.fillColor,i.options=A(s,n),i.graph=i.area,i.fillGraph=!0,m.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=f),e.forEach((t,e)=>{p[e]?(i.points=p[e],a[t]?i.options=A(a[t].styles,n):g('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],m.drawGraph.call(i),i["graph"+t]=i.graph):g('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=s,i.options=a,i.graph=r,m.drawGraph.call(i)}function s(t){let e,i=[],o;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=m.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",i=m.getGraphPath.call(this,t);for(let t=(o=e.slice(0,i.length)).length-1;0<=t;t--)i.push(o[t])}}else i=m.getGraphPath.apply(this,arguments);return i}function a(e){const i=[];return(this.pointArrayMap||[]).forEach(t=>{i.push(e[t])}),i}function r(){const t=this.pointArrayMap;let o,s;o=v(this),m.translate.apply(this,arguments),this.points.forEach(i=>{t.forEach((t,e)=>{s=i[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(i[o[e]]=this.yAxis.toPixels(s,!0))})})}t.compose=function(t){if(i.pushUnique(n,t)){const e=t.prototype;e.linesApiNames=e.linesApiNames||p.slice(),e.pointArrayMap=e.pointArrayMap||l.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||h.slice(),e.drawGraph=o,e.getGraphPath=s,e.toYData=a,e.translate=r}return t}}return e}),e(t,"Stock/Indicators/Stochastic/StochasticIndicator.js",[t["Stock/Indicators/ArrayUtilities.js"],t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(A,t,e,i){var o=e.seriesTypes["sma"];const{extend:s,isArray:x,merge:a}=i;class r extends o{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}init(){super.init.apply(this,arguments),this.options=a({smoothedLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){const i=e.periods[0],o=e.periods[1],s=t.xData,a=t.yData,r=a?a.length:0,n=[],p=[],l=[];let h,c,u,d=null,f,m,y;if(!(r<i)&&x(a[0])&&4===a[0].length){let t=!0,e=0;for(y=i-1;y<r;y++){var g;h=a.slice(y-i+1,y+1),c=(m=A.getArrayExtremes(h,2,1))[0],u=(a[y][3]-c)/(m[1]-c)*100,isNaN(u)&&t?e++:(t&&!isNaN(u)&&(t=!1),g=p.push(s[y]),isNaN(u)?l.push([l[g-2]&&"number"==typeof l[g-2][0]?l[g-2][0]:null,null]):l.push([u,null]),y>=e+(i-1)+(o-1)&&(f=super.getValues({xData:p.slice(-o),yData:l.slice(-o)},{period:o}),d=f.yData[0]),n.push([s[y],u,d]),l[g-1][1]=d)}return{values:n,xData:p,yData:l}}}}return r.defaultOptions=a(o.defaultOptions,{params:{index:void 0,period:void 0,periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),s(r.prototype,{areaLinesNames:[],nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"]}),t.compose(r),e.registerSeriesType("stochastic",r),r}),e(t,"masters/indicators/stochastic.src.js",[],function(){})});