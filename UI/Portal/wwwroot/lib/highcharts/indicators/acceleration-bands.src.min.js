"use strict";!function(a){"object"==typeof module&&module.exports?module.exports=a.default=a:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return a(t),a.Highcharts=t,a}):a("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){var a=t?t._modules:{};function e(t,a,e,i){t.hasOwnProperty(a)||(t[a]=i.apply(null,e))}e(a,"mixins/multipe-lines.js",[a["parts/Globals.js"],a["parts/Utilities.js"]],function(t,a){var c=a.defined,h=a.error,u=a.merge,d=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(a){var e=[];return(this.pointArrayMap||[]).forEach(function(t){t!==a&&e.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),e},toYData:function(a){var e=[];return(this.pointArrayMap||[]).forEach(function(t){e.push(a[t])}),e},translate:function(){var i,n=this,t=n.pointArrayMap,o=n.getTranslatedLinesNames();d.prototype.translate.apply(n,arguments),n.points.forEach(function(e){t.forEach(function(t,a){null!==(i=e[t])&&(e[o[a]]=n.yAxis.toPixels(i,!0))})})},drawGraph:function(){var e,i=this,t=i.pointValKey,a=i.linesApiNames,n=i.points,o=n.length,s=i.options,r=i.graph,p={options:{gapSize:s.gapSize}},l=[];i.getTranslatedLinesNames(t).forEach(function(t,a){for(l[a]=[];o--;)e=n[o],l[a].push({x:e.x,plotX:e.plotX,plotY:e[t],isNull:!c(e[t])});o=n.length}),a.forEach(function(t,a){l[a]?(i.points=l[a],s[t]?i.options=u(s[t].styles,p):h('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],d.prototype.drawGraph.call(i),i["graph"+t]=i.graph):h('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=s,i.graph=r,d.prototype.drawGraph.call(i)}}}),e(a,"indicators/acceleration-bands.src.js",[a["parts/Globals.js"],a["parts/Utilities.js"],a["mixins/multipe-lines.js"]],function(t,a,e){var T=a.correctFloat,i=a.merge,n=a.seriesType,M=t.seriesTypes.sma;n("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},i(e,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,a){var e,i,n,o,s,r,p,l,c,h,u,d,f,m,y=a.period,g=a.factor,x=a.index,D=t.xData,A=t.yData,v=A?A.length:0,b=[],j=[],N=[],E=[],L=[];if(!(v<y)){for(u=0;u<=v;u++)u<v&&(d=A[u][2],f=A[u][1],m=g,s=T(f-d)/(T(f+d)/2)*1e3*m,b.push(A[u][1]*T(1+2*s)),j.push(A[u][2]*T(1-2*s))),y<=u&&(c=D.slice(u-y,u),h=A.slice(u-y,u),p=M.prototype.getValues.call(this,{xData:c,yData:b.slice(u-y,u)},{period:y}),l=M.prototype.getValues.call(this,{xData:c,yData:j.slice(u-y,u)},{period:y}),o=(r=M.prototype.getValues.call(this,{xData:c,yData:h},{period:y,index:x})).xData[0],i=p.yData[0],n=l.yData[0],e=r.yData[0],N.push([o,i,e,n]),E.push(o),L.push([i,e,n]));return{values:N,xData:E,yData:L}}}}))}),e(a,"masters/indicators/acceleration-bands.src.js",[],function(){})});