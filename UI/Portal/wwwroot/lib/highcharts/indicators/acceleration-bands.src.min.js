!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function e(t,e,i,a){t.hasOwnProperty(e)||(t[e]=a.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,i){const m=t.seriesTypes["sma"]["prototype"],{defined:y,error:g,merge:x}=i;var e;{t=e=e||{};const r=[],p=["bottomLine"],l=["top","bottom"],h=["top"];function A(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function D(t,e){const i=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&i.push(A(t))}),i}function a(){const i=this,t=i.pointValKey,e=i.linesApiNames,a=i.areaLinesNames,o=i.points,s=i.options,n=i.graph,r={options:{gapSize:s.gapSize}},p=[],l=D(i,t);let h=o.length,c;var d,u,f;l.forEach((t,e)=>{for(p[e]=[];h--;)c=o[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!y(c[t])});h=o.length}),i.userOptions.fillColor&&a.length&&(d=l.indexOf(A(a[0])),d=p[d],u=1===a.length?o:p[l.indexOf(A(a[1]))],f=i.color,i.points=u,i.nextPoints=d,i.color=i.userOptions.fillColor,i.options=x(o,r),i.graph=i.area,i.fillGraph=!0,m.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=f),e.forEach((t,e)=>{p[e]?(i.points=p[e],s[t]?i.options=x(s[t].styles,r):g('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],m.drawGraph.call(i),i["graph"+t]=i.graph):g('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=o,i.options=s,i.graph=n,m.drawGraph.call(i)}function o(t){let e,i=[],a;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=m.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",i=m.getGraphPath.call(this,t);for(let t=(a=e.slice(0,i.length)).length-1;0<=t;t--)i.push(a[t])}}else i=m.getGraphPath.apply(this,arguments);return i}function s(e){const i=[];return(this.pointArrayMap||[]).forEach(t=>{i.push(e[t])}),i}function n(){const t=this.pointArrayMap;let a,o;a=D(this),m.translate.apply(this,arguments),this.points.forEach(i=>{t.forEach((t,e)=>{o=i[t],null!==(o=this.dataModify?this.dataModify.modifyValue(o):o)&&(i[a[e]]=this.yAxis.toPixels(o,!0))})})}t.compose=function(t){if(i.pushUnique(r,t)){const e=t.prototype;e.linesApiNames=e.linesApiNames||p.slice(),e.pointArrayMap=e.pointArrayMap||l.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||h.slice(),e.drawGraph=a,e.getGraphPath=o,e.toYData=s,e.translate=n}return t}}return e}),e(t,"Stock/Indicators/ABands/ABandsIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,i){var a=e.seriesTypes["sma"];const{correctFloat:E,extend:o,merge:s}=i;class n extends a{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(t,e){const i=e.period,a=e.factor,o=e.index,s=t.xData,n=t.yData,r=n?n.length:0,p=[],l=[],h=[],c=[],d=[];let u,f,m,y,g,x,A,D,v,C,L;if(!(r<i)){for(L=0;L<=r;L++)L<r&&(M=n[L][2],G=n[L][1],S=a,g=E(G-M)/(E(G+M)/2)*1e3*S,p.push((G=n[L][1],M=g,G*E(1+2*M))),l.push((S=n[L][2],G=g,S*E(1-2*G)))),L>=i&&(v=s.slice(L-i,L),C=n.slice(L-i,L),A=super.getValues.call(this,{xData:v,yData:p.slice(L-i,L)},{period:i}),D=super.getValues.call(this,{xData:v,yData:l.slice(L-i,L)},{period:i}),y=(x=super.getValues.call(this,{xData:v,yData:C},{period:i,index:o})).xData[0],f=A.yData[0],m=D.yData[0],u=x.yData[0],h.push([y,f,u,m]),c.push(y),d.push([f,u,m]));var M,G,S;return{values:h,xData:c,yData:d}}}}return n.defaultOptions=s(a.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),o(n.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),t.compose(n),e.registerSeriesType("abands",n),n}),e(t,"masters/indicators/acceleration-bands.src.js",[],function(){})});