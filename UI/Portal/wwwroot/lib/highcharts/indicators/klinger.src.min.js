!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/klinger",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,i,o){e.hasOwnProperty(t)||(e[t]=o.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Stock/Indicators/MultipleLinesComposition.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,i){const f=e.seriesTypes["sma"]["prototype"],{defined:m,error:y,merge:v}=i;var t;{e=t=t||{};const a=[],l=["bottomLine"],p=["top","bottom"],h=["top"];function A(e){return"plot"+e.charAt(0).toUpperCase()+e.slice(1)}function P(e,t){const i=[];return(e.pointArrayMap||[]).forEach(e=>{e!==t&&i.push(A(e))}),i}function o(){const i=this,e=i.pointValKey,t=i.linesApiNames,o=i.areaLinesNames,s=i.points,r=i.options,n=i.graph,a={options:{gapSize:r.gapSize}},l=[],p=P(i,e);let h=s.length,c;var u,g,d;p.forEach((e,t)=>{for(l[t]=[];h--;)c=s[h],l[t].push({x:c.x,plotX:c.plotX,plotY:c[e],isNull:!m(c[e])});h=s.length}),i.userOptions.fillColor&&o.length&&(u=p.indexOf(A(o[0])),u=l[u],g=1===o.length?s:l[p.indexOf(A(o[1]))],d=i.color,i.points=g,i.nextPoints=u,i.color=i.userOptions.fillColor,i.options=v(s,a),i.graph=i.area,i.fillGraph=!0,f.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=d),t.forEach((e,t)=>{l[t]?(i.points=l[t],r[e]?i.options=v(r[e].styles,a):y('Error: "There is no '+e+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+e],f.drawGraph.call(i),i["graph"+e]=i.graph):y('Error: "'+e+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=s,i.options=r,i.graph=n,f.drawGraph.call(i)}function s(e){let t,i=[],o;if(e=e||this.points,this.fillGraph&&this.nextPoints){if((t=f.getGraphPath.call(this,this.nextPoints))&&t.length){t[0][0]="L",i=f.getGraphPath.call(this,e);for(let e=(o=t.slice(0,i.length)).length-1;0<=e;e--)i.push(o[e])}}else i=f.getGraphPath.apply(this,arguments);return i}function r(t){const i=[];return(this.pointArrayMap||[]).forEach(e=>{i.push(t[e])}),i}function n(){const e=this.pointArrayMap;let o,s;o=P(this),f.translate.apply(this,arguments),this.points.forEach(i=>{e.forEach((e,t)=>{s=i[e],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(i[o[t]]=this.yAxis.toPixels(s,!0))})})}e.compose=function(e){if(i.pushUnique(a,e)){const t=e.prototype;t.linesApiNames=t.linesApiNames||l.slice(),t.pointArrayMap=t.pointArrayMap||p.slice(),t.pointValKey=t.pointValKey||"top",t.areaLinesNames=t.areaLinesNames||h.slice(),t.drawGraph=o,t.getGraphPath=s,t.toYData=r,t.translate=n}return e}}return t}),t(e,"Stock/Indicators/Klinger/KlingerIndicator.js",[e["Stock/Indicators/MultipleLinesComposition.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t,i){const{ema:a,sma:o}=t.seriesTypes,{correctFloat:P,error:n,extend:s,isArray:l,merge:r}=i;class p extends o{constructor(){super(...arguments),this.data=void 0,this.points=void 0,this.options=void 0,this.volumeSeries=void 0}calculateTrend(e,t){return e[t][1]+e[t][2]+e[t][3]>e[t-1][1]+e[t-1][2]+e[t-1][3]?1:-1}isValidData(e){const t=this.chart,i=this.options,o=this.linkedParent,s=l(e)&&4===e.length,r=this.volumeSeries||(this.volumeSeries=t.get(i.params.volumeSeriesID));return r||n("Series "+i.params.volumeSeriesID+" not found! Check `volumeSeriesID`.",!0,o.chart),!(![o,r].every(function(e){return e&&e.xData&&e.xData.length>=i.params.slowAvgPeriod})||!s)}getCM(e,t,i,o,s){return P(t+(i===o?e:s))}getDM(e,t){return P(e-t)}getVolumeForce(e){const t=[];let i,o,s,r=1,n=0,a=e[0][1]-e[0][2],l=0,p;for(r;r<e.length;r++)p=this.calculateTrend(e,r),o=this.getDM(e[r][1],e[r][2]),i=this.getCM(n,o,p,l,a),s=this.volumeSeries.yData[r]*p*Math.abs(2*(o/i-1))*100,t.push([s]),l=p,n=i,a=o;return t}getEMA(e,t,i,o,s,r,n){return a.prototype.calculateEma(n||[],e,void 0===r?1:r,o,t,void 0===s?-1:s,i)}getSMA(e,t,i){return a.prototype.accumulatePeriodPoints(e,t,i)/e}getValues(e,t){const i=[],o=e.xData,s=e.yData,r=[],n=[],a=[];let l,p=0,h=0,c,u=void 0,g=void 0,d=null;if(this.isValidData(s[0])){var f=this.getVolumeForce(s),m=this.getSMA(t.fastAvgPeriod,0,f),y=this.getSMA(t.slowAvgPeriod,0,f),v=2/(t.fastAvgPeriod+1),A=2/(t.slowAvgPeriod+1);for(p;p<s.length;p++)p>=t.fastAvgPeriod&&(h=this.getEMA(f,u,m,v,0,p,o)[1],u=h),p>=t.slowAvgPeriod&&(c=this.getEMA(f,g,y,A,0,p,o)[1],g=c,l=P(h-c),a.push(l),a.length>=t.signalPeriod&&(d=a.slice(-t.signalPeriod).reduce((e,t)=>e+t)/t.signalPeriod),i.push([o[p],l,d]),r.push(o[p]),n.push([l,d]));return{values:i,xData:r,yData:n}}}}return p.defaultOptions=r(o.defaultOptions,{params:{fastAvgPeriod:34,slowAvgPeriod:55,signalPeriod:13,volumeSeriesID:"volume"},signalLine:{styles:{lineWidth:1,lineColor:"#ff0000"}},dataGrouping:{approximation:"averages"},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span><b> {series.name}</b><br/><span style="color: {point.color}">Klinger</span>: {point.y}<br/><span style="color: {point.series.options.signalLine.styles.lineColor}">Signal</span>: {point.signal}<br/>'}}),s(p.prototype,{areaLinesNames:[],linesApiNames:["signalLine"],nameBase:"Klinger",nameComponents:["fastAvgPeriod","slowAvgPeriod"],pointArrayMap:["y","signal"],parallelArrays:["x","y","signal"],pointValKey:"y"}),e.compose(p),t.registerSeriesType("klinger",p),p}),t(e,"masters/indicators/klinger.src.js",[],function(){})});