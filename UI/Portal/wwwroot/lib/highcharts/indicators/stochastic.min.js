!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/stochastic",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function e(t,e,i,r){t.hasOwnProperty(e)||(t[e]=r.apply(null,i))}e(t=t?t._modules:{},"mixins/reduce-array.js",[],function(){return{minInArray:function(t,i){return t.reduce(function(t,e){return Math.min(t,e[i])},Number.MAX_VALUE)},maxInArray:function(t,i){return t.reduce(function(t,e){return Math.max(t,e[i])},-Number.MAX_VALUE)},getArrayExtremes:function(t,i,r){return t.reduce(function(t,e){return[Math.min(t[0],e[i]),Math.max(t[1],e[r])]},[Number.MAX_VALUE,-Number.MAX_VALUE])}}}),e(t,"mixins/multipe-lines.js",[t["parts/Globals.js"],t["parts/Utilities.js"]],function(t,e){var l=e.defined,c=e.error,u=e.merge,h=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(e){var i=[];return(this.pointArrayMap||[]).forEach(function(t){t!==e&&i.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),i},toYData:function(e){var i=[];return(this.pointArrayMap||[]).forEach(function(t){i.push(e[t])}),i},translate:function(){var r,n=this,t=n.pointArrayMap,a=n.getTranslatedLinesNames();h.prototype.translate.apply(n,arguments),n.points.forEach(function(i){t.forEach(function(t,e){null!==(r=i[t])&&(i[a[e]]=n.yAxis.toPixels(r,!0))})})},drawGraph:function(){var i,r=this,t=r.linesApiNames,n=r.points,a=n.length,o=r.options,e=r.graph,s={options:{gapSize:o.gapSize}},p=[];r.getTranslatedLinesNames(r.pointValKey).forEach(function(t,e){for(p[e]=[];a--;)i=n[a],p[e].push({x:i.x,plotX:i.plotX,plotY:i[t],isNull:!l(i[t])});a=n.length}),t.forEach(function(t,e){p[e]?(r.points=p[e],o[t]?r.options=u(o[t].styles,s):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),r.graph=r["graph"+t],h.prototype.drawGraph.call(r),r["graph"+t]=r.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),r.points=n,r.options=o,r.graph=e,h.prototype.drawGraph.call(r)}}}),e(t,"indicators/stochastic.src.js",[t["parts/Globals.js"],t["parts/Utilities.js"],t["mixins/reduce-array.js"],t["mixins/multipe-lines.js"]],function(t,e,i,r){var m=e.isArray,n=e.merge;e=e.seriesType;var y=t.seriesTypes.sma,d=i.getArrayExtremes;e("stochastic","sma",{params:{periods:[14,3]},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'},smoothedLine:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}},n(r,{nameComponents:["periods"],nameBase:"Stochastic",pointArrayMap:["y","smoothed"],parallelArrays:["x","y","smoothed"],pointValKey:"y",linesApiNames:["smoothedLine"],init:function(){y.prototype.init.apply(this,arguments),this.options=n({smoothedLine:{styles:{lineColor:this.color}}},this.options)},getValues:function(t,e){var i=e.periods[0];e=e.periods[1];var r,n=t.xData,a=(t=t.yData)?t.length:0,o=[],s=[],p=[],l=null;if(!(a<i)&&m(t[0])&&4===t[0].length){for(r=i-1;r<a;r++){var c=t.slice(r-i+1,r+1),u=d(c,2,1),h=u[0];c=(c=t[r][3]-h)/(h=u[1]-h)*100,s.push(n[r]),p.push([c,null]),i-1+(e-1)<=r&&(l=(l=y.prototype.getValues.call(this,{xData:s.slice(-e),yData:p.slice(-e)},{period:e})).yData[0]),o.push([n[r],c,l]),p[p.length-1][1]=l}return{values:o,xData:s,yData:p}}}}))}),e(t,"masters/indicators/stochastic.src.js",[],function(){})});