!function(a){"object"==typeof module&&module.exports?module.exports=a.default=a:"function"==typeof define&&define.amd?define("highcharts/indicators/acceleration-bands",["highcharts","highcharts/modules/stock"],function(t){return a(t),a.Highcharts=t,a}):a("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){function a(t,a,e,i){t.hasOwnProperty(a)||(t[a]=i.apply(null,e))}a(t=t?t._modules:{},"mixins/multipe-lines.js",[t["parts/Globals.js"],t["parts/Utilities.js"]],function(t,a){var l=a.defined,c=a.error,h=a.merge,u=t.seriesTypes.sma;return{pointArrayMap:["top","bottom"],pointValKey:"top",linesApiNames:["bottomLine"],getTranslatedLinesNames:function(a){var e=[];return(this.pointArrayMap||[]).forEach(function(t){t!==a&&e.push("plot"+t.charAt(0).toUpperCase()+t.slice(1))}),e},toYData:function(a){var e=[];return(this.pointArrayMap||[]).forEach(function(t){e.push(a[t])}),e},translate:function(){var i,n=this,t=n.pointArrayMap,o=n.getTranslatedLinesNames();u.prototype.translate.apply(n,arguments),n.points.forEach(function(e){t.forEach(function(t,a){null!==(i=e[t])&&(e[o[a]]=n.yAxis.toPixels(i,!0))})})},drawGraph:function(){var e,i=this,t=i.linesApiNames,n=i.points,o=n.length,s=i.options,a=i.graph,r={options:{gapSize:s.gapSize}},p=[];i.getTranslatedLinesNames(i.pointValKey).forEach(function(t,a){for(p[a]=[];o--;)e=n[o],p[a].push({x:e.x,plotX:e.plotX,plotY:e[t],isNull:!l(e[t])});o=n.length}),t.forEach(function(t,a){p[a]?(i.points=p[a],s[t]?i.options=h(s[t].styles,r):c('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names." at mixin/multiple-line.js:34'),i.graph=i["graph"+t],u.prototype.drawGraph.call(i),i["graph"+t]=i.graph):c('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=n,i.options=s,i.graph=a,u.prototype.drawGraph.call(i)}}}),a(t,"indicators/acceleration-bands.src.js",[t["parts/Globals.js"],t["parts/Utilities.js"],t["mixins/multipe-lines.js"]],function(t,a,e){var y=a.correctFloat,i=a.merge;a=a.seriesType;var g=t.seriesTypes.sma;a("abands","sma",{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}},i(e,{pointArrayMap:["top","middle","bottom"],pointValKey:"middle",nameBase:"Acceleration Bands",nameComponents:["period","factor"],linesApiNames:["topLine","bottomLine"],getValues:function(t,a){var e=a.period,i=a.factor;a=a.index;var n,o,s,r,p,l=t.xData,c=(t=t.yData)?t.length:0,h=[],u=[],d=[],f=[],m=[];if(!(c<e)){for(n=0;n<=c;n++){n<c&&(o=t[n][2],r=t[n][1],s=i,o=y(r-o)/(y(r+o)/2)*1e3*s,h.push(t[n][1]*y(1+2*o)),u.push(t[n][2]*y(1-2*o))),e<=n&&(o=l.slice(n-e,n),p=t.slice(n-e,n),s=g.prototype.getValues.call(this,{xData:o,yData:h.slice(n-e,n)},{period:e}),r=g.prototype.getValues.call(this,{xData:o,yData:u.slice(n-e,n)},{period:e}),o=(p=g.prototype.getValues.call(this,{xData:o,yData:p},{period:e,index:a})).xData[0],s=s.yData[0],r=r.yData[0],p=p.yData[0],d.push([o,s,p,r]),f.push(o),m.push([s,p,r]))}return{values:d,xData:f,yData:m}}}}))}),a(t,"masters/indicators/acceleration-bands.src.js",[],function(){})});