!function(o){"object"==typeof module&&module.exports?module.exports=o.default=o:"function"==typeof define&&define.amd?define("highcharts/indicators/aroon-oscillator",["highcharts","highcharts/modules/stock"],function(t){return o(t),o.Highcharts=t,o}):o("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function o(t,o,e,i){t.hasOwnProperty(o)||(t[o]=i.apply(null,e),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:o,module:t[o]}})))}o(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e){const y=t.seriesTypes["sma"]["prototype"],{defined:g,error:m,merge:A}=e;var o;{t=o=o||{};const r=[],p=["bottomLine"],l=["top","bottom"],h=["top"];function x(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function v(t,o){const e=[];return(t.pointArrayMap||[]).forEach(t=>{t!==o&&e.push(x(t))}),e}function i(){const e=this,t=e.pointValKey,o=e.linesApiNames,i=e.areaLinesNames,s=e.points,a=e.options,n=e.graph,r={options:{gapSize:a.gapSize}},p=[],l=v(e,t);let h=s.length,c;var u,d,f;l.forEach((t,o)=>{for(p[o]=[];h--;)c=s[h],p[o].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!g(c[t])});h=s.length}),e.userOptions.fillColor&&i.length&&(u=l.indexOf(x(i[0])),u=p[u],d=1===i.length?s:p[l.indexOf(x(i[1]))],f=e.color,e.points=d,e.nextPoints=u,e.color=e.userOptions.fillColor,e.options=A(s,r),e.graph=e.area,e.fillGraph=!0,y.drawGraph.call(e),e.area=e.graph,delete e.nextPoints,delete e.fillGraph,e.color=f),o.forEach((t,o)=>{p[o]?(e.points=p[o],a[t]?e.options=A(a[t].styles,r):m('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),e.graph=e["graph"+t],y.drawGraph.call(e),e["graph"+t]=e.graph):m('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),e.points=s,e.options=a,e.graph=n,y.drawGraph.call(e)}function s(t){let o,e=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((o=y.getGraphPath.call(this,this.nextPoints))&&o.length){o[0][0]="L",e=y.getGraphPath.call(this,t);for(let t=(i=o.slice(0,e.length)).length-1;0<=t;t--)e.push(i[t])}}else e=y.getGraphPath.apply(this,arguments);return e}function a(o){const e=[];return(this.pointArrayMap||[]).forEach(t=>{e.push(o[t])}),e}function n(){const t=this.pointArrayMap;let i,s;i=v(this),y.translate.apply(this,arguments),this.points.forEach(e=>{t.forEach((t,o)=>{s=e[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(e[i[o]]=this.yAxis.toPixels(s,!0))})})}t.compose=function(t){if(e.pushUnique(r,t)){const o=t.prototype;o.linesApiNames=o.linesApiNames||p.slice(),o.pointArrayMap=o.pointArrayMap||l.slice(),o.pointValKey=o.pointValKey||"top",o.areaLinesNames=o.areaLinesNames||h.slice(),o.drawGraph=i,o.getGraphPath=s,o.toYData=a,o.translate=n}return t}}return o}),o(t,"Stock/Indicators/AroonOscillator/AroonOscillatorIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o,e){var i=o.seriesTypes["aroon"];const{extend:s,merge:a}=e;class n extends i{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(t,o){const e=[],i=[],s=[];let a,n;var r=super.getValues.call(this,t,o);for(n=0;n<r.yData.length;n++)a=r.yData[n][0]-r.yData[n][1],e.push([r.xData[n],a]),i.push(r.xData[n]),s.push(a);return{values:e,xData:i,yData:s}}}return n.defaultOptions=a(i.defaultOptions,{tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b>: {point.y}'}}),s(n.prototype,{nameBase:"Aroon Oscillator",linesApiNames:[],pointArrayMap:["y"],pointValKey:"y"}),t.compose(i),o.registerSeriesType("aroonoscillator",n),n}),o(t,"masters/indicators/aroon-oscillator.src.js",[],function(){})});