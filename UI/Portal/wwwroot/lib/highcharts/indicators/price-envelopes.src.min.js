!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/price-envelopes",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o){const f=t.seriesTypes["sma"]["prototype"],{defined:y,error:g,merge:v}=o;var e;{t=e=e||{};const r=[],p=["bottomLine"],l=["top","bottom"],h=["top"];function b(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function x(t,e){const o=[];return(t.pointArrayMap||[]).forEach(t=>{t!==e&&o.push(b(t))}),o}function i(){const o=this,t=o.pointValKey,e=o.linesApiNames,i=o.areaLinesNames,s=o.points,n=o.options,a=o.graph,r={options:{gapSize:n.gapSize}},p=[],l=x(o,t);let h=s.length,c;var d,u,m;l.forEach((t,e)=>{for(p[e]=[];h--;)c=s[h],p[e].push({x:c.x,plotX:c.plotX,plotY:c[t],isNull:!y(c[t])});h=s.length}),o.userOptions.fillColor&&i.length&&(d=l.indexOf(b(i[0])),d=p[d],u=1===i.length?s:p[l.indexOf(b(i[1]))],m=o.color,o.points=u,o.nextPoints=d,o.color=o.userOptions.fillColor,o.options=v(s,r),o.graph=o.area,o.fillGraph=!0,f.drawGraph.call(o),o.area=o.graph,delete o.nextPoints,delete o.fillGraph,o.color=m),e.forEach((t,e)=>{p[e]?(o.points=p[e],n[t]?o.options=v(n[t].styles,r):g('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),o.graph=o["graph"+t],f.drawGraph.call(o),o["graph"+t]=o.graph):g('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),o.points=s,o.options=n,o.graph=a,f.drawGraph.call(o)}function s(t){let e,o=[],i;if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=f.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L",o=f.getGraphPath.call(this,t);for(let t=(i=e.slice(0,o.length)).length-1;0<=t;t--)o.push(i[t])}}else o=f.getGraphPath.apply(this,arguments);return o}function n(e){const o=[];return(this.pointArrayMap||[]).forEach(t=>{o.push(e[t])}),o}function a(){const t=this.pointArrayMap;let i,s;i=x(this),f.translate.apply(this,arguments),this.points.forEach(o=>{t.forEach((t,e)=>{s=o[t],null!==(s=this.dataModify?this.dataModify.modifyValue(s):s)&&(o[i[e]]=this.yAxis.toPixels(s,!0))})})}t.compose=function(t){if(o.pushUnique(r,t)){const e=t.prototype;e.linesApiNames=e.linesApiNames||p.slice(),e.pointArrayMap=e.pointArrayMap||l.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||h.slice(),e.drawGraph=i,e.getGraphPath=s,e.toYData=n,e.translate=a}return t}}return e}),e(t,"Stock/Indicators/PriceEnvelopes/PriceEnvelopesIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o){var i=e.seriesTypes["sma"];const{extend:s,isArray:b,merge:n}=o;class a extends i{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}init(){super.init.apply(this,arguments),this.options=n({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(t,e){const o=e.period,i=e.topBand,s=e.bottomBand,n=t.xData,a=t.yData,r=a?a.length:0,p=[],l=[],h=[];let c,d,u,m,f,y,g,v;if(!(n.length<o)&&b(a[0])&&4===a[0].length){for(v=o;v<=r;v++)f=n.slice(v-o,v),y=a.slice(v-o,v),m=(g=super.getValues({xData:f,yData:y},e)).xData[0],d=(c=g.yData[0])*(1+i),u=c*(1-s),p.push([m,d,c,u]),l.push(m),h.push([d,c,u]);return{values:p,xData:l,yData:h}}}}return a.defaultOptions=n(i.defaultOptions,{marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),s(a.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"}),t.compose(a),e.registerSeriesType("priceenvelopes",a),a}),e(t,"masters/indicators/price-envelopes.src.js",[],function(){})});