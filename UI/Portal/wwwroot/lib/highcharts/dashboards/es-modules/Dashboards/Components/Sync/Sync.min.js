"use strict";import SyncEmitter from"./Emitter.js";import SyncHandler from"./Handler.js";class Sync{constructor(e,t=Sync.defaultHandlers){this.component=e,this.syncConfig=t,this.registeredSyncHandlers={},this.registeredSyncEmitters={},this.isSyncing=!1,this.listeners=[]}registerSyncEmitter(e){var t=e["id"];this.registeredSyncEmitters[t]=e}isRegisteredEmitter(e){return Boolean(this.registeredSyncEmitters[e])}registerSyncHandler(e){var t=e["id"];this.registeredSyncHandlers[t]=e}isRegisteredHandler(e){return Boolean(this.registeredSyncHandlers[e])}start(){const{syncConfig:s,component:r}=this;for(const i of Object.keys(s))if(s[i]){let{emitter:e,handler:t}=s[i];if(t){"function"==typeof(t="boolean"==typeof t?Sync.defaultHandlers[i].handler:t)&&(t=[i,void 0,t]);const n=new SyncHandler(...t);this.isRegisteredHandler(n.id)||(this.registerSyncHandler(n),void 0!==t[1]?n.create(r):n.register(r))}if(e){"function"==typeof(e="boolean"==typeof e?Sync.defaultHandlers[i].emitter:e)&&(e=[i,e]);const c=new SyncEmitter(...e);this.isRegisteredEmitter(c.id)||(this.registerSyncEmitter(c),c.create(r))}}this.isSyncing=!0,this.listeners.push(r.on("update",()=>this.stop()))}stop(){const{component:e,listeners:s,registeredSyncHandlers:t,registeredSyncEmitters:r}=this;Object.keys(t).forEach(e=>{t[e].remove(),delete t[e]}),Object.keys(r).forEach(e=>{r[e].remove(),delete r[e]}),this.isSyncing=!1;for(let e=0,t=s.length;e<t;++e)s[e]();this.listeners.length=0,this.listeners.push(e.on("afterUpdate",()=>{this.start()}))}}Sync.defaultHandlers={};export default Sync;