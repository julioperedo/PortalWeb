import SharedState from"./SharedComponentState.js";class ComponentGroup{static getComponentGroup(o){if(this.componentGroups[o])return this.componentGroups[o]}static addComponentGroup(o){var t=o["id"];this.componentGroups[t]||(this.componentGroups[t]=o)}static getGroupsFromComponent(n){const o=Object.keys(this.componentGroups);return o.reduce((o,t)=>{const e=this.getComponentGroup(t);return e&&-1<e.components.indexOf(n)&&o.push(e),o},[])}constructor(o){this.state=new SharedState,this.components=[],this.id=o,ComponentGroup.addComponentGroup(this)}addComponents(o){for(;o.length;){var t=o.pop();if(!t)break;-1===this.components.indexOf(t)&&this.components.push(t)}}removeComponents(o){for(;o.length;){var t=o.pop();if(!t)break;t=this.components.indexOf(t);-1<t&&this.components.splice(t,1)}}getSharedState(){return this.state}on(){throw new Error("Method not implemented.")}emit(){throw new Error("Method not implemented.")}}ComponentGroup.componentGroups={};export default ComponentGroup;