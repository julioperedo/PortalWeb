"use strict";import Globals from"../Globals.js";import Cell from"./Cell.js";import GUIElement from"./GUIElement.js";import U from"../../Core/Utilities.js";import EditGlobals from"../EditMode/EditGlobals.js";const{pick,defined,merge,objectEach,fireEvent}=U;class Row extends GUIElement{static fromJSON(e,o){if(o){e=e.options;let t=e.containerId||"";return t&&o.copyId&&(t=t+"_"+o.copyId),new Row(o,{id:t,parentContainerId:o.container&&o.container.id||e.parentContainerId,cellsJSON:e.cells,style:e.style})}}static setContainerHeight(t,e){e&&(t.style.height=e+"px")}constructor(t,e,o){super(),this.type=Globals.guiElementType.row,this.layout=t,this.cells=[],this.options=e,this.isVisible=!0;var l=document.getElementById(e.parentContainerId||"")||t.container,s=t.options||{},i=s.rowClassName||"";this.container=this.getElementContainer({render:t.board.guiEnabled,parentContainer:l,attribs:{id:e.id,className:Globals.classNames.row+" "+i},element:o,elementId:e.id,style:merge(s.style,e.style)}),this.options.cells&&this.setCells(),e.cellsJSON&&!this.cells.length&&this.setCellsFromJSON(e.cellsJSON)}setCells(){var t=this,e=(t.layout.options||{}).cellClassName||"",o=pick(t.options.cells,t.container&&t.container.getElementsByClassName(e))||[];let l,s,i;for(s=0,i=o.length;s<i;++s)l=o[s],t.addCell(t.layout.board.guiEnabled?l:{id:""},l instanceof HTMLElement?l:void 0)}setCellsFromJSON(o){const l=[];let s,i;for(let t=0,e=o.length;t<e;++t)i=o[t],(s=Cell.fromJSON({$class:i.$class,options:{containerId:i.options.containerId,parentContainerId:i.options.parentContainerId,width:i.options.width,height:i.options.height,style:i.options.style,layoutJSON:i.options.layoutJSON,mountedComponentJSON:void 0}},this))&&(this.cells.push(s),i.options.mountedComponentJSON&&l.push({cell:s,mountedComponentJSON:i.options.mountedComponentJSON}));for(let t=0,e=l.length;t<e;++t)l[t].cell.mountComponentFromJSON(l[t].mountedComponentJSON,(s||{}).container)}addCell(t,e,o){var l=this,t=new Cell(l,t,e);return defined(o)?l.mountCell(t,o):l.cells.push(t),l.layout.board.editMode&&l.layout.board.editMode.setCellEvents(t),t}destroy(){var o=this;const t=o["layout"];for(let t=0,e=o.cells.length;t<e;++t)o.cells[t]&&o.cells[t].destroy();o.layout&&(o.layout.unmountRow(o),super.destroy(),0===t.rows.length&&t.destroy())}toJSON(){const o=this,t=(o.layout.container||{}).id||"",l=[];for(let t=0,e=o.cells.length;t<e;++t)l.push(o.cells[t].toJSON());return{$class:"Dashboards.Layout.Row",options:{containerId:o.container.id,parentContainerId:t,cells:l,style:o.options.style}}}getOptions(){const o=[];for(let t=0,e=this.cells.length;t<e;++t)o.push(this.cells[t].getOptions());return{id:this.options.id,style:this.options.style,cells:o}}setSize(t){this.cells;Row.setContainerHeight(this.container,t)}getCellIndex(o){for(let t=0,e=this.cells.length;t<e;++t)if(this.cells[t].id===o.id)return t}mountCell(t,e=0){const o=this,l=o.cells[e],s=o.cells[e-1];t.container&&(l&&l.container?l.container.parentNode.insertBefore(t.container,l.container):s&&s.container?s.container.parentNode.insertBefore(t.container,s.container.nextSibling):s||l||!o.container||o.container.appendChild(t.container),o.cells.splice(e,0,t),t.row=o,setTimeout(()=>{fireEvent(o,"cellChange",{row:o,cell:t})},0))}unmountCell(t){var e=this.getCellIndex(t);defined(e)&&this.cells.splice(e,1),setTimeout(()=>{fireEvent(this,"cellChange",{row:this,cell:t})},0)}getVisibleCells(){const o=[];for(let t=0,e=this.cells.length;t<e;++t)this.cells[t].isVisible&&o.push(this.cells[t]);return o}changeVisibility(t=!0,e){var o=this;super.changeVisibility(t,e),o.layout.getVisibleRows().length?o.isVisible&&!o.layout.isVisible&&o.layout.show():o.layout.hide()}show(){this.changeVisibility(!0,"flex")}setHighlight(t){if(this.container){const e=this.container,o=e.classList.contains(EditGlobals.classNames.rowContextHighlight);t||o?t&&o&&e.classList.remove(EditGlobals.classNames.rowContextHighlight):e.classList.add(EditGlobals.classNames.rowContextHighlight)}}getRowLevels(){const o={},e=[];var l,s;for(let t=0,e=this.cells.length;t<e;++t)(l=this.cells[t]).isVisible&&(s=GUIElement.getOffsets(l),o[s.top]||(o[s.top]={top:s.top,bottom:s.bottom,cells:[]}),o[s.top].bottom<s.bottom&&(o[s.top].bottom=s.bottom),o[s.top].cells.push(l));return objectEach(o,t=>{e.push(t)}),e}getRowLevelInfo(o){var l=this.getRowLevels();let s;for(let t=0,e=l.length;t<e;++t)l[t].top<=o&&l[t].bottom>o&&(s={index:t,rowLevels:l,rowLevel:l[t]});return s}}export default Row;