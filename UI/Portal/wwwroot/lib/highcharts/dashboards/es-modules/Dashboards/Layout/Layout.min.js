import DU from"../Utilities.js";const uniqueKey=DU["uniqueKey"];import U from"../../Core/Utilities.js";const{pick,defined}=U;import Row from"./Row.js";import GUIElement from"./GUIElement.js";import Globals from"../Globals.js";class Layout extends GUIElement{static fromJSON(t,e,s){var o=t.options,t=document.getElementById(t.options.containerId),t=new Layout(e,{id:o.containerId,copyId:t?uniqueKey():"",parentContainerId:o.parentContainerId||e.container.id,rowsJSON:o.rows,style:o.style},s);return t&&!s&&e.layouts.push(t),t}static importLocal(t,e){t=localStorage.getItem(Globals.classNamePrefix+t);let s;return s=t?Layout.fromJSON(JSON.parse(t),e):s}constructor(t,e,s){super(),this.type=Globals.guiElementType.layout,this.board=t,this.rows=[],this.options=e,this.isVisible=!0;var o=s?s.container:document.getElementById(e.parentContainerId||"")||t.layoutsWrapper,s=(s?(this.parentCell=s,this.level=s.row.layout.level+1):this.level=0,e.copyId&&(this.copyId=e.copyId),this.options||{}),s=s.rowClassName||"";this.container=this.getElementContainer({render:t.guiEnabled,parentContainer:o,attribs:{id:(e.id||"")+(this.copyId?"_"+this.copyId:""),className:Globals.classNames.layout+" "+s},elementId:e.id,style:this.options.style}),this.options.rows&&this.setRows(),e.rowsJSON&&!this.rows.length&&this.setRowsFromJSON(e.rowsJSON)}setRows(){var t=this,e=pick(t.options.rows,t.container&&t.container.getElementsByClassName(t.options.rowClassName||""))||[];let s,o,i;for(o=0,i=e.length;o<i;++o)s=e[o],t.addRow(t.board.guiEnabled?s:{},s instanceof HTMLElement?s:void 0)}setRowsFromJSON(s){var o;for(let t=0,e=s.length;t<e;++t)(o=Row.fromJSON(s[t],this))&&this.rows.push(o)}addRow(t,e,s){var o=this,t=new Row(o,t,e);return defined(s)?o.mountRow(t,s):o.rows.push(t),o.board.editMode&&o.board.editMode.setRowEvents(t),t}destroy(){var e=this;for(let t=e.board.layouts.length-1;0<=t;t--)e.board.layouts[t]===e&&e.board.layouts.splice(t,1);for(let t=e.rows.length-1;0<=t;t--)e.rows[t].destroy();e.parentCell&&e.parentCell.destroy(),super.destroy()}exportLocal(){localStorage.setItem(Globals.classNamePrefix+this.options.id,JSON.stringify(this.toJSON()))}getRowIndex(s){for(let t=0,e=this.rows.length;t<e;++t)if(this.rows[t]===s)return t}mountRow(t,e){const s=this.rows[e],o=this.rows[e-1];t.container&&(s&&s.container?s.container.parentNode.insertBefore(t.container,s.container):o&&o.container&&o.container.parentNode.insertBefore(t.container,o.container.nextSibling),this.rows.splice(e,0,t),t.layout=this)}unmountRow(t){t=this.getRowIndex(t);defined(t)&&this.rows.splice(t,1)}getVisibleRows(){const s=[];for(let t=0,e=this.rows.length;t<e;++t)this.rows[t].isVisible&&s.push(this.rows[t]);return s}changeVisibility(t=!0){var e=this;super.changeVisibility(t),e.parentCell&&(e.isVisible&&!e.parentCell.isVisible?e.parentCell.show():!e.isVisible&&e.parentCell.isVisible&&e.parentCell.hide())}toJSON(){const s=this,t=(s.board.container||{}).id||"",o=[];for(let t=0,e=s.rows.length;t<e;++t)o.push(s.rows[t].toJSON());return{$class:"Dashboards.Layout",options:{containerId:s.container.id,parentContainerId:t,rows:o,style:s.options.style}}}getOptions(){const s=[];for(let t=0,e=this.rows.length;t<e;++t)s.push(this.rows[t].getOptions());return{id:this.options.id,layoutClassName:this.options.layoutClassName,rowClassName:this.options.rowClassName,cellClassName:this.options.cellClassName,style:this.options.style,rows:s}}}export default Layout;