"use strict";import U from"../../Core/Utilities.js";const addEvent=U["addEvent"],configs={emitters:{highlightEmitter:["highlightEmitter",function(){if("DataGrid"===this.type){var{dataGrid:t,board:e}=this;if(e){const i=e["dataCursor"],o=[];if(t)return o.push(addEvent(t.container,"dataGridHover",t=>{var e=this.connector&&this.connector.table;if(e){const o=t.row;t=o.querySelector(`.highcharts-datagrid-cell[data-original-data="${o.dataset.rowXIndex}"]`);i.emitCursor(e,{type:"position",row:parseInt(o.dataset.rowIndex,10),column:t?t.dataset.columnName:void 0,state:"dataGrid.hoverRow"})}})),o.push(addEvent(t.container,"mouseout",()=>{var t=this.connector&&this.connector.table;t&&i.emitCursor(t,{type:"position",state:"dataGrid.hoverOut"})})),function(){o.forEach(t=>t())}}}}]},handlers:{highlightHandler:["highlightHandler",void 0,function(){const o=this["board"],i=t=>{t=t.cursor;if("position"===t.type){var t=t["row"];const e=this["dataGrid"];void 0===t||!e||(t=e.container.querySelector(`.highcharts-datagrid-row[data-row-index="${t}"]`))&&(e.toggleRowHighlight(t),e.hoveredRow=t)}},r=()=>{const t=this["dataGrid"];t&&t.toggleRowHighlight(void 0)},t=()=>{const t=o["dataCursor"];var e;!t||(e=this.connector&&this.connector.table)&&(t.addListener(e.id,"point.mouseOver",i),t.addListener(e.id,"point.mouseOut",r))},e=()=>{const t=o.dataCursor;var e=this.connector&&this.connector.table;e&&(t.addListener(e.id,"point.mouseOver",i),t.addListener(e.id,"point.mouseOut",r))};o&&(t(),this.on("setConnector",()=>e()),this.on("afterSetConnector",()=>t()))}],extremesHandler:function(){const o=this["board"],i=t=>{var t=t.cursor;"position"===t.type&&this.dataGrid&&"number"==typeof t?.row&&(t=t["row"],this.dataGrid.scrollToRow(t))},t=()=>{const t=o["dataCursor"];var e;!t||(e=this.connector&&this.connector.table)&&t.addListener(e.id,"xAxis.extremes.min",i)},e=()=>{var t=this.connector&&this.connector.table;const e=o["dataCursor"];t&&e.removeListener(t.id,"xAxis.extremes.min",i)};o&&(t(),this.on("setConnector",()=>e()),this.on("afterSetConnector",()=>t()))},visibilityHandler:function(){const i=this,o=i["board"],r=t=>{const e=t.cursor,o=i.dataGrid;o&&"position"===e.type&&e.column&&(t=e.column,o.update({columns:{[t]:{show:"series.hide"!==e.state}}}))},t=()=>{const t=o["dataCursor"];var e;!t||(e=this.connector&&this.connector.table)&&(t.addListener(e.id,"series.show",r),t.addListener(e.id,"series.hide",r))},e=()=>{var t=this.connector&&this.connector.table;const e=o["dataCursor"];t&&(e.removeListener(t.id,"series.show",r),e.removeListener(t.id,"series.hide",r))};o&&(t(),this.on("setConnector",()=>e()),this.on("afterSetConnector",()=>t()))}}},defaults={highlight:{emitter:configs.emitters.highlightEmitter,handler:configs.handlers.highlightHandler},extremes:{handler:configs.handlers.extremesHandler},visibility:{handler:configs.handlers.visibilityHandler}};export default defaults;