"use strict";class SyncHandler{static register(t){var e=t["id"];this.registry[e]=t}static get(t){return this.registry[t]}constructor(t,e,i){this.id=t,this.presentationStateTrigger=e,this.func=i,SyncHandler.register(this)}create(e){const t=e["activeGroup"],i=this["func"];t&&this.presentationStateTrigger&&(this.callback=t.getSharedState().on(this.presentationStateTrigger,function(t){e.id!==(t.detail?t.detail.sender:void 0)&&i.call(e,t)}))}register(t){const e=this["func"];this.callback=e.call(t)}remove(){this.callback&&this.callback()}}SyncHandler.registry={};export default SyncHandler;