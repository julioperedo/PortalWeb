"use strict";import FormulaProcessor from"../FormulaProcessor.js";function getModeMap(e,r){const s={},o=FormulaProcessor.getArgumentsValues(e,r);for(let e=0,r=o.length,t;e<r;++e)switch(typeof(t=o[e])){case"number":isNaN(t)||(s[t]=(s[t]||0)+1);break;case"object":for(let e=0,r=t.length,o;e<r;++e)"number"!=typeof(o=t[e])||isNaN(o)||(s[o]=(s[o]||0)+1)}return s}function MULT(e,r){var s=getModeMap(e,r),a=Object.keys(s);if(!a.length)return NaN;let n=[parseFloat(a[0])],l=s[a[0]];for(let e=1,r=a.length,o,t;e<r;++e)t=s[o=a[e]],l<t?(n=[parseFloat(o)],l=t):l===t&&n.push(parseFloat(o));return 1<l?n:NaN}function SNGL(e,r){var a=getModeMap(e,r),n=Object.keys(a);if(!n.length)return NaN;let l=parseFloat(n[0]),c=a[n[0]];for(let e=1,r=n.length,o,t,s;e<r;++e)s=a[o=n[e]],c<s?(l=parseFloat(o),c=s):c===s&&(t=parseFloat(o),l>t&&(l=t,c=s));return 1<c?l:NaN}FormulaProcessor.registerProcessorFunction("MODE",SNGL),FormulaProcessor.registerProcessorFunction("MODE.MULT",MULT),FormulaProcessor.registerProcessorFunction("MODE.SNGL",SNGL);const MODE={MULT:MULT,SNGL:SNGL};export default MODE;