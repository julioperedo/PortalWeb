"use strict";import U from"../../Core/Utilities.js";const{addEvent,fireEvent,merge}=U;class DataModifier{benchmark(e,t){const i=[],r=this,o=()=>{r.modifyTable(e),r.emit({type:"afterBenchmarkIteration"})};const n=merge({iterations:1},t)["iterations"],a=(r.on("afterBenchmarkIteration",()=>{i.length===n?r.emit({type:"afterBenchmark",results:i}):o()}),{startTime:0,endTime:0});return r.on("modify",()=>{a.startTime=window.performance.now()}),r.on("afterModify",()=>{a.endTime=window.performance.now(),i.push(a.endTime-a.startTime)}),o(),i}emit(e){fireEvent(this,e.type,e)}modify(i,r){const o=this;return new Promise((e,t)=>{i.modified===i&&(i.modified=i.clone(!1,r));try{e(o.modifyTable(i,r))}catch(e){o.emit({type:"error",detail:r,table:i}),t(e)}})}modifyCell(e,t,i,r,o){return this.modifyTable(e)}modifyColumns(e,t,i,r){return this.modifyTable(e)}modifyRows(e,t,i,r){return this.modifyTable(e)}on(e,t){return addEvent(this,e,t)}}!function(i){i.types={},i.registerType=function(e,t){return!!e&&!i.types[e]&&!!(i.types[e]=t)}}(DataModifier=DataModifier||{});export default DataModifier;