"use strict";import DataModifier from"./DataModifier.js";import DataTable from"../DataTable.js";import U from"../../Core/Utilities.js";const merge=U["merge"];class SortModifier extends DataModifier{static ascending(e,o){return(e||0)<(o||0)?-1:(o||0)<(e||0)?1:0}static descending(e,o){return(o||0)<(e||0)?-1:(e||0)<(o||0)?1:0}constructor(e){super(),this.options=merge(SortModifier.defaultOptions,e)}getRowReferences(e){const t=e.getRows(),i=[];for(let e=0,o=t.length;e<o;++e)i.push({index:e,row:t[e]});return i}modifyCell(e,o,t,i,r){var n=this,{orderByColumn:d,orderInColumn:s}=n.options;return o===d&&(s?(e.modified.setCell(o,t,i),e.modified.setColumn(s,n.modifyTable(new DataTable({columns:e.getColumns([d,s])})).modified.getColumn(s))):n.modifyTable(e,r)),e}modifyColumns(e,o,t,i){const r=this,{orderByColumn:n,orderInColumn:d}=r.options,s=Object.keys(o);return-1<s.indexOf(n)&&(d&&o[s[0]].length?(e.modified.setColumns(o,t),e.modified.setColumn(d,r.modifyTable(new DataTable({columns:e.getColumns([n,d])})).modified.getColumn(d))):r.modifyTable(e,i)),e}modifyRows(e,o,t,i){var r=this,{orderByColumn:n,orderInColumn:d}=r.options;return d&&o.length?(e.modified.setRows(o,t),e.modified.setColumn(d,r.modifyTable(new DataTable({columns:e.getColumns([n,d])})).modified.getColumn(d))):r.modifyTable(e,i),e}modifyTable(e,o){var t=this;t.emit({type:"modify",detail:o,table:e});const i=e.getColumnNames(),r=e.getRowCount(),n=this.getRowReferences(e),{direction:d,orderByColumn:s,orderInColumn:m}=t.options,l="asc"===d?SortModifier.ascending:SortModifier.descending,a=i.indexOf(s),f=e.modified;if(-1!==a&&n.sort((e,o)=>l(e.row[a],o.row[a])),m){const u=[];for(let e=0;e<r;++e)u[n[e].index]=e;f.setColumns({[m]:u})}else{const c=[];for(let e=0;e<r;++e)c.push(n[e].row);f.setRows(c,0)}return t.emit({type:"afterModify",detail:o,table:e}),e}}SortModifier.defaultOptions={type:"Sort",direction:"desc",orderByColumn:"y"},DataModifier.registerType("Sort",SortModifier);export default SortModifier;