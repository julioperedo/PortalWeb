"use strict";import G from"../Core/Globals.js";const doc=G["doc"];import U from"../Core/Utilities.js";const{createElement,discardElement,merge,objectEach}=U;function ajax(s){const e={json:"application/json",xml:"application/xml",text:"text/plain",octet:"application/octet-stream"},a=new XMLHttpRequest;function t(e,t){s.error&&s.error(e,t)}if(!s.url)return!1;a.open((s.type||"get").toUpperCase(),s.url,!0),s.headers&&s.headers["Content-Type"]||a.setRequestHeader("Content-Type",e[s.dataType||"json"]||e.text),objectEach(s.headers,function(e,t){a.setRequestHeader(t,e)}),s.responseType&&(a.responseType=s.responseType),a.onreadystatechange=function(){let e;if(4===a.readyState){if(200===a.status){if("blob"!==s.responseType&&(e=a.responseText,"json"===s.dataType))try{e=JSON.parse(e)}catch(e){if(e instanceof Error)return t(a,e)}return s.success&&s.success(e,a)}t(a,a.responseText)}},s.data&&"string"!=typeof s.data&&(s.data=JSON.stringify(s.data)),a.send(s.data)}function getJSON(e,t){HttpUtilities.ajax({url:e,success:t,dataType:"json",headers:{"Content-Type":"text/plain"}})}function post(e,t,s){const a=createElement("form",merge({method:"post",action:e,enctype:"multipart/form-data"},s),{display:"none"},doc.body);objectEach(t,function(e,t){createElement("input",{type:"hidden",name:t,value:e},void 0,a)}),a.submit(),discardElement(a)}const HttpUtilities={ajax:ajax,getJSON:getJSON,post:post};export default HttpUtilities;