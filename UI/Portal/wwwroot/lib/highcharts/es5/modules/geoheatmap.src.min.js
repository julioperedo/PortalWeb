!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/modules/geoheatmap",["highcharts"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Series/GeoHeatmap/GeoHeatmapPoint.js",[t["Core/Utilities.js"],t["Core/Series/SeriesRegistry.js"]],function(t,e){var i,a,o=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),e=e.seriesTypes.map.prototype.pointClass,r=t.isNumber;function n(){var t=null!==a&&a.apply(this,arguments)||this;return t.lat=void 0,t.lon=void 0,t.options=void 0,t.series=void 0,t}return o(n,a=e),n.prototype.applyOptions=function(t,e){var o,i,t=a.prototype.applyOptions.call(this,t,e),e=t.options,n=e.lat,e=e.lon;return r(e)&&r(n)&&(o=(i=this.series.options).colsize,i=i.rowsize,t.geometry=t.options.geometry={type:"Polygon",coordinates:[[[o=e-(e=void 0===o?1:o)/2,i=n-(n=void 0===i?1:i)/2],[o+e,i],[o+e,i+n],[o,i+n],[o,i]]]}),t},n}),e(t,"Series/InterpolationUtilities.js",[t["Core/Globals.js"],t["Core/Utilities.js"]],function(t,e){var i=t.doc,n=e.defined,a=e.pick;return{colorFromPoint:function(t,e){var o=e.series.colorAxis;return o?((o=o.toColor(t||0,e).split(")")[0].split("(")[1].split(",").map(function(t){return a(parseFloat(t),parseInt(t,10))}))[3]=255*a(o[3],1),n(t)&&e.visible||(o[3]=0),o):[0,0,0,0]},getContext:function(t){var e=t.canvas,o=t.context;return e&&o?(o.clearRect(0,0,e.width,e.height),o):(t.canvas=i.createElement("canvas"),t.context=t.canvas.getContext("2d",{willReadFrequently:!0})||void 0,t.context)}}}),e(t,"Series/GeoHeatmap/GeoHeatmapSeries.js",[t["Core/Animation/AnimationUtilities.js"],t["Series/GeoHeatmap/GeoHeatmapPoint.js"],t["Core/Globals.js"],t["Series/InterpolationUtilities.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,e,o,i,n,a){var r,s=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),A=t.animObject,T=t.stop,t=o.noop,L=i.colorFromPoint,S=i.getContext,o=n.seriesTypes.map,i=a.addEvent,p=a.extend,H=a.isNumber,l=a.isObject,G=a.merge,R=a.pick;function g(t){return t-360*Math.floor((t+180)/360)}s(h,z=o),h.prototype.update=function(){var t=this;t.options=G(t.options,arguments[0]),t.getInterpolation().enabled&&(t.isDirtyCanvas=!0,t.points.forEach(function(t){t.graphic&&(t.graphic.destroy(),delete t.graphic)})),z.prototype.update.apply(t,arguments)},h.prototype.translate=function(){this.getInterpolation().enabled&&this.image&&!this.isDirty&&!this.isDirtyData||z.prototype.translate.apply(this,arguments)},h.prototype.getInterpolation=function(){return l(this.options.interpolation)?this.options.interpolation:{blur:1,enabled:this.options.interpolation}},h.prototype.drawPoints=function(){var t,e,o,i=this,n=i.chart.mapView,a=i.options;if(i.getInterpolation().enabled&&n&&i.bounds){var r=i.context||S(i),s=i.canvas,p=i.colorAxis,l=i.image,h=i.chart,c=i.points,a=[R(a.colsize,1),R(a.rowsize,1)],d=a[0],u=a[1],a=n.projectedUnitsToPixels({x:i.bounds.x1,y:i.bounds.y2}),y=n.projectedUnitsToPixels({x:i.bounds.x2,y:i.bounds.y1});if(s&&r&&p&&a&&y){var g,m,f,v,b,x={x:a.x,y:a.y,width:y.x-a.x,height:y.y-a.y};if(i.isDirtyCanvas||i.isDirtyData||"Orthographic"===n.projection.options.name){i.isDirtyCanvas=!0;var w=s.width=1+~~(360/d),C=s.height=1+~~(180/u),j=new Uint8ClampedArray(4*(w*C));i.directTouch=!1;for(var D=0;D<c.length;D++){var _=c[D],P=new Uint8ClampedArray(L(_.value,_)),_=_.options,O=_.lon,_=_.lat;H(O)&&H(_)&&j.set(P,4*(P=O,O=_,_=w,t=C,e=d,o=u,Math.ceil(_*(t-1-(O+90)/o)+(P+180)/e)))}var p=i.getInterpolation().blur,y=0===p?1:11*p,a=~~(w*y),p=~~(C*y),y=~~x.width,I=~~x.height,U=new ImageData(j,w,C),a=(s.width=a,s.height=p,r.putImageData(U,0,0),r.globalCompositeOperation="copy",r.drawImage(s,0,0,U.width,U.height,0,0,s.width,s.height),r.getImageData(0,0,s.width,s.height)),p=this.getProjectedImageData(n,y,I,a,s,x.x,x.y),U=new ImageData(p,y,I);r.globalCompositeOperation="copy",s.width=y,s.height=I,r.putImageData(U,0,0)}l?h.renderer.globalAnimation&&h.hasRendered?(g=Number(l.attr("x")),m=Number(l.attr("y")),f=Number(l.attr("width")),v=Number(l.attr("height")),n=G(A(h.renderer.globalAnimation)),b=n.step,n.step=function(){b&&b.apply(this,arguments),function(t,e){l.attr({x:g+(x.x-g)*e.pos,y:m+(x.y-m)*e.pos,width:f+(x.width-f)*e.pos,height:v+(x.height-v)*e.pos})}.apply(this,arguments)},l.attr(G({animator:0},i.isDirtyCanvas?{href:s.toDataURL("image/png",1)}:void 0)).animate({animator:1},n)):(T(l),l.attr(G(x,i.isDirtyCanvas?{href:s.toDataURL("image/png",1)}:void 0))):i.image=h.renderer.image(s.toDataURL("image/png",1)).attr(x).add(i.group),i.isDirtyCanvas=!1}}else z.prototype.drawPoints.apply(i,arguments)},h.prototype.getProjectedImageData=function(t,e,o,i,n,a,r){for(var s=new Uint8ClampedArray(e*o*4),p=R(null==(o=t.projection.options.rotation)?void 0:o[0],0),l=n.width/360,h=-1*n.height/180,c=-1,d=0;d<s.length;d+=4){var u,y=d/4%e,y=(0==y&&c++,t.pixelsToLonLat({x:a+y,y:r+c}));y&&(y.lon>-180-p&&y.lon<180-p&&(y.lon=g(y.lon)),u=(y=[y.lon,y.lat])[0]*l+n.width/2,y=y[1]*h+n.height/2,0<=u&&u<=n.width&&0<=y&&y<=n.height&&(y=Math.floor(y)*n.width*4+4*Math.round(u),s[d]=i.data[y],s[d+1]=i.data[1+y],s[d+2]=i.data[2+y],s[d+3]=i.data[3+y]))}return s},h.prototype.searchPoint=function(t,e){var o=this,i=this.chart,n=i.mapView;if(n&&o.bounds&&o.image&&i.tooltip&&i.tooltip.options.enabled)if(!1===i.pointer.hasDragged&&(+o.image.attr("animator")<=.01||.99<=+o.image.attr("animator"))){var a=n.projectedUnitsToPixels({x:o.bounds.x1,y:o.bounds.y2}),n=n.projectedUnitsToPixels({x:o.bounds.x2,y:o.bounds.y1});if(i.pointer.normalize(t),t.lon&&t.lat&&a&&n&&t.chartX-i.plotLeft>a.x&&t.chartX-i.plotLeft<n.x&&t.chartY-i.plotTop>a.y&&t.chartY-i.plotTop<n.y)return this.searchKDTree({clientX:t.chartX,lon:g(t.lon),lat:t.lat},e,t)}else i.tooltip.destroy()},h.defaultOptions=G(o.defaultOptions,{nullColor:"transparent",tooltip:{pointFormat:"Lat: {point.lat}, Lon: {point.lon}, Value: {point.value}<br/>"},borderWidth:0,colsize:1,rowsize:1,stickyTracking:!0,interpolation:{enabled:!1,blur:1}});var z,a=h;function h(){var t=null!==z&&z.apply(this,arguments)||this;return t.options=void 0,t.data=void 0,t.points=void 0,t.canvas=void 0,t.context=void 0,t.isDirtyCanvas=!0,t}return i(a,"afterDataClassLegendClick",function(){this.isDirtyCanvas=!0,this.drawPoints()}),p(a.prototype,{type:"geoheatmap",applyJitter:t,pointClass:e,pointArrayMap:["lon","lat","value"],kdAxisArray:["lon","lat"]}),n.registerSeriesType("geoheatmap",a),a}),e(t,"masters/modules/geoheatmap.src.js",[],function(){})});