!function(o){"object"==typeof module&&module.exports?module.exports=o.default=o:"function"==typeof define&&define.amd?define("highcharts/modules/flowmap",["highcharts"],function(t){return o(t),o.Highcharts=t,o}):o("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function o(t,o,i,e){t.hasOwnProperty(o)||(t[o]=e.apply(null,i),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:o,module:t[o]}})))}o(t,"Series/FlowMap/FlowMapPoint.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o){var e,i,n=this&&this.__extends||(e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var i in o)o.hasOwnProperty(i)&&(t[i]=o[i])})(t,o)},function(t,o){function i(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}),t=t.seriesTypes.mapline.prototype.pointClass,r=o.pick,s=o.isString,a=o.isNumber;function p(){var t=null!==i&&i.apply(this,arguments)||this;return t.options=void 0,t.series=void 0,t}return n(p,i=t),p.prototype.isValid=function(){var o=!(!this.options.to||!this.options.from);return[this.options.to,this.options.from].forEach(function(t){o=!!(o&&t&&(s(t)||a(r(t[0],t.lat))&&a(r(t[1],t.lon))))}),o},p}),o(t,"Series/FlowMap/FlowMapSeries.js",[t["Series/FlowMap/FlowMapPoint.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o,i){var e,n,r=this&&this.__extends||(e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,o){t.__proto__=o}||function(t,o){for(var i in o)o.hasOwnProperty(i)&&(t[i]=o[i])})(t,o)},function(t,o){function i(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(i.prototype=o.prototype,new i)}),w=this&&this.__spreadArray||function(t,o,i){if(i||2===arguments.length)for(var e,n=0,r=o.length;n<r;n++)!e&&n in o||((e=e||Array.prototype.slice.call(o,0,n))[n]=o[n]);return t.concat(e||Array.prototype.slice.call(o))},u=o.series.prototype.pointClass,s=o.seriesTypes,a=s.column,p=s.map,s=s.mapline,d=i.addEvent,y=i.arrayMax,g=i.arrayMin,v=i.defined,h=i.extend,m=i.isArray,P=i.merge,_=i.pick,x=i.relativeLength,i=(r(b,n=s),b.getLength=function(t,o){return Math.sqrt(t*t+o*o)},b.normalize=function(t,o){var i=this.getLength(t,o);return[t/i,o/i]},b.markerEndPath=function(t,o,i,e){var n,r,s=x(e.width||0,this.getLength(o[0]-t[0],o[1]-t[1])),e=e.markerType||"arrow",a=this.normalize(o[0]-t[0],o[1]-t[1]),p=a[0],a=a[1],h=[];return"arrow"===e&&(n=t[0],r=t[1],h.push(["L",n-=p*s,r-=a*s]),h.push(["L",i[0],i[1]]),n=o[0],r=o[1],h.push(["L",n+=p*s,r+=a*s])),"mushroom"===e&&(n=t[0],r=t[1],e=o[0],t=o[1],o=2*(i[0]-(o=(e-n)/2+n))+o,i=2*(i[1]-(i=(t-r)/2+r))+i,h.push(["L",n-=p*s,r-=a*s]),h.push(["Q",o,i,e+=p*s,t+=a*s])),h},b.prototype.animate=function(t){var o=this.points;t||o.forEach(function(t){if(t.shapeArgs&&m(t.shapeArgs.d)&&t.shapeArgs.d.length){var o=t.shapeArgs.d,i=o[0][1],e=o[0][2];if(i&&e){for(var n=[],r=0;r<o.length;r++){n.push(w([],o[r],!0));for(var s=1;s<o[r].length;s++)n[r][s]=s%2?i:e}t.graphic&&(t.graphic.attr({d:n}),t.graphic.animate({d:o}))}}})},b.prototype.getLinkWidth=function(t){var o=this.options.width,i=t.options.weight||this.options.weight;if(t.options.weight=i,o&&!i)return o;t=this.smallestWeight,o=this.greatestWeight;if(!v(i)||!t||!o)return 0;var e=this.options.minWidth;return(i-t)*(this.options.maxWidth-e)/(o-t||1)+e},b.prototype.autoCurve=function(t,o,i,e,n,r){var s=i-t,a=e-o,i=(i-t)/2+t-n,t=(e-o)/2+o-r,n=180*Math.atan2(s*t-a*i,s*i+a*t)/Math.PI,e=(n=n<0?360+n:n)*Math.PI/180;return.7*-Math.sin(e)},b.prototype.pointAttribs=function(t,o){o=p.prototype.pointAttribs.call(this,t,o);return o.fill=_(t.options.fillColor,t.options.color,"none"===this.options.fillColor?null:this.options.fillColor,this.color),o["fill-opacity"]=_(t.options.fillOpacity,this.options.fillOpacity),o["stroke-width"]=_(t.options.lineWidth,this.options.lineWidth,1),t.options.opacity&&(o.opacity=t.options.opacity),o},b.prototype.translate=function(){var h=this,l=(!this.chart.hasRendered||!this.isDirtyData&&this.hasRendered||(this.processData(),this.generatePoints()),[]),c=0,f=0;this.points.forEach(function(t){function o(){t.series.isDirty=!0}function i(t){if((t=s.get(t))instanceof u&&t.plotX&&t.plotY)return d(t,"update",o),{x:t.plotX,y:t.plotY}}function e(t){return m(t)?{lon:t[0],lat:t[1]}:t}var n,r,s=h.chart,a=s.mapView,p=t.options;"string"==typeof p.from?n=i(p.from):"object"==typeof p.from&&a&&(n=a.lonLatToPixels(e(p.from))),"string"==typeof p.to?r=i(p.to):"object"==typeof p.to&&a&&(r=a.lonLatToPixels(e(p.to))),t.fromPos=n,t.toPos=r,n&&r&&(c+=(n.x+r.x)/2,f+=(n.y+r.y)/2),_(t.options.weight,h.options.weight)&&l.push(_(t.options.weight,h.options.weight))}),this.smallestWeight=g(l),this.greatestWeight=y(l),this.centerOfPoints={x:c/this.points.length,y:f/this.points.length},this.points.forEach(function(t){h.getLinkWidth(t)?(t.fromPos&&(t.plotX=t.fromPos.x,t.plotY=t.fromPos.y),t.shapeType="path",t.shapeArgs=h.getPointShapeArgs(t),t.color=_(t.options.color,t.series.color)):t.shapeArgs={d:[]}})},b.prototype.getPointShapeArgs=function(t){var o=t.fromPos,i=t.toPos;if(!o||!i)return{};var e=this.getLinkWidth(t)/2,n=t.options,r=P(this.options.markerEnd,n.markerEnd),s=_(n.growTowards,this.options.growTowards),a=o.x||0,o=o.y||0,p=i.x||0,h=i.y||0,n=_(n.curveFactor,this.options.curveFactor),l=r&&r.enabled&&r.height||0,c=(v(n)||(n=this.autoCurve(a,o,p,h,this.centerOfPoints.x,this.centerOfPoints.y)),l&&(l=x(l,4*e),u=p-a,c=h-o,f=a+(u*=.5),d=u,u=(f=b.normalize(f+(u=c*=.5)*n-p,o+c+(c=-d)*n-h))[0],d=f[1],p+=u*=l,h+=d*=l),p-a),f=h-o,u=a+(c*=.5),l=o+(f*=.5),d=c,y=b.normalize(c=f,f=-d),g=y[0],y=y[1],m=1+.25*Math.sqrt(n*n),m=(g*=e*m,y*=e*m,u+c*n),u=l+f*n,c=b.normalize(m-a,u-o),d=l=c[0],l=f=c[1],f=-d,n=(l*=e,f*=e,b.normalize(m-p,u-h)),d=(d=n[0],c=-n[1],n=d,s&&(l/=e,f/=e,g/=4,y/=4),{d:[["M",a-l,o-f],["Q",m-g,u-y,p-(c*=e),h-(n*=e)],["L",p+c,h+n],["Q",m+g,u+y,a+l,o+f],["Z"]]}),m=(r&&r.enabled&&d.d&&(s=b.markerEndPath([p-c,h-n],[p+c,h+n],[i.x,i.y],r),(e=d.d).splice.apply(e,w([2,0],s,!1))),t.options.from),g=t.options.to,u=m.lat,y=m.lon,a=g.lat,l=g.lon;return u&&y&&(t.options.from=""+ +u+", ".concat(+y)),a&&l&&(t.options.to=""+ +a+", ".concat(+l)),d},b.defaultOptions=P(s.defaultOptions,{animation:!0,dataLabels:{enabled:!1},fillOpacity:.5,markerEnd:{enabled:!0,height:"40%",width:"40%",markerType:"arrow"},width:1,maxWidth:25,minWidth:5,lineWidth:void 0,tooltip:{headerFormat:'<span style="font-size: 0.8em">{series.name}</span><br/>',pointFormat:"{point.options.from} â†’ {point.options.to}: <b>{point.options.weight}</b>"}}),b);function b(){var t=null!==n&&n.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t.smallestWeight=void 0,t.greatestWeight=void 0,t.centerOfPoints=void 0,t}return h(i.prototype,{pointClass:t,pointArrayMap:["from","to","weight"],drawPoints:a.prototype.drawPoints,useMapGeometry:!0}),o.registerSeriesType("flowmap",i),i}),o(t,"masters/modules/flowmap.src.js",[],function(){})});