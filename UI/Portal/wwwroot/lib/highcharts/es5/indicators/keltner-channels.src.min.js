!function(e){"object"==typeof module&&module.exports?module.exports=e.default=e:"function"==typeof define&&define.amd?define("highcharts/indicators/keltner-channels",["highcharts","highcharts/modules/stock"],function(t){return e(t),e.Highcharts=t,e}):e("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function e(t,e,o,i){t.hasOwnProperty(e)||(t[e]=i.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:e,module:t[e]}})))}e(t,"Stock/Indicators/MultipleLinesComposition.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,o){var e,i,n,r,s,u=t.seriesTypes.sma.prototype,d=o.defined,f=o.error,y=o.merge;function m(t){return"plot"+t.charAt(0).toUpperCase()+t.slice(1)}function g(t,e){var o=[];return(t.pointArrayMap||[]).forEach(function(t){t!==e&&o.push(m(t))}),o}function a(){var o,t,i=this,e=i.pointValKey,n=i.linesApiNames,r=i.areaLinesNames,s=i.points,a=i.options,p=i.graph,l={options:{gapSize:a.gapSize}},h=[],e=g(i,e),c=s.length;e.forEach(function(t,e){for(h[e]=[];c--;)o=s[c],h[e].push({x:o.x,plotX:o.plotX,plotY:o[t],isNull:!d(o[t])});c=s.length}),i.userOptions.fillColor&&r.length&&(t=e.indexOf(m(r[0])),t=h[t],e=1===r.length?s:h[e.indexOf(m(r[1]))],r=i.color,i.points=e,i.nextPoints=t,i.color=i.userOptions.fillColor,i.options=y(s,l),i.graph=i.area,i.fillGraph=!0,u.drawGraph.call(i),i.area=i.graph,delete i.nextPoints,delete i.fillGraph,i.color=r),n.forEach(function(t,e){h[e]?(i.points=h[e],a[t]?i.options=y(a[t].styles,l):f('Error: "There is no '+t+' in DOCS options declared. Check if linesApiNames are consistent with your DOCS line names."'),i.graph=i["graph"+t],u.drawGraph.call(i),i["graph"+t]=i.graph):f('Error: "'+t+" doesn't have equivalent in pointArrayMap. To many elements in linesApiNames relative to pointArrayMap.\"")}),i.points=s,i.options=a,i.graph=p,u.drawGraph.call(i)}function p(t){var e,o=[];if(t=t||this.points,this.fillGraph&&this.nextPoints){if((e=u.getGraphPath.call(this,this.nextPoints))&&e.length){e[0][0]="L";for(var i,o=u.getGraphPath.call(this,t),n=(i=e.slice(0,o.length)).length-1;0<=n;n--)o.push(i[n])}}else o=u.getGraphPath.apply(this,arguments);return o}function l(e){var o=[];return(this.pointArrayMap||[]).forEach(function(t){o.push(e[t])}),o}function h(){var i,n=this,t=this.pointArrayMap,r=g(this);u.translate.apply(this,arguments),this.points.forEach(function(o){t.forEach(function(t,e){i=o[t],null!==(i=n.dataModify?n.dataModify.modifyValue(i):i)&&(o[r[e]]=n.yAxis.toPixels(i,!0))})})}return e=e||{},i=[],n=["bottomLine"],r=["top","bottom"],s=["top"],e.compose=function(t){var e;return o.pushUnique(i,t)&&((e=t.prototype).linesApiNames=e.linesApiNames||n.slice(),e.pointArrayMap=e.pointArrayMap||r.slice(),e.pointValKey=e.pointValKey||"top",e.areaLinesNames=e.areaLinesNames||s.slice(),e.drawGraph=a,e.getGraphPath=p,e.toYData=l,e.translate=h),t},e}),e(t,"Stock/Indicators/KeltnerChannels/KeltnerChannelsIndicator.js",[t["Stock/Indicators/MultipleLinesComposition.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,g,e){var i,o,n=this&&this.__extends||(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)e.hasOwnProperty(o)&&(t[o]=e[o])})(t,e)},function(t,e){function o(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),r=g.seriesTypes.sma,v=e.correctFloat,s=e.extend,a=e.merge,e=(n(p,o=r),p.prototype.init=function(){g.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=a({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)},p.prototype.getValues=function(t,e){var o,i,n,r,s,a=e.period,p=e.periodATR,l=e.multiplierATR,e=e.index,h=t.yData,c=h?h.length:0,u=[],d=g.seriesTypes.ema.prototype.getValues(t,{period:a,index:e}),f=g.seriesTypes.atr.prototype.getValues(t,{period:p}),y=[],m=[];if(!(c<a)){for(s=a;s<=c;s++)n=d.values[s-a],r=f.values[s-p],i=n[0],o=v(n[1]+l*r[1]),r=v(n[1]-l*r[1]),n=n[1],u.push([i,o,n,r]),y.push(i),m.push([o,n,r]);return{values:u,xData:y,yData:m}}},p.defaultOptions=a(r.defaultOptions,{params:{index:0,period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1}),p);function p(){var t=null!==o&&o.apply(this,arguments)||this;return t.data=void 0,t.options=void 0,t.points=void 0,t}return s(e.prototype,{nameBase:"Keltner Channels",areaLinesNames:["top","bottom"],nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),t.compose(e),g.registerSeriesType("keltnerchannels",e),e}),e(t,"masters/indicators/keltner-channels.src.js",[],function(){})});