"use strict";import ErrorMessages from"./ErrorMessages.js";import H from"../../Core/Globals.js";import D from"../../Core/Defaults.js";const setOptions=D["setOptions"];import U from"../../Core/Utilities.js";const{addEvent,find,isNumber}=U,composedMembers=[],defaultOptions={chart:{displayErrors:!0}};function compose(e){U.pushUnique(composedMembers,e)&&addEvent(e,"beforeRedraw",onChartBeforeRedraw),U.pushUnique(composedMembers,H)&&addEvent(H,"displayError",onHighchartsDisplayError),U.pushUnique(composedMembers,setOptions)&&setOptions(defaultOptions)}function onChartBeforeRedraw(){var e=this.errorElements;if(e&&e.length)for(const r of e)r.destroy();delete this.errorElements}function onHighchartsDisplayError(s){const t=s.chart||find(this.charts.slice().reverse(),e=>!!e);if(t){const i=s.code,n=t.options.chart,a=t.renderer;let e,r,o;if(t.errorElements)for(const d of t.errorElements)d&&d.destroy();n&&n.displayErrors&&a&&(t.errorElements=[],e=isNumber(i)?"Highcharts error #"+i+": "+ErrorMessages[i].text:i,r=t.chartWidth,o=t.chartHeight,e=e.replace(/<h1>(.*)<\/h1>/g,'<br><span style="font-size: 2em">$1</span><br>').replace(/<p>/g,"").replace(/<\/p>/g,"<br>"),t.errorElements[0]=a.rect(2,2,r-4,o-4).attr({"stroke-width":4,stroke:"#ff0000",zIndex:3}).add(),t.errorElements[1]=a.label(e,0,0,"rect",void 0,void 0,void 0,void 0,"debugger").css({color:"#ffffff",fontSize:"0.8em",width:r-16+"px",padding:0}).attr({fill:"rgba(255, 0, 0, 0.9)",width:r,padding:8,zIndex:10}).add(),t.errorElements[1].attr({y:o-t.errorElements[1].getBBox().height}))}}const Debugger={compose:compose};export default Debugger;