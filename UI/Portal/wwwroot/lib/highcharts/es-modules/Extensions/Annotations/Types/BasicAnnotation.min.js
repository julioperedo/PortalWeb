"use strict";import Annotation from"../Annotation.js";import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";const merge=U["merge"];class BasicAnnotation extends Annotation{addControlPoints(){const t=this.options,i=BasicAnnotation.basicControlPoints,o=this.basicType,n=t.labels||t.shapes||[];n.forEach(t=>{t.controlPoints=i[o]})}init(){const t=this.options;var i;t.shapes?(delete t.labelOptions,i=t.shapes[0].type,this.basicType=i&&"path"!==i?i:"rectangle"):(delete t.shapes,this.basicType="label"),super.init.apply(this,arguments)}}BasicAnnotation.basicControlPoints={label:[{symbol:"triangle-down",positioner:function(t){if(!t.graphic.placed)return{x:0,y:-9e7};t=MockPoint.pointToPixels(t.points[0]);return{x:t.x-(this.graphic.width||0)/2,y:t.y-(this.graphic.height||0)/2}},events:{drag:function(t,i){t=this.mouseMoveToTranslation(t);i.translatePoint(t.x,t.y),i.annotation.userOptions.labels[0].point=i.options.point,i.redraw(!1)}}},{symbol:"square",positioner:function(t){return t.graphic.placed?{x:t.graphic.alignAttr.x-(this.graphic.width||0)/2,y:t.graphic.alignAttr.y-(this.graphic.height||0)/2}:{x:0,y:-9e7}},events:{drag:function(t,i){t=this.mouseMoveToTranslation(t);i.translate(t.x,t.y),i.annotation.userOptions.labels[0].point=i.options.point,i.redraw(!1)}}}],rectangle:[{positioner:function(t){t=MockPoint.pointToPixels(t.points[2]);return{x:t.x-4,y:t.y-4}},events:{drag:function(t,i){const o=i.annotation,n=this.chart.pointer.getCoordinates(t),s=i.options.points,e=o.userOptions.shapes,a=o.clipXAxis?.index||0,r=o.clipYAxis?.index||0,p=n.xAxis[a].value,h=n.yAxis[r].value;s[1].x=p,s[2].x=p,s[2].y=h,s[3].y=h,e&&e[0]&&(e[0].points=i.options.points),o.redraw(!1)}}}],circle:[{positioner:function(t){var i=MockPoint.pointToPixels(t.points[0]),t=t.options.r;return{x:i.x+t*Math.cos(Math.PI/4)-(this.graphic.width||0)/2,y:i.y+t*Math.sin(Math.PI/4)-(this.graphic.height||0)/2}},events:{drag:function(t,i){const o=i.annotation,n=this.mouseMoveToTranslation(t),s=o.userOptions.shapes;i.setRadius(Math.max(i.options.r+n.y/Math.sin(Math.PI/4),5)),s&&s[0]&&(s[0].r=i.options.r,s[0].point=i.options.point),i.redraw(!1)}}}],ellipse:[{positioner:function(t){t=t.getAbsolutePosition(t.points[0]);return{x:t.x-(this.graphic.width||0)/2,y:t.y-(this.graphic.height||0)/2}},events:{drag:function(t,i){var o=i.getAbsolutePosition(i.points[0]);i.translatePoint(t.chartX-o.x,t.chartY-o.y,0),i.redraw(!1)}}},{positioner:function(t){t=t.getAbsolutePosition(t.points[1]);return{x:t.x-(this.graphic.width||0)/2,y:t.y-(this.graphic.height||0)/2}},events:{drag:function(t,i){var o=i.getAbsolutePosition(i.points[1]);i.translatePoint(t.chartX-o.x,t.chartY-o.y,1),i.redraw(!1)}}},{positioner:function(t){var i=t.getAbsolutePosition(t.points[0]),o=t.getAbsolutePosition(t.points[1]),t=t.getAttrs(i,o);return{x:t.cx-(this.graphic.width||0)/2+t.ry*Math.sin(t.angle*Math.PI/180),y:t.cy-(this.graphic.height||0)/2-t.ry*Math.cos(t.angle*Math.PI/180)}},events:{drag:function(t,i){const o=i.getAbsolutePosition(i.points[0]),n=i.getAbsolutePosition(i.points[1]),s=i.getDistanceFromLine(o,n,t.chartX,t.chartY),e=i.getYAxis(),a=Math.abs(e.toValue(0)-e.toValue(s));i.setYRadius(a),i.redraw(!1)}}}]},BasicAnnotation.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{});export default Annotation.types.basicAnnotation=BasicAnnotation;