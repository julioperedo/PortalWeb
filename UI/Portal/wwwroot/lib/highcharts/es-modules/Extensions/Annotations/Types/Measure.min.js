"use strict";import Annotation from"../Annotation.js";import ControlPoint from"../ControlPoint.js";import U from"../../../Core/Utilities.js";const{defined,extend,isNumber,merge,pick}=U;function average(){let t="";return t=""!==this.max&&""!==this.min?(this.max+this.min)/2:t}function bins(){const t=this.chart.series,i=getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax);let s=0,n=!1;return t.forEach(t=>{t.visible&&"highcharts-navigator-series"!==t.options.id&&t.points.forEach(t=>{!t.isNull&&t.x>i.xAxisMin&&t.x<=i.xAxisMax&&t.y>i.yAxisMin&&t.y<=i.yAxisMax&&(s++,n=!0)})}),s=n?s:""}function defaultFormatter(){return"Min: "+this.min+"<br>Max: "+this.max+"<br>Average: "+this.average+"<br>Bins: "+this.bins}function getExtremes(t,i,s,n){return{xAxisMin:Math.min(i,t),xAxisMax:Math.max(i,t),yAxisMin:Math.min(n,s),yAxisMax:Math.max(n,s)}}function getPointPos(t,i,s){return t.toValue(t.toPixels(i)+s)}function init(){const t=this.options.typeOptions,i=this.chart,s=i.inverted,n=i.xAxis[t.xAxis],e=i.yAxis[t.yAxis],o=t.background,a=s?o.height:o.width,r=s?o.width:o.height,h=t.selectType,x=s?n.left:e.top,l=s?e.top:n.left;this.startXMin=t.point.x,this.startYMin=t.point.y,isNumber(a)?this.startXMax=this.startXMin+a:this.startXMax=getPointPos(n,this.startXMin,parseFloat(a)),isNumber(r)?this.startYMax=this.startYMin-r:this.startYMax=getPointPos(e,this.startYMin,parseFloat(r)),"x"===h?(this.startYMin=e.toValue(x),this.startYMax=e.toValue(x+e.len)):"y"===h&&(this.startXMin=n.toValue(l),this.startXMax=n.toValue(l+n.len))}function max(){const t=this.chart.series,i=getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax);let s=-1/0,n=!1;return t.forEach(t=>{t.visible&&"highcharts-navigator-series"!==t.options.id&&t.points.forEach(t=>{!t.isNull&&t.y>s&&t.x>i.xAxisMin&&t.x<=i.xAxisMax&&t.y>i.yAxisMin&&t.y<=i.yAxisMax&&(s=t.y,n=!0)})}),s=n?s:""}function min(){const t=this.chart.series,i=getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax);let s=1/0,n=!1;return t.forEach(t=>{t.visible&&"highcharts-navigator-series"!==t.options.id&&t.points.forEach(t=>{!t.isNull&&t.y<s&&t.x>i.xAxisMin&&t.x<=i.xAxisMax&&t.y>i.yAxisMin&&t.y<=i.yAxisMax&&(s=t.y,n=!0)})}),s=n?s:""}function recalculate(t){var i=this.options.typeOptions,s=this.chart.xAxis[i.xAxis],i=this.chart.yAxis[i.yAxis],n=this.offsetX,e=this.offsetY;this.xAxisMin=getPointPos(s,this.startXMin,n),this.xAxisMax=getPointPos(s,this.startXMax,n),this.yAxisMin=getPointPos(i,this.startYMin,e),this.yAxisMax=getPointPos(i,this.startYMax,e),this.min=min.call(this),this.max=max.call(this),this.average=average.call(this),this.bins=bins.call(this),t&&this.resize(0,0)}function updateStartPoints(t,i,s,n,e){var o=this.options.typeOptions,a=o.selectType,r=this.chart.xAxis[o.xAxis],o=this.chart.yAxis[o.yAxis],h=this.startXMin,x=this.startXMax,l=this.startYMin,p=this.startYMax,y=this.offsetX,c=this.offsetY;i&&("x"===a?0===s?this.startXMin=getPointPos(r,h,n):this.startXMax=getPointPos(r,x,n):"y"===a?0===s?this.startYMin=getPointPos(o,l,e):this.startYMax=getPointPos(o,p,e):(this.startXMax=getPointPos(r,x,n),this.startYMax=getPointPos(o,p,e))),t&&(this.startXMin=getPointPos(r,h,y),this.startXMax=getPointPos(r,x,y),this.startYMin=getPointPos(o,l,c),this.startYMax=getPointPos(o,p,c),this.offsetX=0,this.offsetY=0),this.options.typeOptions.point={x:this.startXMin,y:this.startYMin},this.userOptions.typeOptions.point={x:this.startXMin,y:this.startYMin}}class Measure extends Annotation{init(t,i,s){super.init(t,i,s),this.offsetX=0,this.offsetY=0,this.resizeX=0,this.resizeY=0,init.call(this),this.addValues(),this.addShapes()}setClipAxes(){this.clipXAxis=this.chart.xAxis[this.options.typeOptions.xAxis],this.clipYAxis=this.chart.yAxis[this.options.typeOptions.yAxis]}pointsOptions(){return this.options.points}shapePointsOptions(){var t=this.options.typeOptions,i=t.xAxis,t=t.yAxis;return[{x:this.xAxisMin,y:this.yAxisMin,xAxis:i,yAxis:t},{x:this.xAxisMax,y:this.yAxisMin,xAxis:i,yAxis:t},{x:this.xAxisMax,y:this.yAxisMax,xAxis:i,yAxis:t},{x:this.xAxisMin,y:this.yAxisMax,xAxis:i,yAxis:t}]}addControlPoints(){const t=this.chart.inverted,i=this.options.controlPointOptions,s=this.options.typeOptions.selectType;defined(this.userOptions.controlPointOptions&&this.userOptions.controlPointOptions.style.cursor)||("x"===s?i.style.cursor=t?"ns-resize":"ew-resize":"y"===s&&(i.style.cursor=t?"ew-resize":"ns-resize"));var n=new ControlPoint(this.chart,this,this.options.controlPointOptions,0);this.controlPoints.push(n),"xy"!==s&&(n=new ControlPoint(this.chart,this,this.options.controlPointOptions,1),this.controlPoints.push(n))}addValues(t){const s=this.options.typeOptions,i=s.label.formatter;recalculate.call(this,t),s.label.enabled&&(0<this.labels.length?this.labels[0].text=i&&i.call(this)||defaultFormatter.call(this):this.initLabel(extend({shape:"rect",backgroundColor:"none",color:"black",borderWidth:0,dashStyle:"Dash",overflow:"allow",align:"left",y:0,x:0,verticalAlign:"top",crop:!0,xAxis:0,yAxis:0,point:function(t){var i=t.annotation,t=t.options;return{x:i.xAxisMin,y:i.yAxisMin,xAxis:pick(s.xAxis,t.xAxis),yAxis:pick(s.yAxis,t.yAxis)}},text:i&&i.call(this)||defaultFormatter.call(this)},s.label),void 0))}addShapes(){this.addCrosshairs(),this.addBackground()}addBackground(){void 0!==this.shapePointsOptions()[0].x&&this.initShape(extend({type:"path",points:this.shapePointsOptions()},this.options.typeOptions.background),2)}addCrosshairs(){const t=this.chart,i=this.options.typeOptions,s=this.options.typeOptions.point,n=t.xAxis[i.xAxis],e=t.yAxis[i.yAxis],o=t.inverted,a={point:s,type:"path"};let r=n.toPixels(this.xAxisMin),h=n.toPixels(this.xAxisMax),x=e.toPixels(this.yAxisMin),l=e.toPixels(this.yAxisMax),p=[],y=[],c,M,A;o&&(A=r,r=x,x=A,A=h,h=l,l=A),i.crosshairX.enabled&&(p=[["M",r,x+(l-x)/2],["L",h,x+(l-x)/2]]),i.crosshairY.enabled&&(y=[["M",r+(h-r)/2,x],["L",r+(h-r)/2,l]]),0<this.shapes.length?(this.shapes[0].options.d=p,this.shapes[1].options.d=y):(c=merge(a,i.crosshairX),M=merge(a,i.crosshairY),this.initShape(extend({d:p},c),0),this.initShape(extend({d:y},M),1))}onDrag(t){var t=this.mouseMoveToTranslation(t),i=this.options.typeOptions.selectType,s="y"===i?0:t.x,i="x"===i?0:t.y;this.translate(s,i),this.offsetX+=s,this.offsetY+=i,this.redraw(!1,!1,!0)}resize(t,i,s,n){const e=this.shapes[2];"x"===n?0===s?(e.translatePoint(t,0,0),e.translatePoint(t,i,3)):(e.translatePoint(t,0,1),e.translatePoint(t,i,2)):"y"===n?0===s?(e.translatePoint(0,i,0),e.translatePoint(0,i,1)):(e.translatePoint(0,i,2),e.translatePoint(0,i,3)):(e.translatePoint(t,0,1),e.translatePoint(t,i,2),e.translatePoint(0,i,3)),updateStartPoints.call(this,!1,!0,s,t,i),this.options.typeOptions.background.height=Math.abs(this.startYMax-this.startYMin),this.options.typeOptions.background.width=Math.abs(this.startXMax-this.startXMin)}redraw(t,i,s){this.linkPoints(),this.graphic||this.render(),s&&updateStartPoints.call(this,!0,!1),this.clipRect&&this.clipRect.animate(this.getClipBox()),this.addValues(i),this.addCrosshairs(),this.redrawItems(this.shapes,t),this.redrawItems(this.labels,t),this.controlPoints.forEach(t=>t.redraw())}translate(i,s){this.shapes.forEach(t=>t.translate(i,s))}}Measure.prototype.defaultOptions=merge(Annotation.prototype.defaultOptions,{typeOptions:{selectType:"xy",xAxis:0,yAxis:0,background:{fill:"rgba(130, 170, 255, 0.4)",strokeWidth:0,stroke:void 0},crosshairX:{enabled:!0,zIndex:6,dashStyle:"Dash",markerEnd:"arrow"},crosshairY:{enabled:!0,zIndex:6,dashStyle:"Dash",markerEnd:"arrow"},label:{enabled:!0,style:{fontSize:"0.7em",color:"#666666"},formatter:void 0}},controlPointOptions:{positioner:function(t){const i=this.index,s=t.chart,n=t.options,e=n.typeOptions,o=e.selectType,a=n.controlPointOptions,r=s.inverted,h=s.xAxis[e.xAxis],x=s.yAxis[e.yAxis],l=getExtremes(t.xAxisMin,t.xAxisMax,t.yAxisMin,t.yAxisMax);let p=t.xAxisMax,y=t.yAxisMax,c,M;return"x"===o&&(y=(l.yAxisMax+l.yAxisMin)/2,0===i&&(p=t.xAxisMin)),"y"===o&&(p=l.xAxisMin+(l.xAxisMax-l.xAxisMin)/2,0===i&&(y=t.yAxisMin)),M=r?(c=x.toPixels(y),h.toPixels(p)):(c=h.toPixels(p),x.toPixels(y)),{x:c-a.width/2,y:M-a.height/2}},events:{drag:function(t,i){var t=this.mouseMoveToTranslation(t),s=i.options.typeOptions.selectType,n=this.index,e="y"===s?0:t.x,t="x"===s?0:t.y;i.resize(e,t,n,s),i.resizeX+=e,i.resizeY+=t,i.redraw(!1,!0)}}}});export default Annotation.types.measure=Measure;