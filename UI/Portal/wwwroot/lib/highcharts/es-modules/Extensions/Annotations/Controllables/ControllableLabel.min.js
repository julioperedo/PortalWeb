"use strict";import Controllable from"./Controllable.js";import F from"../../../Core/Templating.js";const format=F["format"];import MockPoint from"../MockPoint.js";import U from"../../../Core/Utilities.js";const{extend,isNumber,pick}=U,composedMembers=[];function symbolConnector(t,o,i,e,n){var s=n&&n.anchorX,n=n&&n.anchorY;let a,l,r=i/2;return isNumber(s)&&isNumber(n)&&(a=[["M",s,n]],(l=(l=o-n)<0?-e-l:l)<i&&(r=s<t+i/2?l:i-l),o+e<n?a.push(["L",t+r,o+e]):n<o?a.push(["L",t+r,o]):s<t?a.push(["L",t,o+e/2]):t+i<s&&a.push(["L",t+i,o+e/2])),a||[]}class ControllableLabel extends Controllable{static alignedPosition(t,o){var i=t.align,e=t.verticalAlign;let n=(o.x||0)+(t.x||0),s=(o.y||0)+(t.y||0),a,l;return"right"===i?a=1:"center"===i&&(a=2),a&&(n+=(o.width-(t.width||0))/a),"bottom"===e?l=1:"middle"===e&&(l=2),l&&(s+=(o.height-(t.height||0))/l),{x:Math.round(n),y:Math.round(s)}}static compose(t){if(U.pushUnique(composedMembers,t)){const o=t.prototype;o.symbols.connector=symbolConnector}}static justifiedOptions(t,o,i,e){const n=i.align,s=i.verticalAlign,a=!o.box&&o.padding||0,l=o.getBBox(),r={align:n,verticalAlign:s,x:i.x,y:i.y,width:o.width,height:o.height},h=(e.x||0)-t.plotLeft,c=(e.y||0)-t.plotTop;let p;return(p=h+a)<0&&("right"===n?r.align="left":r.x=(r.x||0)-p),(p=h+l.width-a)>t.plotWidth&&("left"===n?r.align="right":r.x=(r.x||0)+t.plotWidth-p),(p=c+a)<0&&("bottom"===s?r.verticalAlign="top":r.y=(r.y||0)-p),(p=c+l.height-a)>t.plotHeight&&("top"===s?r.verticalAlign="bottom":r.y=(r.y||0)+t.plotHeight-p),r}constructor(t,o,i){super(t,o,i,"label")}translatePoint(t,o){super.translatePoint(t,o,0)}translate(t,o){const i=this.annotation.chart,e=this.annotation.userOptions,n=i.annotations.indexOf(this.annotation),s=i.options.annotations,a=s[n];var l;i.inverted&&(l=t,t=o,o=l),this.options.x+=t,this.options.y+=o,a[this.collection][this.index].x=this.options.x,a[this.collection][this.index].y=this.options.y,e[this.collection][this.index].x=this.options.x,e[this.collection][this.index].y=this.options.y}render(t){const o=this.options,i=this.attrsFromOptions(o),e=o.style;this.graphic=this.annotation.chart.renderer.label("",0,-9999,o.shape,null,null,o.useHTML,null,"annotation-label").attr(i).add(t),this.annotation.chart.styledMode||("contrast"===e.color&&(e.color=this.annotation.chart.renderer.getContrast(-1<ControllableLabel.shapesWithoutBackground.indexOf(o.shape)?"#FFFFFF":o.backgroundColor)),this.graphic.css(o.style).shadow(o.shadow)),o.className&&this.graphic.addClass(o.className),this.graphic.labelrank=o.labelrank,super.render()}redraw(t){const o=this.options,i=this.text||o.format||o.text,e=this.graphic,n=this.points[0];if(e){e.attr({text:i?format(String(i),n.getLabelConfig(),this.annotation.chart):o.formatter.call(n,this)});var s=this.anchor(n);const a=this.position(s);a?((e.alignAttr=a).anchorX=s.absolutePosition.x,a.anchorY=s.absolutePosition.y,e[t?"animate":"attr"](a)):e.attr({x:0,y:-9999}),e.placed=!!a,super.redraw(t)}else this.redraw(t)}anchor(t){const o=super.anchor.apply(this,arguments),i=this.options.x||0,e=this.options.y||0;return o.absolutePosition.x-=i,o.absolutePosition.y-=e,o.relativePosition.x-=i,o.relativePosition.y-=e,o}position(t){const o=this.graphic,i=this.annotation.chart,e=i.tooltip,n=this.points[0],s=this.options,a=t.absolutePosition,l=t.relativePosition;let r,h,c,p,d=n.series.visible&&MockPoint.prototype.isInsidePlot.call(n);var g;return o&&d&&({width:t=0,height:g=0}=o,s.distance&&e?r=e.getPosition.call({chart:i,distance:pick(s.distance,16),getPlayingField:e.getPlayingField},t,g,{plotX:l.x,plotY:l.y,negative:n.negative,ttBelow:n.ttBelow,h:l.height||l.width}):s.positioner?r=s.positioner.call(this):(h={x:a.x,y:a.y,width:0,height:0},r=ControllableLabel.alignedPosition(extend(s,{width:t,height:g}),h),"justify"===this.options.overflow&&(r=ControllableLabel.alignedPosition(ControllableLabel.justifiedOptions(i,o,s,r),h))),s.crop&&(c=r.x-i.plotLeft,p=r.y-i.plotTop,d=i.isInsidePlot(c,p)&&i.isInsidePlot(c+t,p+g))),d?r:null}}ControllableLabel.attrsMap={backgroundColor:"fill",borderColor:"stroke",borderWidth:"stroke-width",zIndex:"zIndex",borderRadius:"r",padding:"padding"},ControllableLabel.shapesWithoutBackground=["connector"];export default ControllableLabel;