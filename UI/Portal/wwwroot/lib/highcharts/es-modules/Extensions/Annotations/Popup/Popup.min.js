"use strict";import BaseForm from"../../../Shared/BaseForm.js";import H from"../../../Core/Globals.js";const doc=H["doc"];import D from"../../../Core/Defaults.js";const getOptions=D["getOptions"];import PopupAnnotations from"./PopupAnnotations.js";import PopupIndicators from"./PopupIndicators.js";import PopupTabs from"./PopupTabs.js";import U from"../../../Core/Utilities.js";const{addEvent,createElement,extend,fireEvent,pick}=U;function getFields(t,e){const o=Array.prototype.slice.call(t.querySelectorAll("input")),s=Array.prototype.slice.call(t.querySelectorAll("select")),i=t.querySelectorAll("#highcharts-select-series > option:checked")[0],a=t.querySelectorAll("#highcharts-select-volume > option:checked")[0],n={actionType:e,linkedTo:i&&i.getAttribute("value")||"",fields:{}};return o.forEach(t=>{var e=t.getAttribute("highcharts-data-name");t.getAttribute("highcharts-data-series-id")?n.seriesId=t.value:e?n.fields[e]=t.value:n.type=t.value}),s.forEach(t=>{const e=t.id;var o;"highcharts-select-series"!==e&&"highcharts-select-volume"!==e&&(o=e.split("highcharts-select-")[1],n.fields[o]=t.value)}),a&&(n.fields["params.volumeSeriesID"]=a.getAttribute("value")||""),n}class Popup extends BaseForm{constructor(t,e,o){super(t,e),this.chart=o,this.lang=(getOptions().lang.navigation||{}).popup||{},addEvent(this.container,"mousedown",()=>{const t=o&&o.navigationBindings&&o.navigationBindings.activeAnnotation;if(t){t.cancelClick=!0;const e=addEvent(doc,"click",()=>{setTimeout(()=>{t.cancelClick=!1},0),e()})}})}addInput(t,e,o,s){const i=t.split("."),a=i[i.length-1],n=this.lang,r="highcharts-"+e+"-"+pick(s.htmlFor,a),c=(a.match(/^\d+$/)||createElement("label",{htmlFor:r,className:s.labelClassName},void 0,o).appendChild(doc.createTextNode(n[a]||a)),createElement("input",{name:r,value:s.value,type:s.type,className:"highcharts-popup-field"},void 0,o));return c.setAttribute("highcharts-data-name",t),c}closeButtonEvents(){var t;this.chart?(t=this.chart.navigationBindings,fireEvent(t,"closePopup"),t&&t.selectedButtonElement&&fireEvent(t,"deselectButton",{button:t.selectedButtonElement})):super.closeButtonEvents()}addButton(t,e,o,s,i){const a=createElement("button",void 0,void 0,t);return a.appendChild(doc.createTextNode(e)),i&&["click","touchstart"].forEach(t=>{addEvent(a,t,()=>(this.closePopup(),i(getFields(s,o))))}),a}showForm(t,e,o,s){e&&(this.showPopup(),"indicators"===t&&this.indicators.addForm.call(this,e,o,s),"annotation-toolbar"===t&&this.annotations.addToolbar.call(this,e,o,s),"annotation-edit"===t&&this.annotations.addForm.call(this,e,o,s),"flag"===t&&this.annotations.addForm.call(this,e,o,s,!0),this.type=t,this.container.style.height=this.container.offsetHeight+"px")}}extend(Popup.prototype,{annotations:PopupAnnotations,indicators:PopupIndicators,tabs:PopupTabs});export default Popup;