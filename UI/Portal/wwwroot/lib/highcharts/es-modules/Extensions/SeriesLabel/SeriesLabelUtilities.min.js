"use strict";function ccw(t,e,n,i,c,r){r=(r-e)*(n-t)-(i-e)*(c-t);return 0<r||!(r<0)}function intersectLine(t,e,n,i,c,r,s,o){return ccw(t,e,c,r,s,o)!==ccw(n,i,c,r,s,o)&&ccw(t,e,n,i,c,r)!==ccw(t,e,n,i,s,o)}function boxIntersectLine(t,e,n,i,c,r,s,o){return intersectLine(t,e,t+n,e,c,r,s,o)||intersectLine(t+n,e,t+n,e+i,c,r,s,o)||intersectLine(t,e+i,t+n,e+i,c,r,s,o)||intersectLine(t,e,t,e+i,c,r,s,o)}function intersectRect(t,e){return!(e.left>t.right||e.right<t.left||e.top>t.bottom||e.bottom<t.top)}const SeriesLabelUtilities={boxIntersectLine:boxIntersectLine,intersectRect:intersectRect};export default SeriesLabelUtilities;