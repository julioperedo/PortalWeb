"use strict";import AxisResizer from"./AxisResizer.js";import U from"../../Core/Utilities.js";const{addEvent,merge,wrap}=U,composedMembers=[];function compose(e,r){U.pushUnique(composedMembers,e)&&(merge(!0,e.defaultOptions,AxisResizer.resizerOptions),e.keepProps.push("resizer"),addEvent(e,"afterRender",onAxisAfterRender),addEvent(e,"destroy",onAxisDestroy)),U.pushUnique(composedMembers,r)&&(wrap(r.prototype,"runPointActions",wrapPointerRunPointActions),wrap(r.prototype,"drag",wrapPointerDrag))}function onAxisAfterRender(){const e=this,r=e.resizer,s=e.options.resize;var i;s&&(i=!1!==s.enabled,r?i?r.init(e,!0):r.destroy():i&&(e.resizer=new AxisResizer(e)))}function onAxisDestroy(e){!e.keepEvents&&this.resizer&&this.resizer.destroy()}function wrapPointerDrag(e){this.chart.activeResizer||e.apply(this,[].slice.call(arguments,1))}function wrapPointerRunPointActions(e){this.chart.activeResizer||e.apply(this,[].slice.call(arguments,1))}const DragPanes={compose:compose};export default DragPanes;