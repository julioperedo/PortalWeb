"use strict";import SynthPatch from"./SynthPatch.js";import InstrumentPresets from"./InstrumentPresets.js";import U from"../../Core/Utilities.js";const{defined,extend}=U;class SonificationInstrument{constructor(e,t,s){this.audioContext=e,this.curParams={},this.midiTrackName=s.midiTrackName,this.masterVolNode=new GainNode(e),this.masterVolNode.connect(t),this.volumeNode=new GainNode(e),this.createNodesFromCapabilities(extend({pan:!0},s.capabilities||{})),this.connectCapabilityNodes(this.volumeNode,this.masterVolNode),this.synthPatch=new SynthPatch(e,"string"==typeof s.synthPatch?InstrumentPresets[s.synthPatch]:s.synthPatch),this.midiInstrument=this.synthPatch.midiInstrument||1,this.synthPatch.startSilently(),this.synthPatch.connect(this.volumeNode)}setMasterVolume(e){this.masterVolNode.gain.setTargetAtTime(e,0,SonificationInstrument.rampTime)}scheduleEventAtTime(e,t){var s=extend(this.curParams,t),t=defined(t.frequency)?t.frequency:defined(t.note)?SonificationInstrument.musicalNoteToFrequency(t.note):220;defined(t)&&this.synthPatch.playFreqAtTime(e,t,s.noteDuration),(defined(s.tremoloDepth)||defined(s.tremoloSpeed))&&this.setTremoloAtTime(e,s.tremoloDepth,s.tremoloSpeed),defined(s.pan)&&this.setPanAtTime(e,s.pan),defined(s.volume)&&this.setVolumeAtTime(e,s.volume),(defined(s.lowpassFreq)||defined(s.lowpassResonance))&&this.setFilterAtTime("lowpass",e,s.lowpassFreq,s.lowpassResonance),(defined(s.highpassFreq)||defined(s.highpassResonance))&&this.setFilterAtTime("highpass",e,s.highpassFreq,s.highpassResonance)}silenceAtTime(e){this.synthPatch.silenceAtTime(e)}cancel(){this.synthPatch.mute(),[this.tremoloDepth&&this.tremoloDepth.gain,this.tremoloOsc&&this.tremoloOsc.frequency,this.lowpassNode&&this.lowpassNode.frequency,this.lowpassNode&&this.lowpassNode.Q,this.highpassNode&&this.highpassNode.frequency,this.highpassNode&&this.highpassNode.Q,this.panNode&&this.panNode.pan,this.volumeNode.gain].forEach(e=>e&&e.cancelScheduledValues(0))}destroy(){this.cancel(),this.synthPatch.stop(),this.tremoloOsc&&this.tremoloOsc.stop(),[this.tremoloDepth,this.tremoloOsc,this.lowpassNode,this.highpassNode,this.panNode,this.volumeNode,this.masterVolNode].forEach(e=>e&&e.disconnect())}setPanAtTime(e,t){this.panNode&&this.panNode.pan.setTargetAtTime(t,e+this.audioContext.currentTime,SonificationInstrument.rampTime)}setFilterAtTime(e,t,s,i){const o=this[e+"Node"],n=this.audioContext.currentTime+t;o&&(defined(i)&&o.Q.setTargetAtTime(i,n,SonificationInstrument.rampTime),defined(s)&&o.frequency.setTargetAtTime(s,n,SonificationInstrument.rampTime))}setVolumeAtTime(e,t){this.volumeNode&&this.volumeNode.gain.setTargetAtTime(t,e+this.audioContext.currentTime,SonificationInstrument.rampTime)}setTremoloAtTime(e,t,s){e=this.audioContext.currentTime+e;this.tremoloDepth&&defined(t)&&this.tremoloDepth.gain.setTargetAtTime(t,e,SonificationInstrument.rampTime),this.tremoloOsc&&defined(s)&&this.tremoloOsc.frequency.setTargetAtTime(15*s,e,SonificationInstrument.rampTime)}createNodesFromCapabilities(e){var t=this.audioContext;e.pan&&(this.panNode=new StereoPannerNode(t)),e.tremolo&&(this.tremoloOsc=new OscillatorNode(t,{type:"sine",frequency:3}),this.tremoloDepth=new GainNode(t),this.tremoloOsc.connect(this.tremoloDepth),this.tremoloDepth.connect(this.masterVolNode.gain),this.tremoloOsc.start()),e.filters&&(this.lowpassNode=new BiquadFilterNode(t,{type:"lowpass",frequency:2e4}),this.highpassNode=new BiquadFilterNode(t,{type:"highpass",frequency:0}))}connectCapabilityNodes(e,t){[this.panNode,this.lowpassNode,this.highpassNode,e].reduce((e,t)=>t?(t.connect(e),t):e,t)}static noteStringToC0Distance(e){const t=e.match(/^([a-g][#b]?)([0-8])$/i),s=t?t[1]:"a",i=s[0].toLowerCase(),o=s[1],n=t?parseInt(t[2],10):4,a="#"===o?1:"b"===o?-1:0;return({c:0,d:2,e:4,f:5,g:7,a:9,b:11}[i]||0)+a+12*n}static musicalNoteToFrequency(e){e="string"==typeof e?this.noteStringToC0Distance(e):e;return 16.3516*Math.pow(2,Math.min(e,107)/12)}}SonificationInstrument.rampTime=SynthPatch.stopRampTime/4;export default SonificationInstrument;