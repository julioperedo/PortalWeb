"use strict";class WGLVertexBuffer{constructor(t,e,r){this.buffer=!1,this.iterator=0,this.preAllocated=!1,this.vertAttribute=!1,this.components=r||2,this.dataComponents=r,this.gl=t,this.shader=e}allocate(t){this.iterator=-1,this.preAllocated=new Float32Array(4*t)}bind(){if(!this.buffer)return!1;this.gl.vertexAttribPointer(this.vertAttribute,this.components,this.gl.FLOAT,!1,0,0)}build(t,e,r){let i;return this.data=t||[],this.data&&0!==this.data.length||this.preAllocated?(this.components=r||this.components,this.buffer&&this.gl.deleteBuffer(this.buffer),this.preAllocated||(i=new Float32Array(this.data)),this.buffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.preAllocated||i,this.gl.STATIC_DRAW),this.vertAttribute=this.gl.getAttribLocation(this.shader.getProgram(),e),this.gl.enableVertexAttribArray(this.vertAttribute),!(i=!1)):(this.destroy(),!1)}destroy(){this.buffer&&(this.gl.deleteBuffer(this.buffer),this.buffer=!1,this.vertAttribute=!1),this.iterator=0,this.components=this.dataComponents||2,this.data=[]}push(t,e,r,i){this.preAllocated&&(this.preAllocated[++this.iterator]=t,this.preAllocated[++this.iterator]=e,this.preAllocated[++this.iterator]=r,this.preAllocated[++this.iterator]=i)}render(t,e,r){var i=(this.preAllocated||this.data).length;return!!this.buffer&&(!!i&&(!((e=!e||i<e?i:e)<=(t=!t||i<t||t<0?0:t))&&(this.gl.drawArrays(this.gl[r=r||"POINTS"],t/this.components,(e-t)/this.components),!0)))}}export default WGLVertexBuffer;