"use strict";import ParallelAxis from"./ParallelAxis.js";import ParallelCoordinatesDefaults from"./ParallelCoordinatesDefaults.js";import ParallelSeries from"./ParallelSeries.js";import U from"../../Core/Utilities.js";const{addEvent,defined,merge,pushUnique,splat}=U;class ChartAdditions{constructor(e){this.chart=e}setParallelInfo(e){const a=this.chart||this,l=e.series;a.parallelInfo={counter:0};for(const r of l)r.data&&(a.parallelInfo.counter=Math.max(a.parallelInfo.counter,r.data.length-1))}}var ParallelCoordinates;!function(e){const t=[];function s(e){const a=this,l=e.args[0],r=splat(l.yAxis||{}),o=[];let t=r.length;if(a.hasParallelCoordinates=l.chart&&l.chart.parallelCoordinates,a.hasParallelCoordinates){for(a.setParallelInfo(l);t<=a.parallelInfo.counter;t++)o.push({});l.legend||(l.legend={}),void 0===l.legend.enabled&&(l.legend.enabled=!1),merge(!0,l,{boost:{seriesThreshold:Number.MAX_VALUE},plotOptions:{series:{boostThreshold:Number.MAX_VALUE}}}),l.yAxis=r.concat(o),l.xAxis=merge(ParallelCoordinatesDefaults.xAxis,splat(l.xAxis||{})[0])}}function n(e){var a=this,e=e.options;if(e.chart&&(defined(e.chart.parallelCoordinates)&&(a.hasParallelCoordinates=e.chart.parallelCoordinates),a.options.chart.parallelAxes=merge(a.options.chart.parallelAxes,e.chart.parallelAxes)),a.hasParallelCoordinates){e.series&&a.setParallelInfo(e);for(const l of a.yAxis)l.update({},!1)}}e.compose=function(e,a,l,r){if(ParallelAxis.compose(e),ParallelSeries.compose(r),pushUnique(t,a)){e=a,r=ChartAdditions.prototype;const o=e.prototype;o.setParallelInfo=r.setParallelInfo,addEvent(e,"init",s),addEvent(e,"update",n)}pushUnique(t,l)&&merge(!0,l.chart,ParallelCoordinatesDefaults.chart)}}(ParallelCoordinates=ParallelCoordinates||{});export default ParallelCoordinates;