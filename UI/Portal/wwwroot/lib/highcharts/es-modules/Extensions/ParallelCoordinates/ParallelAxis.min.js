"use strict";import ParallelCoordinatesDefaults from"./ParallelCoordinatesDefaults.js";import U from"../../Core/Utilities.js";const{addEvent,arrayMax,arrayMin,isNumber,merge,pick,pushUnique,splat}=U;class ParallelAxisAdditions{constructor(a){this.axis=a}setPosition(a,t){const i=this.axis,s=i.chart,e=((this.position||0)+.5)/(s.parallelInfo.counter+1);s.polar?t.angle=360*e:(t[a[0]]=100*e+"%",i[a[1]]=t[a[1]]=0,i[a[2]]=t[a[2]]=null,i[a[3]]=t[a[3]]=null)}}var ParallelAxis;!function(a){const t=[];function i(a){const t=this,i=t.chart,s=t.parallelCoordinates;let e=["left","width","height","top"];var l;i.hasParallelCoordinates&&(i.inverted&&(e=e.reverse()),t.isXAxis?t.options=merge(t.options,ParallelCoordinatesDefaults.xAxis,a.userOptions):(l=i.yAxis.indexOf(t),t.options=merge(t.options,t.chart.options.chart.parallelAxes,a.userOptions),s.position=pick(s.position,0<=l?l:i.yAxis.length),s.setPosition(e,t.options)))}function s(a){var i=this,t=i.chart,s=i.parallelCoordinates;if(s&&t&&t.hasParallelCoordinates&&!i.isXAxis){const e=s.position;let t=[];i.series.forEach(function(a){a.yData&&a.visible&&isNumber(e)&&(a=a.yData[e],t.push.apply(t,splat(a)))}),t=t.filter(isNumber),i.dataMin=arrayMin(t),i.dataMax=arrayMax(t),a.preventDefault()}}function e(){var a=this;a.parallelCoordinates||(a.parallelCoordinates=new ParallelAxisAdditions(a))}a.compose=function(a){pushUnique(t,a)&&((a=a).keepProps.push("parallel"),addEvent(a,"init",e),addEvent(a,"afterSetOptions",i),addEvent(a,"getSeriesExtremes",s))}}(ParallelAxis=ParallelAxis||{});export default ParallelAxis;