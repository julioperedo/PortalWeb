"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;function populateAverage(e,t,r,s,i){t=t[r-1][i]-t[r-s-1][i];return[e[r-1],t]}class MomentumIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(e,t){const r=t.period,s=t.index,i=e.xData,o=e.yData,a=o?o.length:0,n=[],u=[],p=[];let m,d;if(!(i.length<=r)&&isArray(o[0])){for(m=r+1;m<a;m++)d=populateAverage(i,o,m,r,s),n.push(d),u.push(d[0]),p.push(d[1]);return d=populateAverage(i,o,m,r,s),n.push(d),u.push(d[0]),p.push(d[1]),{values:n,xData:u,yData:p}}}}MomentumIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:3}}),extend(MomentumIndicator.prototype,{nameBase:"Momentum"}),SeriesRegistry.registerSeriesType("momentum",MomentumIndicator);export default MomentumIndicator;