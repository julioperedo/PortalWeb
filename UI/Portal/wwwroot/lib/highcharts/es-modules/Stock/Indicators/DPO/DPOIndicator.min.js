"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,merge,correctFloat,pick}=U;function accumulatePoints(t,e,r,i,o){i=pick(e[r][i],e[r]);return o?correctFloat(t-i):correctFloat(t+i)}class DPOIndicator extends SMAIndicator{constructor(){super(...arguments),this.options=void 0,this.data=void 0,this.points=void 0}getValues(t,e){const r=e.period,i=e.index,o=Math.floor(r/2+1),s=r+o,a=t.xData||[],c=t.yData||[],n=c.length,d=[],p=[],u=[];let l,m,f,g,D,P=0;if(!(a.length<=s)){for(g=0;g<r-1;g++)P=accumulatePoints(P,c,g,i);for(D=0;D<=n-s;D++)m=D+r-1,f=D+s-1,P=accumulatePoints(P,c,m,i),l=pick(c[f][i],c[f])-P/r,P=accumulatePoints(P,c,D,i,!0),d.push([a[f],l]),p.push(a[f]),u.push(l);return{values:d,xData:p,yData:u}}}}DPOIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:0,period:21}}),extend(DPOIndicator.prototype,{nameBase:"DPO"}),SeriesRegistry.registerSeriesType("dpo",DPOIndicator);export default DPOIndicator;