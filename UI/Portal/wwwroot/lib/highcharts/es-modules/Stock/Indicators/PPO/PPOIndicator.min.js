"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const EMAIndicator=SeriesRegistry.seriesTypes["ema"];import U from"../../../Core/Utilities.js";const{correctFloat,extend,merge,error}=U;class PPOIndicator extends EMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(e,r){const t=r.periods,s=r.index,o=[],i=[],a=[];let d,n;if(2!==t.length||t[1]<=t[0])error('Error: "PPO requires two periods. Notice, first period should be lower than the second one."');else{var p=super.getValues.call(this,e,{index:s,period:t[0]}),c=super.getValues.call(this,e,{index:s,period:t[1]});if(p&&c){var l=t[1]-t[0];for(n=0;n<c.yData.length;n++)d=correctFloat((p.yData[n+l]-c.yData[n])/c.yData[n]*100),o.push([c.xData[n],d]),i.push(c.xData[n]),a.push(d);return{values:o,xData:i,yData:a}}}}}PPOIndicator.defaultOptions=merge(EMAIndicator.defaultOptions,{params:{period:void 0,periods:[12,26]}}),extend(PPOIndicator.prototype,{nameBase:"PPO",nameComponents:["periods"]}),SeriesRegistry.registerSeriesType("ppo",PPOIndicator);export default PPOIndicator;