"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const EMAIndicator=SeriesRegistry.seriesTypes["ema"];import U from"../../../Core/Utilities.js";const{extend,merge,error}=U;class APOIndicator extends EMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(e,r){const t=r.periods,s=r.index,i=[],o=[],a=[];let d,n;if(2!==t.length||t[1]<=t[0])error('Error: "APO requires two periods. Notice, first period should be lower than the second one."');else{var p=super.getValues.call(this,e,{index:s,period:t[0]}),c=super.getValues.call(this,e,{index:s,period:t[1]});if(p&&c){var l=t[1]-t[0];for(n=0;n<c.yData.length;n++)d=p.yData[n+l]-c.yData[n],i.push([c.xData[n],d]),o.push(c.xData[n]),a.push(d);return{values:i,xData:o,yData:a}}}}}APOIndicator.defaultOptions=merge(EMAIndicator.defaultOptions,{params:{period:void 0,periods:[10,20]}}),extend(APOIndicator.prototype,{nameBase:"APO",nameComponents:["periods"]}),SeriesRegistry.registerSeriesType("apo",APOIndicator);export default APOIndicator;