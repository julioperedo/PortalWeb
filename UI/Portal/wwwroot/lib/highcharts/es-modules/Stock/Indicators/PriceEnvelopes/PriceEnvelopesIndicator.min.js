"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;class PriceEnvelopesIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}init(){super.init.apply(this,arguments),this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(e,t){const o=t.period,i=t.topBand,s=t.bottomBand,r=e.xData,n=e.yData,a=n?n.length:0,p=[],l=[],d=[];let m,c,y,u,b,h,g,v;if(!(r.length<o)&&isArray(n[0])&&4===n[0].length){for(v=o;v<=a;v++)b=r.slice(v-o,v),h=n.slice(v-o,v),u=(g=super.getValues({xData:b,yData:h},t)).xData[0],c=(m=g.yData[0])*(1+i),y=m*(1-s),p.push([u,c,m,y]),l.push(u),d.push([c,m,y]);return{values:p,xData:l,yData:d}}}}PriceEnvelopesIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}}),extend(PriceEnvelopesIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"}),MultipleLinesComposition.compose(PriceEnvelopesIndicator),SeriesRegistry.registerSeriesType("priceenvelopes",PriceEnvelopesIndicator);export default PriceEnvelopesIndicator;