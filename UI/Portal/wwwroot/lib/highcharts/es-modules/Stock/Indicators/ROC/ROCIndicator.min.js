"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{isArray,merge,extend}=U;function populateAverage(e,t,r,i,s){let o,a;return a=s<0?(o=t[r-i])?(t[r]-o)/o*100:null:(o=t[r-i][s])?(t[r][s]-o)/o*100:null,[e[r],a]}class ROCIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(e,t){const r=t.period,i=e.xData,s=e.yData,o=s?s.length:0,a=[],n=[],d=[];let p,u=-1,c;if(!(i.length<=r)){for(isArray(s[0])&&(u=t.index),p=r;p<o;p++)c=populateAverage(i,s,p,r,u),a.push(c),n.push(c[0]),d.push(c[1]);return{values:a,xData:n,yData:d}}}}ROCIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:3,period:9}}),extend(ROCIndicator.prototype,{nameBase:"Rate of Change"}),SeriesRegistry.registerSeriesType("roc",ROCIndicator);export default ROCIndicator;