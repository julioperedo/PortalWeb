"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{atr:ATRIndicator,sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";import StockChart from"../../../Core/Chart/StockChart.js";const{addEvent,correctFloat,isArray,extend,merge,objectEach}=U;function createPointObj(o,e,t){return{index:e,close:o.yData[e][t],x:o.xData[e]}}class SupertrendIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.linkedParent=void 0,this.options=void 0,this.points=void 0}init(){const t=this,r=(super.init.apply(t,arguments),addEvent(StockChart,"afterLinkSeries",()=>{if(t.options){const o=t.options,e=t.linkedParent.options;o.cropThreshold=e.cropThreshold-(o.params.period-1)}r()},{order:1}))}drawGraph(){const t=this,o=t.options,e=t.linkedParent,r=e?e.points:[],i=t.points,n=t.graph,l=r.length-i.length,s=0<l?l:0,a={options:{gapSize:o.gapSize}},p={top:[],bottom:[],intersect:[]},d={top:{styles:{lineWidth:o.lineWidth,lineColor:o.fallingTrendColor||o.color,dashStyle:o.dashStyle}},bottom:{styles:{lineWidth:o.lineWidth,lineColor:o.risingTrendColor||o.color,dashStyle:o.dashStyle}},intersect:o.changeTrendLine};let c,h,u,g,y,x,m,S,C,f=i.length;for(;f--;)c=i[f],h=i[f-1],u=r[f-1+s],g=r[f-2+s],y=r[f+s],x=r[f+s+1],m=c.options.color,S={x:c.x,plotX:c.plotX,plotY:c.plotY,isNull:!1},!g&&u&&e.yData[u.index-1]&&(g=createPointObj(e,u.index-1,3)),!x&&y&&e.yData[y.index+1]&&(x=createPointObj(e,y.index+1,3)),!u&&g&&e.yData[g.index+1]?u=createPointObj(e,g.index+1,3):!u&&y&&e.yData[y.index-1]&&(u=createPointObj(e,y.index-1,3)),c&&u&&y&&g&&c.x!==u.x&&(c.x===y.x?(g=u,u=y):c.x===g.x?(u=g,g={close:e.yData[u.index-1][3],x:e.xData[u.index-1]}):x&&c.x===x.x&&(u=x,g=y)),h&&g&&u?(C={x:h.x,plotX:h.plotX,plotY:h.plotY,isNull:!1},c.y>=u.close&&h.y>=g.close?(c.color=m||o.fallingTrendColor||o.color,p.top.push(S)):c.y<u.close&&h.y<g.close?(c.color=m||o.risingTrendColor||o.color,p.bottom.push(S)):(p.intersect.push(S),p.intersect.push(C),p.intersect.push(merge(C,{isNull:!0})),c.y>=u.close&&h.y<g.close?(c.color=m||o.fallingTrendColor||o.color,h.color=m||o.risingTrendColor||o.color,p.top.push(S),p.top.push(merge(C,{isNull:!0}))):c.y<u.close&&h.y>=g.close&&(c.color=m||o.risingTrendColor||o.color,h.color=m||o.fallingTrendColor||o.color,p.bottom.push(S),p.bottom.push(merge(C,{isNull:!0}))))):u&&(c.y>=u.close?(c.color=m||o.fallingTrendColor||o.color,p.top.push(S)):(c.color=m||o.risingTrendColor||o.color,p.bottom.push(S)));objectEach(p,function(o,e){t.points=o,t.options=merge(d[e].styles,a),t.graph=t["graph"+e+"Line"],SMAIndicator.prototype.drawGraph.call(t),t["graph"+e+"Line"]=t.graph}),t.points=i,t.options=o,t.graph=n}getValues(o,e){const t=e.period,r=e.multiplier,i=o.xData,n=o.yData,l=[],s=[],a=[],p=0===t?0:t-1,d=[],c=[];let h,u,g,y,x,m,S,C,f,T;if(!(i.length<=t||!isArray(n[0])||4!==n[0].length||t<0)){for(h=ATRIndicator.prototype.getValues.call(this,o,{period:t}).yData,T=0;T<h.length;T++)f=n[p+T],C=n[p+T-1]||[],x=d[T-1],m=c[T-1],S=a[T-1],0===T&&(x=m=S=0),u=correctFloat((f[1]+f[2])/2+r*h[T]),g=correctFloat((f[1]+f[2])/2-r*h[T]),u<x||C[3]>x?d[T]=u:d[T]=x,g>m||C[3]<m?c[T]=g:c[T]=m,S===x&&f[3]<d[T]||S===m&&f[3]<c[T]?y=d[T]:(S===x&&f[3]>d[T]||S===m&&f[3]>c[T])&&(y=c[T]),l.push([i[p+T],y]),s.push(i[p+T]),a.push(y);return{values:l,xData:s,yData:a}}}}SupertrendIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,multiplier:3,period:10},risingTrendColor:"#06b535",fallingTrendColor:"#f21313",changeTrendLine:{styles:{lineWidth:1,lineColor:"#333333",dashStyle:"LongDash"}}}),extend(SupertrendIndicator.prototype,{nameBase:"Supertrend",nameComponents:["multiplier","period"]}),SeriesRegistry.registerSeriesType("supertrend",SupertrendIndicator);export default SupertrendIndicator;