"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,merge,isArray}=U;class TrendLineIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0,this.updateAllPoints=!0}getValues(e,t){const r=e.xData,i=e.yData,s=[],n=[],o=[],a=r.length,d=t.index;let p=(a-1)*a/2,c=0,l=0,m=(a-1)*a*(2*a-1)/6,y,u,g;for(u=0;u<a;u++)g=isArray(i[u])?i[u][d]:i[u],c+=g,l+=u*g;y=(a*l-p*c)/(a*m-p*p),isNaN(y)&&(y=0);var S=(c-y*p)/a;for(u=0;u<a;u++)g=y*u+S,s[u]=[r[u],g],n[u]=r[u],o[u]=g;return{xData:n,yData:o,values:s}}}TrendLineIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{period:void 0,index:3}}),extend(TrendLineIndicator.prototype,{nameBase:"Trendline",nameComponents:!1}),SeriesRegistry.registerSeriesType("trendline",TrendLineIndicator);export default TrendLineIndicator;