"use strict";import AU from"../ArrayUtilities.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;class WilliamsRIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(i,e){const t=e.period,s=i.xData,r=i.yData,a=r?r.length:0,o=[],l=[],n=[];let d,m,p,c,y,g;if(!(s.length<t)&&isArray(r[0])&&4===r[0].length){for(g=t-1;g<a;g++)d=r.slice(g-t+1,g+1),y=(m=AU.getArrayExtremes(d,2,1))[0],p=((c=m[1])-r[g][3])/(c-y)*-100,s[g]&&(o.push([s[g],p]),l.push(s[g]),n.push(p));return{values:o,xData:l,yData:n}}}}WilliamsRIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:14}}),extend(WilliamsRIndicator.prototype,{nameBase:"Williams %R"}),SeriesRegistry.registerSeriesType("williamsr",WilliamsRIndicator);export default WilliamsRIndicator;