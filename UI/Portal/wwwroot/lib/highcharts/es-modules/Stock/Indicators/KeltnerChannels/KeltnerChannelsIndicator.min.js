"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{correctFloat,extend,merge}=U;class KeltnerChannelsIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}init(){SeriesRegistry.seriesTypes.sma.prototype.init.apply(this,arguments),this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(e,t){const i=t.period,o=t.periodATR,r=t.multiplierATR,s=t.index,n=e.yData,p=n?n.length:0,l=[],a=SeriesRegistry.seriesTypes.ema.prototype.getValues(e,{period:i,index:s}),d=SeriesRegistry.seriesTypes.atr.prototype.getValues(e,{period:o}),m=[],c=[];let y,h,u,C,g,b,R;if(!(p<i)){for(R=i;R<=p;R++)g=a.values[R-i],b=d.values[R-o],C=g[0],h=correctFloat(g[1]+r*b[1]),u=correctFloat(g[1]-r*b[1]),y=g[1],l.push([C,h,y,u]),m.push(C),c.push([h,y,u]);return{values:l,xData:m,yData:c}}}}KeltnerChannelsIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:0,period:20,periodATR:10,multiplierATR:2},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'},marker:{enabled:!1},dataGrouping:{approximation:"averages"},lineWidth:1}),extend(KeltnerChannelsIndicator.prototype,{nameBase:"Keltner Channels",areaLinesNames:["top","bottom"],nameComponents:["period","periodATR","multiplierATR"],linesApiNames:["topLine","bottomLine"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"}),MultipleLinesComposition.compose(KeltnerChannelsIndicator),SeriesRegistry.registerSeriesType("keltnerchannels",KeltnerChannelsIndicator);export default KeltnerChannelsIndicator;