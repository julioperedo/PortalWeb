"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const SMAIndicator=SeriesRegistry.seriesTypes["sma"];import U from"../../../Core/Utilities.js";const{extend,merge,pick}=U;function getExtremeIndexInArray(o,e){let r=o[0],t=0,n;for(n=1;n<o.length;n++)("max"===e&&o[n]>=r||"min"===e&&o[n]<=r)&&(r=o[n],t=n);return t}class AroonIndicator extends SMAIndicator{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getValues(o,e){const r=e.period,t=o.xData,n=o.yData,i=n?n.length:0,s=[],a=[],p=[];let d,m,l,c,u;for(c=r-1;c<i;c++)l=getExtremeIndexInArray((u=n.slice(c-r+1,c+2)).map(function(o){return pick(o[2],o)}),"min"),d=getExtremeIndexInArray(u.map(function(o){return pick(o[1],o)}),"max")/r*100,m=l/r*100,t[c+1]&&(s.push([t[c+1],d,m]),a.push(t[c+1]),p.push([d,m]));return{values:s,xData:a,yData:p}}}AroonIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:!1},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}}),extend(AroonIndicator.prototype,{areaLinesNames:[],linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y"}),MultipleLinesComposition.compose(AroonIndicator),SeriesRegistry.registerSeriesType("aroon",AroonIndicator);export default AroonIndicator;