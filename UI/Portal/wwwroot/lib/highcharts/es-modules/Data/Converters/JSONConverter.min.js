"use strict";import DataConverter from"./DataConverter.js";import DataTable from"../DataTable.js";import U from"../../Core/Utilities.js";const{merge,isArray}=U;class JSONConverter extends DataConverter{constructor(e){e=merge(JSONConverter.defaultOptions,e);super(e),this.columns=[],this.headers=[],this.dataTypes=[],this.options=e,this.table=new DataTable}parse(e,t){var r=this;const{beforeParse:s,orientation:a,firstRowAsNames:o,columnNames:n}=e=merge(r.options,e);let i=e.data;if(i)if(i=(i=s?s(i):i).slice(),"columns"===a)for(let e=0,t=i.length;e<t;e++){const h=i[e];if(!(h instanceof Array))return;o?r.headers.push(""+h.shift()):n&&r.headers.push(n[e]),r.table.setColumn(r.headers[e]||e.toString(),h)}else if("rows"===a){o?r.headers=i.shift():n&&(r.headers=n);for(let s=0,e=i.length;s<e;s++){var l=i[s];if(isArray(l))for(let e=0,t=l.length;e<t;e++)r.columns.length<e+1&&r.columns.push([]),r.columns[e].push(l[e]),this.table.setCell(r.headers[e]||s.toString(),s,l[e]);else this.table.setRows([l],s)}}}getTable(){return this.table}}JSONConverter.defaultOptions={...DataConverter.defaultOptions,data:[],orientation:"columns"};export default JSONConverter;