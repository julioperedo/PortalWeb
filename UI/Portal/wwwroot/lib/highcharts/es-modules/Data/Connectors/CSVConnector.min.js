"use strict";import CSVConverter from"../Converters/CSVConverter.js";import DataConnector from"./DataConnector.js";import U from"../../Core/Utilities.js";const merge=U["merge"];class CSVConnector extends DataConnector{constructor(e){e=merge(CSVConnector.defaultOptions,e);super(e),this.converter=new CSVConverter(e),(this.options=e).enablePolling&&this.startPolling(1e3*Math.max(e.dataRefreshRate||0,1))}load(t){const o=this,r=o.converter,n=o.table,{csv:e,csvURL:s,dataModifier:a}=o.options;return o.emit({type:"load",csv:e,detail:t,table:n}),n.deleteRows(),Promise.resolve(s?fetch(s).then(e=>e.text()):e||"").then(e=>(e&&(r.parse({csv:e}),n.setColumns(r.getTable().getColumns())),o.setModifierOptions(a).then(()=>e))).then(e=>(o.emit({type:"afterLoad",csv:e,detail:t,table:n}),o)).catch(e=>{throw o.emit({type:"loadError",detail:t,error:e,table:n}),e})}}CSVConnector.defaultOptions={csv:"",csvURL:"",enablePolling:!1,dataRefreshRate:1,firstRowAsNames:!0},DataConnector.registerType("CSV",CSVConnector);export default CSVConnector;