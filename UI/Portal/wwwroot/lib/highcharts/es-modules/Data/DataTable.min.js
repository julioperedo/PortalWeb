"use strict";import U from"../Core/Utilities.js";const{addEvent,fireEvent,uniqueKey}=U;class DataTable{static isNull(s){if(s===DataTable.NULL)return!0;if(s instanceof Array){if(!s.length)return!1;for(let e=0,t=s.length;e<t;++e)if(null!==s[e])return!1}else{var o=Object.keys(s);if(!o.length)return!1;for(let e=0,t=o.length;e<t;++e)if(null!==s[o[e]])return!1}return!0}constructor(e={}){this.aliases=e.aliases?JSON.parse(JSON.stringify(e.aliases)):{},this.autoId=!e.id,this.columns={},this.id=e.id||uniqueKey(),(this.modified=this).rowCount=0,this.versionTag=uniqueKey();const i=e.columns||{},l=Object.keys(i),n=this.columns;let r=0;for(let e=0,t=l.length,s,o;e<t;++e)o=l[e],s=i[o].slice(),n[o]=s,r=Math.max(r,s.length);for(let e=0,t=l.length;e<t;++e)n[l[e]].length=r;this.rowCount=r;const o=e.aliases||{},a=Object.keys(o),u=this.aliases;for(let e=0,t=a.length,s;e<t;++e)s=a[e],u[s]=o[s]}clone(e,t){const s=this,o={},i=(s.emit({type:"cloneTable",detail:t}),e||(o.aliases=s.aliases,o.columns=s.columns),s.autoId||(o.id=s.id),new DataTable(o));return e||(i.versionTag=s.versionTag),s.emit({type:"afterCloneTable",detail:t,tableClone:i}),i}deleteColumnAlias(e){const t=this,s=t.aliases,o=s[e],i=t.modifier;return o&&(delete t.aliases[e],i&&i.modifyColumns(t,{[o]:new Array(t.rowCount)},0)),o}deleteColumns(i,e){const t=this,l=t.columns,n={},r={},s=t.modifier,a=t.rowCount;if((i=i||Object.keys(l)).length){t.emit({type:"deleteColumns",columnNames:i,detail:e});for(let e=0,t=i.length,s,o;e<t;++e)o=i[e],(s=l[o])&&(n[o]=s,r[o]=new Array(a)),delete l[o];return Object.keys(l).length||(t.rowCount=0),s&&s.modifyColumns(t,r,0,e),t.emit({type:"afterDeleteColumns",columns:n,columnNames:i,detail:e}),n}}deleteRows(i,l=1,e){const n=this,r=[],a=[],t=n.modifier;if(n.emit({type:"deleteRows",detail:e,rowCount:l,rowIndex:i||0}),void 0===i&&(i=0,l=n.rowCount),0<l&&i<n.rowCount){var u=n.columns,m=Object.keys(u);for(let s=0,e=m.length,t,o;s<e;++s){o=(t=u[m[s]]).splice(i,l),s||(n.rowCount=t.length);for(let e=0,t=o.length;e<t;++e)r[e]=r[e]||[],r[e][s]=o[e];a.push(new Array(e))}}return t&&t.modifyRows(n,a,i||0,e),n.emit({type:"afterDeleteRows",detail:e,rowCount:l,rowIndex:i||0,rows:r}),r}emit(e){switch(e.type){case"afterDeleteColumns":case"afterDeleteRows":case"afterSetCell":case"afterSetColumns":case"afterSetRows":this.versionTag=uniqueKey()}fireEvent(this,e.type,e)}getCell(e,t){e=this.aliases[e]||e;e=this.columns[e];if(e)return e[t]}getCellAsBoolean(e,t){e=this.aliases[e]||e;e=this.columns[e];return!(!e||!e[t])}getCellAsNumber(e,t,s){e=this.aliases[e]||e;e=this.columns[e];let o=e&&e[t];switch(typeof o){case"boolean":return o?1:0;case"number":return isNaN(o)&&!s?null:o}return o=parseFloat(""+o),isNaN(o)&&!s?null:o}getCellAsString(e,t){e=this.aliases[e]||e;e=this.columns[e];return""+(e&&e[t])}getColumn(e,t){return this.getColumns([e],t)[e]}getColumnAsNumbers(t,e){const s=this.columns[t=this.aliases[t]||t],o=[];if(s){var i=s.length;if(e)for(let e=0;e<i;++e)o.push(this.getCellAsNumber(t,e,!0));else{for(let e=0,t;e<i;++e){if("number"==typeof(t=s[e]))return s.slice();if(null!=t)break}for(let e=0;e<i;++e)o.push(this.getCellAsNumber(t,e))}}return o}getColumnNames(){return Object.keys(this.columns)}getColumns(i,l){const n=this.aliases,r=this.columns,a={};for(let e=0,t=(i=i||Object.keys(r)).length,s,o;e<t;++e)o=i[e],(s=r[n[o]||o])&&(a[o]=l?s:s.slice());return a}getModifier(){return this.modifier}getRow(e,t){return this.getRows(e,1,t)[0]}getRowCount(){return this.rowCount}getRowIndexBy(e,t,s){e=this.aliases[e]||e;const o=this.columns[e];if(o){e=o.indexOf(t,s);if(-1!==e)return e}}getRowObject(e,t){return this.getRowObjects(e,1,t)[0]}getRowObjects(l=0,n=this.rowCount-l,r){const a=this.aliases,u=this.columns,m=new Array(n);r=r||Object.keys(u);for(let e=l,t=0,s=Math.min(this.rowCount,l+n),o,i;e<s;++e,++t){i=m[t]={};for(const h of r)o=u[a[h]||h],i[h]=o?o[e]:void 0}return m}getRows(l=0,n=this.rowCount-l,r){const a=this.aliases,u=this.columns,m=new Array(n);r=r||Object.keys(u);for(let e=l,t=0,s=Math.min(this.rowCount,l+n),o,i;e<s;++e,++t){i=m[t]=[];for(const h of r)o=u[a[h]||h],i.push(o?o[e]:void 0)}return m}getVersionTag(){return this.versionTag}hasColumns(o){var i=this.aliases,l=this.columns;for(let e=0,t=o.length,s;e<t;++e)if(!l[s=o[e]]&&!i[s])return!1;return!0}hasRowWith(e,t){e=this.aliases[e]||e;const s=this.columns[e];return!!s&&-1!==s.indexOf(t)}on(e,t){return addEvent(this,e,t)}renameColumn(e,t){const s=this.columns;if(s[e]){if(e!==t){const o=this.aliases;o[t]&&delete o[t],s[t]=s[e],delete s[e]}return!0}return!1}setCell(e,t,s,o){const i=this,l=i.columns,n=i.modifier;e=i.aliases[e]||e;let r=l[e];r&&r[t]===s||(i.emit({type:"setCell",cellValue:s,columnName:e,detail:o,rowIndex:t}),r=r||(l[e]=new Array(i.rowCount)),t>=i.rowCount&&(i.rowCount=t+1),r[t]=s,n&&n.modifyCell(i,e,t,s),i.emit({type:"afterSetCell",cellValue:s,columnName:e,detail:o,rowIndex:t}))}setColumn(e,t=[],s=0,o){this.setColumns({[e]:t},s,o)}setColumns(i,l,e){const n=this,r=n.columns,t=n.modifier,a=(n.rowCount,void 0===l),u=Object.keys(i);n.emit({type:"setColumns",columns:i,columnNames:u,detail:e,rowIndex:l});for(let e=0,t=u.length,s,o;e<t;++e)if(o=u[e],s=i[o],o=n.aliases[o]||o,a)r[o]=s.slice(),n.rowCount=s.length;else{const m=r[o]||(r[o]=new Array(n.rowCount));for(let e=l||0,t=s.length;e<t;++e)m[e]=s[e];n.rowCount=Math.max(n.rowCount,m.length)}var s=Object.keys(r);for(let e=0,t=s.length;e<t;++e)r[s[e]].length=n.rowCount;t&&t.modifyColumns(n,i,l||0),n.emit({type:"afterSetColumns",columns:i,columnNames:u,detail:e,rowIndex:l})}setModifier(t,s){const o=this;let e;return o.emit({type:"setModifier",detail:s,modifier:t,modified:o.modified}),(o.modified=o).modifier=t,(e=t?t.modify(o):Promise.resolve(o)).then(e=>(e.emit({type:"afterSetModifier",detail:s,modifier:t,modified:e.modified}),e)).catch(e=>{throw o.emit({type:"setModifierError",error:e,modifier:t,modified:o.modified}),e})}setRow(e,t,s){this.setRows([e],t,s)}setRows(t,s=this.rowCount,e){const o=this,l=o.aliases,n=o.columns,r=Object.keys(n),i=o.modifier,a=t.length;o.emit({type:"setRows",detail:e,rowCount:a,rowIndex:s,rows:t});for(let e=0,o=s,i;e<a;++e,++o)if((i=t[e])===DataTable.NULL)for(let e=0,t=r.length;e<t;++e)n[r[e]][o]=null;else if(i instanceof Array)for(let e=0,t=r.length;e<t;++e)n[r[e]][o]=i[e];else{var u=Object.keys(i);for(let e=0,t=u.length,s;e<t;++e)s=l[s=u[e]]||s,n[s]||(n[s]=new Array(o+1)),n[s][o]=i[s]}var m=s+a;if(m>o.rowCount){o.rowCount=m;for(let e=0,t=r.length;e<t;++e)n[r[e]].length=m}i&&i.modifyRows(o,t,s),o.emit({type:"afterSetRows",detail:e,rowCount:a,rowIndex:s,rows:t})}}DataTable.NULL={},DataTable.version="1.0.0";export default DataTable;