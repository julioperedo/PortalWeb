"use strict";import CU from"./Utils/ChartUtilities.js";const fireEventOnWrappedOrUnwrappedElement=CU["fireEventOnWrappedOrUnwrappedElement"];import DOMElementProvider from"./Utils/DOMElementProvider.js";import EventProvider from"./Utils/EventProvider.js";import HU from"./Utils/HTMLUtilities.js";const getFakeMouseEvent=HU["getFakeMouseEvent"];import U from"../Core/Utilities.js";const extend=U["extend"];class AccessibilityComponent{constructor(){this.chart=void 0,this.domElementProvider=void 0,this.eventProvider=void 0,this.keyCodes=void 0,this.proxyProvider=void 0}initBase(e,t){this.chart=e,this.eventProvider=new EventProvider,this.domElementProvider=new DOMElementProvider,this.proxyProvider=t,this.keyCodes={left:37,right:39,up:38,down:40,enter:13,space:32,esc:27,tab:9,pageUp:33,pageDown:34,end:35,home:36}}addEvent(e,t,r,i){return this.eventProvider.addEvent(e,t,r,i)}createElement(e,t){return this.domElementProvider.createElement(e,t)}fakeClickEvent(e){var t=getFakeMouseEvent("click");fireEventOnWrappedOrUnwrappedElement(e,t)}destroyBase(){this.domElementProvider.destroyCreatedElements(),this.eventProvider.removeAddedEvents()}}extend(AccessibilityComponent.prototype,{init(){},getKeyboardNavigation:function(){},onChartUpdate(){},onChartRender(){},destroy(){}});export default AccessibilityComponent;