"use strict";import MapViewDefaults from"./MapViewDefaults.js";import GeoJSONComposition from"./GeoJSONComposition.js";const topo2geo=GeoJSONComposition["topo2geo"];import MU from"./MapUtilities.js";const{boundsFromPath,pointInPolygon}=MU;import Projection from"./Projection.js";import U from"../Core/Utilities.js";const{addEvent,clamp,fireEvent,isArray,isNumber,isObject,isString,merge,pick,pushUnique,relativeLength}=U,composedMembers=[],tileSize=256,worldSize=400.979322;let maps={};function zoomFromBounds(t,e){var{width:e,height:o}=e,e=Math.max((t.x2-t.x1)/(e/tileSize),(t.y2-t.y1)/(o/tileSize));return Math.log(worldSize/e)/Math.log(2)}class MapView{static compose(t){pushUnique(composedMembers,t)&&(maps=t.maps,addEvent(t,"afterInit",function(){this.mapView=new MapView(this,this.options.mapView)},{order:0}))}static compositeBounds(t){if(t.length)return t.slice(1).reduce((t,e)=>(t.x1=Math.min(t.x1,e.x1),t.y1=Math.min(t.y1,e.y1),t.x2=Math.max(t.x2,e.x2),t.y2=Math.max(t.y2,e.y2),t),merge(t[0]))}static mergeInsets(t,e){var o=t=>{const o={};return t.forEach((t,e)=>{o[t&&t.id||"i"+e]=t}),o};const i=merge(o(t),o(e)),s=Object.keys(i).map(t=>i[t]);return s}constructor(t,e){this.allowTransformAnimation=!0,this.eventsToUnbind=[],this.insets=[],this.padding=[0,0,0,0];let s,r;if(!(this instanceof MapViewInset)){const n=[t.options.chart.map,...(t.options.series||[]).map(t=>t.mapData)].map(t=>this.getGeoMap(t)),a=[],h=(n.forEach(t=>{var e,o,i;t&&(s=s||t["hc-recommended-mapview"],t.bbox&&([t,e,o,i]=t.bbox,a.push({x1:t,y1:e,x2:o,y2:i})))}),a.length&&MapView.compositeBounds(a));fireEvent(t,"beforeMapViewInit",{geoBounds:h},function(){var t,e,o,i;h&&({x1:t,y1:e,x2:o,y2:i}=h,r=180<o-t&&90<i-e?{name:"EqualEarth"}:{name:"LambertConformalConic",parallels:[e,i],rotation:[-(t+o)/2]})}),this.geoMap=n[0]}this.userOptions=e||{},t.options.mapView&&t.options.mapView.recommendedMapView&&(s=t.options.mapView.recommendedMapView);const o=merge(MapViewDefaults,{projection:r},s,e);var i=s&&s.insets,e=e&&e.insets;i&&e&&(o.insets=MapView.mergeInsets(i,e)),this.chart=t,this.center=o.center,this.options=o,this.projection=new Projection(o.projection),this.playingField=t.plotBox,this.zoom=o.zoom||0,this.minZoom=o.minZoom,this.createInsets(),this.eventsToUnbind.push(addEvent(t,"afterSetChartSize",()=>{this.playingField=this.getField(),void 0!==this.minZoom&&this.minZoom!==this.zoom||(this.fitToBounds(void 0,void 0,!1),!this.chart.hasRendered&&isNumber(this.userOptions.zoom)&&(this.zoom=this.userOptions.zoom),this.userOptions.center&&merge(!0,this.center,this.userOptions.center))})),this.setUpEvents()}createInsets(){const e=this.options,t=e.insets;t&&t.forEach(t=>{t=new MapViewInset(this,merge(e.insetOptions,t));this.insets.push(t)})}fitToBounds(t,e,o=!0,i){var s,r=t||this.getProjectedBounds();r&&(e=pick(e,t?0:this.options.padding),s=this.getField(!1),e=isArray(e)?e:[e,e,e,e],this.padding=[relativeLength(e[0],s.height),relativeLength(e[1],s.width),relativeLength(e[2],s.height),relativeLength(e[3],s.width)],this.playingField=this.getField(),e=zoomFromBounds(r,this.playingField),t||(this.minZoom=e),s=this.projection.inverse([(r.x2+r.x1)/2,(r.y2+r.y1)/2]),this.setView(s,e,o,i))}getField(t=!0){t=t?this.padding:[0,0,0,0];return{x:t[3],y:t[0],width:this.chart.plotWidth-t[1]-t[3],height:this.chart.plotHeight-t[0]-t[2]}}getGeoMap(t){return isString(t)?maps[t]&&"Topology"===maps[t].type?topo2geo(maps[t]):maps[t]:isObject(t,!0)?"FeatureCollection"===t.type?t:"Topology"===t.type?topo2geo(t):void 0:void 0}getMapBBox(){var t,e,o=this.getProjectedBounds(),i=this.getScale();if(o)return t=this.padding,e=this.projectedUnitsToPixels({x:o.x1,y:o.y2}),{width:(o.x2-o.x1)*i+t[1]+t[3],height:(o.y2-o.y1)*i+t[0]+t[2],x:e.x-t[3],y:e.y-t[0]}}getProjectedBounds(){const e=this.projection;var t=this.chart.series.reduce((t,e)=>{var o=e.getProjectedBounds&&e.getProjectedBounds();return o&&!1!==e.options.affectsMapView&&t.push(o),t},[]);const o=this.options.fitToGeometry;if(o){if(!this.fitToGeometryCache)if("MultiPoint"===o.type){const i=o.coordinates.map(t=>e.forward(t)),s=i.map(t=>t[0]),r=i.map(t=>t[1]);this.fitToGeometryCache={x1:Math.min.apply(0,s),x2:Math.max.apply(0,s),y1:Math.min.apply(0,r),y2:Math.max.apply(0,r)}}else this.fitToGeometryCache=boundsFromPath(e.path(o));return this.fitToGeometryCache}return this.projection.bounds||MapView.compositeBounds(t)}getScale(){return tileSize/worldSize*Math.pow(2,this.zoom)}getSVGTransform(){var{x:t,y:e,width:o,height:i}=this.playingField,s=this.projection.forward(this.center),r=this.projection.hasCoordinates?-1:1,n=this.getScale(),r=n*r;return{scaleX:n,scaleY:r,translateX:t+o/2-s[0]*n,translateY:e+i/2-s[1]*r}}lonLatToPixels(t){t=this.lonLatToProjectedUnits(t);if(t)return this.projectedUnitsToPixels(t)}lonLatToProjectedUnits(t){const e=this.chart,o=e.mapTransforms;if(o){for(const n in o)if(Object.hasOwnProperty.call(o,n)&&o[n].hitZone){var i=e.transformFromLatLon(t,o[n]);if(i&&pointInPolygon(i,o[n].hitZone.coordinates[0]))return i}return e.transformFromLatLon(t,o.default)}for(const a of this.insets){var s;if(a.options.geoBounds&&pointInPolygon({x:t.lon,y:t.lat},a.options.geoBounds.coordinates[0]))return s=a.projection.forward([t.lon,t.lat]),s=a.projectedUnitsToPixels({x:s[0],y:s[1]}),this.pixelsToProjectedUnits(s)}var r=this.projection.forward([t.lon,t.lat]);if(!r.outside)return{x:r[0],y:r[1]}}projectedUnitsToLonLat(t){const e=this.chart,o=e.mapTransforms;if(o){for(const r in o)if(Object.hasOwnProperty.call(o,r)&&o[r].hitZone&&pointInPolygon(t,o[r].hitZone.coordinates[0]))return e.transformToLatLon(t,o[r]);return e.transformToLatLon(t,o.default)}var i=this.projectedUnitsToPixels(t);for(const n of this.insets)if(n.hitZone&&pointInPolygon(i,n.hitZone.coordinates[0])){const a=n.pixelsToProjectedUnits(i),s=n.projection.inverse([a.x,a.y]);return{lon:s[0],lat:s[1]}}const s=this.projection.inverse([t.x,t.y]);return{lon:s[0],lat:s[1]}}redraw(t){this.chart.series.forEach(t=>{t.useMapGeometry&&(t.isDirty=!0)}),this.chart.redraw(t)}setView(t,e,o=!0,i){t&&(this.center=t),"number"==typeof e&&("number"==typeof this.minZoom&&(e=Math.max(e,this.minZoom)),"number"==typeof this.options.maxZoom&&(e=Math.min(e,this.options.maxZoom)),isNumber(e)&&(this.zoom=e));var s,r,t=this.getProjectedBounds();if(t){const n=this.projection.forward(this.center),{x:a,y:h,width:p,height:d}=this.playingField,c=this.getScale(),l=this.projectedUnitsToPixels({x:t.x1,y:t.y1}),m=this.projectedUnitsToPixels({x:t.x2,y:t.y2}),u=[(t.x1+t.x2)/2,(t.y1+t.y2)/2],g=this.chart.series.some(t=>t.isDrilling);g||(e=l.x,t=m.y,s=m.x,r=l.y,s-e<p?n[0]=u[0]:e<a&&s<a+p?n[0]+=Math.max(e-a,s-p-a)/c:a+p<s&&a<e&&(n[0]+=Math.min(s-p-a,e-a)/c),r-t<d?n[1]=u[1]:t<h&&r<h+d?n[1]-=Math.max(t-h,r-d-h)/c:h+d<r&&h<t&&(n[1]-=Math.min(r-d-h,t-h)/c),this.center=this.projection.inverse(n)),this.insets.forEach(t=>{t.options.field&&(t.hitZone=t.getHitZone(),t.playingField=t.getField())}),this.render()}fireEvent(this,"afterSetView"),o&&this.redraw(i)}projectedUnitsToPixels(t){var e=this.getScale(),o=this.projection.forward(this.center),i=this.playingField,s=i.x+i.width/2,i=i.y+i.height/2;return{x:s-e*(o[0]-t.x),y:i+e*(o[1]-t.y)}}pixelsToLonLat(t){return this.projectedUnitsToLonLat(this.pixelsToProjectedUnits(t))}pixelsToProjectedUnits(t){var{x:t,y:e}=t,o=this.getScale(),i=this.projection.forward(this.center),s=this.playingField,r=s.x+s.width/2,s=s.y+s.height/2;return{x:i[0]+(t-r)/o,y:i[1]-(e-s)/o}}setUpEvents(){const h=this["chart"];let p,d,c;var t=t=>{var e,o,i,s=h.pointer.pinchDown,r=this.projection;let{mouseDownX:n,mouseDownY:a}=h;1===s.length&&(n=s[0].chartX,a=s[0].chartY),"number"==typeof n&&"number"==typeof a&&(s=n+","+a,{chartX:e,chartY:o}=t.originalEvent,s!==d&&(d=s,p=this.projection.forward(this.center),c=(this.projection.options.rotation||[0,0]).slice()),s=(s=r.def&&r.def.bounds)&&zoomFromBounds(s,this.playingField)||-1/0,"Orthographic"===r.options.name&&(this.minZoom||1/0)<1.3*s?(r=440/(this.getScale()*Math.min(h.plotWidth,h.plotHeight)),c&&(s=(n-e)*r-c[0],r=clamp(-c[1]-(a-o)*r,-80,80),i=this.zoom,this.update({projection:{rotation:[-s,-r]}},!1),this.fitToBounds(void 0,void 0,!1),this.zoom=i,h.redraw(!1))):isNumber(e)&&isNumber(o)&&(s=this.getScale(),r=this.projection.hasCoordinates?1:-1,i=this.projection.inverse([p[0]+(n-e)/s,p[1]-(a-o)/s*r]),isNaN(i[0]+i[1])||this.setView(i,void 0,!0,!1)),t.preventDefault())};addEvent(h,"pan",t),addEvent(h,"touchpan",t),addEvent(h,"selection",t=>{var e,o,i,s;t.resetSelection?this.zoomBy():(i=t.x-h.plotLeft,s=t.y-h.plotTop,{y:e,x:o}=this.pixelsToProjectedUnits({x:i,y:s}),{y:i,x:s}=this.pixelsToProjectedUnits({x:i+t.width,y:s+t.height}),this.fitToBounds({x1:o,y1:e,x2:s,y2:i},void 0,!0,!t.originalEvent.touches&&void 0),/^touch/.test(t.originalEvent.type)||h.showResetZoom(),t.preventDefault())})}render(){this.group||(this.group=this.chart.renderer.g("map-view").attr({zIndex:4}).add())}update(t,e=!0,o){var i=t.projection;let s=i&&Projection.toString(i)!==Projection.toString(this.options.projection),r=!1;merge(!0,this.userOptions,t),merge(!0,this.options,t),"insets"in t&&(this.insets.forEach(t=>t.destroy()),this.insets.length=0,r=!0),(s||"fitToGeometry"in t)&&delete this.fitToGeometryCache,(s||r)&&(this.chart.series.forEach(t=>{const e=t.transformGroups;if(t.clearBounds&&t.clearBounds(),t.isDirty=!0,t.isDirtyData=!0,r&&e)for(;1<e.length;){const o=e.pop();o&&o.destroy()}}),s&&(this.projection=new Projection(this.options.projection)),r&&this.createInsets(),t.center||!Object.hasOwnProperty.call(t,"zoom")||isNumber(t.zoom)||this.fitToBounds(void 0,void 0,!1)),t.center||isNumber(t.zoom)?this.setView(this.options.center,t.zoom,!1):"fitToGeometry"in t&&this.fitToBounds(void 0,void 0,!1),e&&this.chart.redraw(o)}zoomBy(e,o,i,s){var r=this.chart;const n=this.projection.forward(this.center);let[a,h]=o?this.projection.forward(o):[];if("number"==typeof e){var p,o=this.zoom+e;let t;i&&([e,i]=i,p=this.getScale(),e=e-r.plotLeft-r.plotWidth/2,i=i-r.plotTop-r.plotHeight/2,a=n[0]+e/p,h=n[1]+i/p),"number"==typeof a&&"number"==typeof h&&(r=1-Math.pow(2,this.zoom)/Math.pow(2,o),e=n[0]-a,i=n[1]-h,n[0]-=e*r,n[1]+=i*r,t=this.projection.inverse(n)),this.setView(t,o,void 0,s)}else this.fitToBounds(void 0,void 0,void 0,s)}}class MapViewInset extends MapView{constructor(t,e){if(super(t.chart,e),this.id=e.id,this.mapView=t,this.options=merge({center:[0,0]},t.options.insetOptions,e),this.allBounds=[],this.options.geoBounds){const o=t.projection.path(this.options.geoBounds);this.geoBoundsProjectedBox=boundsFromPath(o),this.geoBoundsProjectedPolygon=o.map(t=>[t[1]||0,t[2]||0])}}getField(t=!0){var e=this.hitZone;if(e){const o=t?this.padding:[0,0,0,0],i=e.coordinates[0],s=i.map(t=>t[0]),r=i.map(t=>t[1]),n=Math.min.apply(0,s)+o[3],a=Math.max.apply(0,s)-o[1],h=Math.min.apply(0,r)+o[0],p=Math.max.apply(0,r)-o[2];if(isNumber(n)&&isNumber(h))return{x:n,y:h,width:a-n,height:p-h}}return super.getField.call(this,t)}getHitZone(){const{chart:e,mapView:o,options:i}=this,s=(i.field||{})["coordinates"];if(s){let t=s[0];if("percent"===i.units){const r="mapBoundingBox"===i.relativeTo&&o.getMapBBox()||merge(e.plotBox,{x:0,y:0});t=t.map(t=>[relativeLength(t[0]+"%",r.width,r.x),relativeLength(t[1]+"%",r.height,r.y)])}return{type:"Polygon",coordinates:[t]}}}getProjectedBounds(){return MapView.compositeBounds(this.allBounds)}isInside(t){var{geoBoundsProjectedBox:e,geoBoundsProjectedPolygon:o}=this;return Boolean(e&&t.x>=e.x1&&t.x<=e.x2&&t.y>=e.y1&&t.y<=e.y2&&o&&pointInPolygon(t,o))}render(){const{chart:r,mapView:e,options:n}=this,o=n.borderPath||n.field;if(o&&e.group){let t=!0;this.border||(this.border=r.renderer.path().addClass("highcharts-mapview-inset-border").add(e.group),t=!1),r.styledMode||this.border.attr({stroke:n.borderColor,"stroke-width":n.borderWidth});const a=Math.round(this.border.strokeWidth())%2/2,h="mapBoundingBox"===n.relativeTo&&e.getMapBBox()||e.playingField;var i=(o.coordinates||[]).reduce((t,e)=>e.reduce((t,e,o)=>{let[i,s]=e;return"percent"===n.units&&(i=r.plotLeft+relativeLength(i+"%",h.width,h.x),s=r.plotTop+relativeLength(s+"%",h.height,h.y)),i=Math.floor(i)+a,s=Math.floor(s)+a,t.push(0===o?["M",i,s]:["L",i,s]),t},t),[]);this.border[t?"animate":"attr"]({d:i})}}destroy(){this.border&&(this.border=this.border.destroy()),this.eventsToUnbind.forEach(t=>t())}setUpEvents(){}}export default MapView;