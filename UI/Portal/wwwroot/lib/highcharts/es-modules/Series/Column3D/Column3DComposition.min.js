"use strict";import Math3D from"../../Core/Math3D.js";const perspective=Math3D["perspective"];import U from"../../Core/Utilities.js";const{addEvent,extend,pick,pushUnique,wrap}=U,composedMembers=[];function columnSeriesTranslate3dShapes(){var e,i=this,s=i.chart,t=i.options,a=t.depth;let o=(t.stacking?t.stack||0:i.index)*(a+(t.groupZPadding||1)),r=i.borderWidth%2?.5:0,p;s.inverted&&!i.yAxis.reversed&&(r*=-1),!1!==t.grouping&&(o=0),o+=t.groupZPadding||1;for(const n of i.data)if((n.outside3dPlot=null)!==n.y){const h=extend({x:0,y:0,width:0,height:0},n.shapeArgs||{}),l=[["x","width"],["y","height"]],c=n.tooltipPos;let t;for(const d of l)if((t=h[d[0]]-r)<0&&(h[d[1]]+=h[d[0]]+r,h[d[0]]=-r,t=0),t+h[d[1]]>i[d[0]+"Axis"].len&&0!==h[d[1]]&&(h[d[1]]=i[d[0]+"Axis"].len-h[d[0]]),0!==h[d[1]]&&(h[d[0]]>=i[d[0]+"Axis"].len||h[d[0]]+h[d[1]]<=r)){for(const u in h)h[u]="y"===u?-9999:0;n.outside3dPlot=!0}"roundedRect"===n.shapeType&&(n.shapeType="cuboid"),n.shapeArgs=extend(h,{z:o,depth:a,insidePlotArea:!0}),p={x:h.x+h.width/2,y:h.y,z:o+a/2},s.inverted&&(p.x=h.height,p.y=n.clientX||0),n.plot3d=perspective([p],s,!0,!1)[0],c&&(e=perspective([{x:c[0],y:c[1],z:o+a/2}],s,!0,!1)[0],n.tooltipPos=[e.x,e.y])}i.z=o}function compose(t,e){pushUnique(composedMembers,t)&&(i=t.prototype,wrap(i,"alignDataLabel",wrapSeriesAlignDataLabel),wrap(i,"justifyDataLabel",wrapSeriesJustifyDataLabel)),pushUnique(composedMembers,e)&&(i=e.prototype,wrap(i,"getStackBox",wrapStackItemGetStackBox));var{column:e,columnRange:i}=t.types;if(e&&pushUnique(composedMembers,e)){const s=e.prototype,a=s.pointClass.prototype;s.translate3dPoints=()=>{},s.translate3dShapes=columnSeriesTranslate3dShapes,addEvent(s,"afterInit",onColumnSeriesAfterInit),wrap(a,"hasNewShapeType",wrapColumnPointHasNewShapeType),wrap(s,"animate",wrapColumnSeriesAnimate),wrap(s,"plotGroup",wrapColumnSeriesPlotGroup),wrap(s,"pointAttribs",wrapColumnSeriesPointAttribs),wrap(s,"setState",wrapColumnSeriesSetState),wrap(s,"setVisible",wrapColumnSeriesSetVisible),wrap(s,"translate",wrapColumnSeriesTranslate)}i&&pushUnique(composedMembers,i)&&(e=(t=i.prototype).pointClass.prototype,wrap(e,"hasNewShapeType",wrapColumnPointHasNewShapeType),wrap(t,"plotGroup",wrapColumnSeriesPlotGroup),wrap(t,"pointAttribs",wrapColumnSeriesPointAttribs),wrap(t,"setState",wrapColumnSeriesSetState),wrap(t,"setVisible",wrapColumnSeriesSetVisible))}function retrieveStacks(t,e){const i=t.series,s={totalStacks:0};let a,o=1;return i.forEach(function(t){a=pick(t.options.stack,e?0:i.length-1-t.index),s[a]?s[a].series.push(t):(s[a]={series:[t],position:o},o++)}),s.totalStacks=o+1,s}function onColumnSeriesAfterInit(){if(this.chart.is3d()){const t=this,a=t.options,o=a.grouping,r=a.stacking,p=t.yAxis.options.reversedStacks;let e=0;if(void 0===o||o){var i=retrieveStacks(this.chart,r),s=a.stack||0;let t;for(t=0;t<i[s].series.length&&i[s].series[t]!==this;t++);e=10*(i.totalStacks-i[s].position)+(p?t:-t),this.xAxis.reversed||(e=10*i.totalStacks-e)}a.depth=a.depth||25,t.z=t.z||0,a.zIndex=e}}function wrapColumnPointHasNewShapeType(t,...e){return this.series.chart.is3d()?this.graphic&&"g"!==this.graphic.element.nodeName:t.apply(this,e)}function wrapColumnSeriesAnimate(t){if(this.chart.is3d()){const e=arguments,i=e[1],s=this.yAxis,a=this,o=this.yAxis.reversed;if(i)for(const r of a.data)null!==r.y&&(r.height=r.shapeArgs.height,r.shapey=r.shapeArgs.y,r.shapeArgs.height=1,o||(r.stackY?r.shapeArgs.y=r.plotY+s.translate(r.stackY):r.shapeArgs.y=r.plotY+(r.negative?-r.height:r.height)));else{for(const p of a.data)null!==p.y&&(p.shapeArgs.height=p.height,p.shapeArgs.y=p.shapey,p.graphic&&p.graphic[p.outside3dPlot?"attr":"animate"](p.shapeArgs,a.options.animation));this.drawDataLabels()}}else t.apply(this,[].slice.call(arguments,1))}function wrapColumnSeriesPlotGroup(t,e,i,s,a,o){return"dataLabelsGroup"!==e&&"markerGroup"!==e&&this.chart.is3d()&&(this[e]&&delete this[e],o&&(this.chart.columnGroup||(this.chart.columnGroup=this.chart.renderer.g("columnGroup").add(o)),this[e]=this.chart.columnGroup,this.chart.columnGroup.attr(this.getPlotBox()),this[e].survive=!0,"group"===e&&(arguments[3]="visible"))),t.apply(this,Array.prototype.slice.call(arguments,1))}function wrapColumnSeriesPointAttribs(t){const e=t.apply(this,[].slice.call(arguments,1));return this.chart.is3d&&this.chart.is3d()&&(e.stroke=this.options.edgeColor||e.fill,e["stroke-width"]=pick(this.options.edgeWidth,1)),e}function wrapColumnSeriesSetState(t,e,i){var s=this.chart.is3d&&this.chart.is3d();s&&(this.options.inactiveOtherPoints=!0),t.call(this,e,i),s&&(this.options.inactiveOtherPoints=!1)}function wrapColumnSeriesSetVisible(t,e){var i=this;if(i.chart.is3d())for(const s of i.data)s.visible=s.options.visible=e=void 0===e?!pick(i.visible,s.visible):e,i.options.data[i.data.indexOf(s)]=s.options,s.graphic&&s.graphic.attr({visibility:e?"visible":"hidden"});t.apply(this,Array.prototype.slice.call(arguments,1))}function wrapColumnSeriesTranslate(t){t.apply(this,[].slice.call(arguments,1)),this.chart.is3d()&&this.translate3dShapes()}function wrapSeriesAlignDataLabel(t,e,i,s,a){const o=this.chart;if(s.outside3dPlot=e.outside3dPlot,o.is3d()&&this.is("column")){var r=this.options,s=pick(s.inside,!!this.options.stacking),p=o.options.chart.options3d,n=e.pointWidth/2||0;let t={x:a.x+n,y:a.y,z:this.z+r.depth/2};o.inverted&&(s&&(a.width=0,t.x+=e.shapeArgs.height/2),90<=p.alpha&&p.alpha<=270&&(t.y+=e.shapeArgs.width)),t=perspective([t],o,!0,!1)[0],a.x=t.x-n,a.y=e.outside3dPlot?-9e9:t.y}t.apply(this,[].slice.call(arguments,1))}function wrapSeriesJustifyDataLabel(t){return!arguments[2].outside3dPlot&&t.apply(this,[].slice.call(arguments,1))}function wrapStackItemGetStackBox(e,i){const s=e.apply(this,[].slice.call(arguments,1)),a=this.axis.chart,o=i["width"];if(a.is3d()&&this.base){e=+this.base.split(",")[0],i=a.series[e],e=a.options.chart.options3d;if(i&&"column"===i.type){let t={x:s.x+(a.inverted?s.height:o/2),y:s.y,z:i.options.depth/2};a.inverted&&(s.width=0,90<=e.alpha&&e.alpha<=270&&(t.y+=o)),t=perspective([t],a,!0,!1)[0],s.x=t.x-o/2,s.y=t.y}}return s}const Column3DComposition={compose:compose};export default Column3DComposition;