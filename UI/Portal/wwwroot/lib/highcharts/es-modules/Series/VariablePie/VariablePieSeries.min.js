"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const PieSeries=SeriesRegistry.seriesTypes["pie"];import U from"../../Core/Utilities.js";const{arrayMax,arrayMin,clamp,extend,fireEvent,merge,pick}=U;import VariablePieSeriesDefaults from"./VariablePieSeriesDefaults.js";class VariablePieSeries extends PieSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0,this.radii=void 0}calculateExtremes(){const e=this,t=e.chart,i=t.plotWidth,a=t.plotHeight,r=e.options,s=2*(r.slicedOffset||0),n=e.zData,l=Math.min(i,a)-s,o={},h=e.center||e.getCenter();var c,d;for(const P of["minPointSize","maxPointSize"]){var p=r[P],M=/%$/.test(p),p=parseInt(p,10);o[P]=M?l*p/100:2*p}e.minPxSize=h[3]+o.minPointSize,e.maxPxSize=clamp(h[2],h[3]+o.minPointSize,o.maxPointSize),n.length&&(c=pick(r.zMin,arrayMin(n.filter(e.zValEval))),d=pick(r.zMax,arrayMax(n.filter(e.zValEval))),this.getRadii(c,d,e.minPxSize,e.maxPxSize))}getRadii(t,i,a,r){const s=this.zData,n=[],e=this.options,l="radius"!==e.sizeBy,o=i-t;let h,c,d;for(let e=0;e<s.length;e++)c=this.zValEval(s[e])?s[e]:t,d=c<=t?a/2:i<=c?r/2:(h=0<o?(c-t)/o:.5,l&&(h=Math.sqrt(h)),Math.ceil(a+h*(r-a))/2),n.push(d);this.radii=n}redraw(){this.center=null,super.redraw()}getDataLabelPosition(e,t){var{center:i,options:a}=this,r=e.angle||0,s=this.radii[e.index],n=i[0]+Math.cos(r)*s,i=i[1]+Math.sin(r)*s,s=(a.slicedOffset||0)+(a.borderWidth||0),a=Math.min(s,t/5);return{distance:t,natural:{x:n+Math.cos(r)*t,y:i+Math.sin(r)*t},computed:{},alignment:e.half?"right":"left",connectorPosition:{breakAt:{x:n+Math.cos(r)*a,y:i+Math.sin(r)*a},touchingSliceAt:{x:n,y:i}}}}translate(t){this.generatePoints();var i=this,a=1e3,e=i.options,r=e.slicedOffset,s=e.startAngle||0,n=Math.PI/180*(s-90),s=Math.PI/180*(pick(e.endAngle,s+360)-90),l=s-n,o=i.points,h=e.ignoreHiddenPoint;let c=0,d,p,M,P,g,f,S;i.startAngleRad=n,i.endAngleRad=s,i.calculateExtremes(),t||(i.center=t=i.getCenter());for(let e=0;e<o.length;e++)f=o[e],S=i.radii[e],d=n+c*l,h&&!f.visible||(c+=f.percentage/100),p=n+c*l,f.shapeType="arc",f.shapeArgs={x:t[0],y:t[1],r:S,innerR:t[3]/2,start:Math.round(d*a)/a,end:Math.round(p*a)/a},(M=(p+d)/2)>1.5*Math.PI?M-=2*Math.PI:M<-Math.PI/2&&(M+=2*Math.PI),f.slicedTranslation={translateX:Math.round(Math.cos(M)*r),translateY:Math.round(Math.sin(M)*r)},P=Math.cos(M)*t[2]/2,g=Math.sin(M)*t[2]/2,f.tooltipPos=[t[0]+.7*P,t[1]+.7*g],f.half=M<-Math.PI/2||M>Math.PI/2?1:0,f.angle=M;fireEvent(i,"afterTranslate")}zValEval(e){return"number"==typeof e&&!isNaN(e)||null}}VariablePieSeries.defaultOptions=merge(PieSeries.defaultOptions,VariablePieSeriesDefaults),extend(VariablePieSeries.prototype,{pointArrayMap:["y","z"],parallelArrays:["x","y","z"]}),SeriesRegistry.registerSeriesType("variablepie",VariablePieSeries);export default VariablePieSeries;