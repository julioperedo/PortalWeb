"use strict";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{heatmap:HeatmapSeries,scatter:ScatterSeries}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{clamp,pick}=U;function tilePaddingFromTileSize(e,t,a){e=e.options;return{xPad:(e.colsize||1)/-t,yPad:(e.rowsize||1)/-a}}const TilemapShapes={hexagon:{alignDataLabel:ScatterSeries.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,3,2)},haloPath:function(e){if(!e)return[];var t=this.tileEdges;return[["M",t.x2-e,t.y1+e],["L",t.x3+e,t.y1+e],["L",t.x4+1.5*e,t.y2],["L",t.x3+e,t.y3-e],["L",t.x2-e,t.y3-e],["L",t.x1-1.5*e,t.y2],["Z"]]},translate:function(){const e=this,t=e.options,h=e.xAxis,y=e.yAxis,x=t.pointPadding||0,g=(t.colsize||1)/3,m=(t.rowsize||1)/2;let u;e.generatePoints();for(const M of e.points){let e=clamp(Math.floor(h.len-h.translate(M.x-2*g,0,1,0,1)),-h.len,2*h.len),t=clamp(Math.floor(h.len-h.translate(M.x-g,0,1,0,1)),-h.len,2*h.len),a=clamp(Math.floor(h.len-h.translate(M.x+g,0,1,0,1)),-h.len,2*h.len),n=clamp(Math.floor(h.len-h.translate(M.x+2*g,0,1,0,1)),-h.len,2*h.len),l=clamp(Math.floor(y.translate(M.y-m,0,1,0,1)),-y.len,2*y.len),r=clamp(Math.floor(y.translate(M.y,0,1,0,1)),-y.len,2*y.len),o=clamp(Math.floor(y.translate(M.y+m,0,1,0,1)),-y.len,2*y.len),s=pick(M.pointPadding,x),i=s*Math.abs(t-e)/Math.abs(o-r),p=h.reversed?-i:i,d=h.reversed?-s:s,c=y.reversed?-s:s;M.x%2&&(u=u||Math.round(Math.abs(o-l)/2)*(y.reversed?-1:1),l+=u,r+=u,o+=u),M.plotX=M.clientX=(t+a)/2,M.plotY=r,e+=p+d,t+=d,a-=d,n-=p+d,l-=c,o+=c,M.tileEdges={x1:e,x2:t,x3:a,x4:n,y1:l,y2:r,y3:o},M.shapeType="path",M.shapeArgs={d:[["M",t,l],["L",a,l],["L",n,r],["L",a,o],["L",t,o],["L",e,r],["Z"]]}}e.translateColors()}},diamond:{alignDataLabel:ScatterSeries.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,2,2)},haloPath:function(e){if(!e)return[];var t=this.tileEdges;return[["M",t.x2,t.y1+e],["L",t.x3+e,t.y2],["L",t.x2,t.y3-e],["L",t.x1-e,t.y2],["Z"]]},translate:function(){const e=this,t=e.options,r=e.xAxis,o=e.yAxis,s=t.pointPadding||0,i=t.colsize||1,p=(t.rowsize||1)/2;var d;e.generatePoints();for(const x of e.points){let e=clamp(Math.round(r.len-r.translate(x.x-i,0,1,0,0)),-r.len,2*r.len),t=clamp(Math.round(r.len-r.translate(x.x+i,0,1,0,0)),-r.len,2*r.len),a=clamp(Math.round(o.translate(x.y-p,0,1,0,0)),-o.len,2*o.len),n=clamp(Math.round(o.translate(x.y,0,1,0,0)),-o.len,2*o.len),l=clamp(Math.round(o.translate(x.y+p,0,1,0,0)),-o.len,2*o.len);var c=clamp(Math.round(r.len-r.translate(x.x,0,1,0,0)),-r.len,2*r.len),h=pick(x.pointPadding,s),y=h*Math.abs(c-e)/Math.abs(l-n),y=r.reversed?-y:y,h=o.reversed?-h:h;x.x%2&&(d=Math.abs(l-a)/2*(o.reversed?-1:1),a+=d,n+=d,l+=d),x.plotX=x.clientX=c,x.plotY=n,e+=y,t-=y,a-=h,l+=h,x.tileEdges={x1:e,x2:c,x3:t,y1:a,y2:n,y3:l},x.shapeType="path",x.shapeArgs={d:[["M",c,a],["L",t,n],["L",c,l],["L",e,n],["Z"]]}}e.translateColors()}},circle:{alignDataLabel:ScatterSeries.prototype.alignDataLabel,getSeriesPadding:function(e){return tilePaddingFromTileSize(e,2,2)},haloPath:function(e){return ScatterSeries.prototype.pointClass.prototype.haloPath.call(this,e+(e&&this.radius))},translate:function(){const e=this,t=e.options,l=e.xAxis,r=e.yAxis,o=t.pointPadding||0,s=(t.rowsize||1)/2,i=t.colsize||1;let p,d,c,h,y=!1;e.generatePoints();for(const x of e.points){let e=clamp(Math.round(l.len-l.translate(x.x,0,1,0,0)),-l.len,2*l.len),t=clamp(Math.round(r.translate(x.y,0,1,0,0)),-r.len,2*r.len),a=o,n=!1;void 0!==x.pointPadding&&(a=x.pointPadding,n=!0,y=!0),h&&!y||(p=Math.abs(clamp(Math.floor(l.len-l.translate(x.x+i,0,1,0,0)),-l.len,2*l.len)-e),d=Math.abs(clamp(Math.floor(r.translate(x.y+s,0,1,0,0)),-r.len,2*r.len)-t),c=Math.floor(Math.sqrt(p*p+d*d)/2),h=Math.min(p,c,d)-a,y&&!n&&(y=!1)),x.x%2&&(t+=d*(r.reversed?-1:1)),x.plotX=x.clientX=e,x.plotY=t,x.radius=h,x.shapeType="circle",x.shapeArgs={x:e,y:t,r:h}}e.translateColors()}},square:{alignDataLabel:HeatmapSeries.prototype.alignDataLabel,translate:HeatmapSeries.prototype.translate,getSeriesPadding:noop,haloPath:HeatmapSeries.prototype.pointClass.prototype.haloPath}};export default TilemapShapes;