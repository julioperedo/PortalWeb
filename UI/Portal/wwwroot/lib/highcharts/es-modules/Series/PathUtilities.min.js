"use strict";const getLinkPath={default:getDefaultPath,straight:getStraightPath,curved:getCurvedPath};function getDefaultPath(t){var{x1:t,y1:e,x2:a,y2:i,width:n=0,inverted:r=!1,radius:h,parentVisible:u}=t,s=[["M",t,e],["L",t,e],["C",t,e,t,i,t,i],["L",t,i],["C",t,e,t,i,t,i],["L",t,i]];return u?applyRadius([["M",t,e],["L",t+n*(r?-.5:.5),e],["L",t+n*(r?-.5:.5),i],["L",a,i]],h):s}function getStraightPath(t){var{x1:t,y1:e,x2:a,y2:i,width:n=0,inverted:r=!1,parentVisible:h}=t;return h?[["M",t,e],["L",t+n*(r?-1:1),i],["L",a,i]]:[["M",t,e],["L",t,i],["L",t,i]]}function getCurvedPath(t){var{x1:t,y1:e,x2:a,y2:i,offset:n=0,width:r=0,inverted:h=!1,parentVisible:u}=t;return u?[["M",t,e],["C",t+n,e,t-n+r*(h?-1:1),i,t+r*(h?-1:1),i],["L",a,i]]:[["M",t,e],["C",t,e,t,i,t,i],["L",a,i]]}function applyRadius(e,a){const i=[];for(let t=0;t<e.length;t++){var n,r,h,u,s,p,f=e[t][1],L=e[t][2];"number"==typeof f&&"number"==typeof L&&(0===t?i.push(["M",f,L]):t!==e.length-1&&a?(r=e[t-1],u=e[t+1],r&&u&&(n=r[1],r=r[2],h=u[1],u=u[2],"number"==typeof n&&"number"==typeof h&&"number"==typeof r&&"number"==typeof u&&n!==h&&r!==u&&(s=n<h?1:-1,p=r<u?1:-1,i.push(["L",f-s*Math.min(Math.abs(f-n),a),L-p*Math.min(Math.abs(L-r),a)],["C",f,L,f,L,f+s*Math.min(Math.abs(f-h),a),L+p*Math.min(Math.abs(L-u),a)])))):i.push(["L",f,L]))}return i}const PathUtilities={applyRadius:applyRadius,getLinkPath:getLinkPath};export default PathUtilities;