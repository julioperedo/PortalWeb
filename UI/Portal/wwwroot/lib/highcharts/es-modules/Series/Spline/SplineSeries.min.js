"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const LineSeries=SeriesRegistry.seriesTypes["line"];import U from"../../Core/Utilities.js";const{merge,pick}=U;class SplineSeries extends LineSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getPointSpline(i,t,r){const s=1.5,o=2.5,n=t.plotX||0,p=t.plotY||0,l=i[r-1],S=i[r+1];let g,h,c,a;function e(e){return e&&!e.isNull&&!1!==e.doCurve&&!t.isCliff}if(e(l)&&e(S)){var i=l.plotX||0,r=l.plotY||0,u=S.plotX||0,C=S.plotY||0;let e=0;g=(s*n+i)/o,h=(s*p+r)/o,c=(s*n+u)/o,a=(s*p+C)/o,c!==g&&(e=(a-h)*(c-n)/(c-g)+p-a),h+=e,a+=e,h>r&&h>p?(h=Math.max(r,p),a=2*p-h):h<r&&h<p&&(h=Math.min(r,p),a=2*p-h),a>C&&a>p?(a=Math.max(C,p),h=2*p-a):a<C&&a<p&&(a=Math.min(C,p),h=2*p-a),t.rightContX=c,t.rightContY=a,t.controlPoints={low:[g,h],high:[c,a]}}i=["C",pick(l.rightContX,l.plotX,0),pick(l.rightContY,l.plotY,0),pick(g,n,0),pick(h,p,0),n,p];return l.rightContX=l.rightContY=void 0,i}}SplineSeries.defaultOptions=merge(LineSeries.defaultOptions),SeriesRegistry.registerSeriesType("spline",SplineSeries);export default SplineSeries;