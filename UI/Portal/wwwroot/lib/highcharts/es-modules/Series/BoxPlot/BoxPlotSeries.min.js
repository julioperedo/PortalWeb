"use strict";import BoxPlotSeriesDefaults from"./BoxPlotSeriesDefaults.js";import ColumnSeries from"../Column/ColumnSeries.js";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";const{extend,merge,pick}=U;class BoxPlotSeries extends ColumnSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}pointAttribs(){return{}}translate(){const t=this,e=t.yAxis,s=t.pointArrayMap;super.translate.apply(t),t.points.forEach(function(o){s.forEach(function(t){null!==o[t]&&(o[t+"Plot"]=e.translate(o[t],0,1,0,1))}),o.plotHigh=o.highPlot})}drawPoints(){const o=this,t=o.points,e=o.options,s=o.chart,i=s.renderer,r=!1!==o.doQuartiles,a=o.options.whiskerLength;let l,h,d,n,p,m,S,k,c,f,y,x,u;for(const w of t){const g=(k=w.graphic)?"animate":"attr",C=w.shapeArgs,M={},P={},b={},W={},D=w.color||o.color;if(void 0!==w.plotY){c=Math.round(C.width),f=Math.floor(C.x),y=f+c,x=Math.round(c/2),l=Math.floor(r?w.q1Plot:w.lowPlot),h=Math.floor(r?w.q3Plot:w.lowPlot),d=Math.floor(w.highPlot),n=Math.floor(w.lowPlot),k||(w.graphic=k=i.g("point").add(o.group),w.stem=i.path().addClass("highcharts-boxplot-stem").add(k),a&&(w.whiskers=i.path().addClass("highcharts-boxplot-whisker").add(k)),r&&(w.box=i.path(void 0).addClass("highcharts-boxplot-box").add(k)),w.medianShape=i.path(void 0).addClass("highcharts-boxplot-median").add(k)),s.styledMode||(P.stroke=w.stemColor||e.stemColor||D,P["stroke-width"]=pick(w.stemWidth,e.stemWidth,e.lineWidth),P.dashstyle=w.stemDashStyle||e.stemDashStyle||e.dashStyle,w.stem.attr(P),a&&(b.stroke=w.whiskerColor||e.whiskerColor||D,b["stroke-width"]=pick(w.whiskerWidth,e.whiskerWidth,e.lineWidth),b.dashstyle=w.whiskerDashStyle||e.whiskerDashStyle||e.dashStyle,w.whiskers.attr(b)),r&&(M.fill=w.fillColor||e.fillColor||D,M.stroke=e.lineColor||D,M["stroke-width"]=e.lineWidth||0,M.dashstyle=w.boxDashStyle||e.boxDashStyle||e.dashStyle,w.box.attr(M)),W.stroke=w.medianColor||e.medianColor||D,W["stroke-width"]=pick(w.medianWidth,e.medianWidth,e.lineWidth),W.dashstyle=w.medianDashStyle||e.medianDashStyle||e.dashStyle,w.medianShape.attr(W));let t;m=w.stem.strokeWidth()%2/2,S=f+x+m,t=[["M",S,h],["L",S,d],["M",S,l],["L",S,n]],w.stem[g]({d:t}),r&&(m=w.box.strokeWidth()%2/2,l=Math.floor(l)+m,h=Math.floor(h)+m,f+=m,y+=m,t=[["M",f,h],["L",f,l],["L",y,l],["L",y,h],["L",f,h],["Z"]],w.box[g]({d:t})),a&&(d+=m=w.whiskers.strokeWidth()%2/2,n+=m,u=/%$/.test(a)?x*parseFloat(a)/100:a/2,t=[["M",S-u,d],["L",S+u,d],["M",S-u,n],["L",S+u,n]],w.whiskers[g]({d:t})),p=Math.round(w.medianPlot),p+=m=w.medianShape.strokeWidth()%2/2,t=[["M",f,p],["L",y,p]],w.medianShape[g]({d:t})}}}toYData(t){return[t.low,t.q1,t.median,t.q3,t.high]}}BoxPlotSeries.defaultOptions=merge(ColumnSeries.defaultOptions,BoxPlotSeriesDefaults),extend(BoxPlotSeries.prototype,{pointArrayMap:["low","q1","median","q3","high"],pointValKey:"high",drawDataLabels:noop,setStackedPoints:noop}),SeriesRegistry.registerSeriesType("boxplot",BoxPlotSeries);export default BoxPlotSeries;