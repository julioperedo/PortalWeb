"use strict";import Point from"../../Core/Series/Point.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{line:{prototype:{pointClass:LinePoint}},pie:{prototype:{pointClass:PiePoint}}}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{defined,isNumber,merge,objectEach,pick}=U;class TimelinePoint extends LinePoint{constructor(){super(...arguments),this.options=void 0,this.series=void 0}alignConnector(){const t=this,e=t.series,i=t.dataLabel,o=i.connector,s=i.options||{},r=s.connectorWidth||0,n=t.series.chart,a=o.getBBox(),c={x:a.x+(i.translateX||0),y:a.y+(i.translateY||0)};n.inverted?c.y-=r/2:c.x+=r/2;var p=n.isInsidePlot(c.x,c.y);o[p?"animate":"attr"]({d:t.getConnectorPath()}),o.addClass("highcharts-color-"+t.colorIndex),e.chart.styledMode||o.attr({stroke:s.connectorColor||t.color,"stroke-width":s.connectorWidth,opacity:i[defined(i.newOpacity)?"newOpacity":"opacity"]})}drawConnector(){const t=this,{dataLabel:e,series:i}=t;e&&(e.connector||(e.connector=i.chart.renderer.path(t.getConnectorPath()).attr({zIndex:-1}).add(e)),t.series.chart.isInsidePlot(e.x||0,e.y||0)&&t.alignConnector())}getConnectorPath(){const{plotX:t=0,plotY:e=0,series:o,dataLabel:s}=this,r=o.chart,n=o.xAxis.len,a=r.inverted,c=a?"x2":"y2";if(s){var p=s.targetPosition,l=(s.alignAttr||s)[c[0]]<o.yAxis.len/2;let i={x1:t,y1:e,x2:t,y2:(isNumber(p.y)?p:s).y};return a&&(i={x1:e,y1:n-t,x2:p.x||s.x,y2:n-t}),l&&(i[c]+=s[a?"width":"height"]||0),objectEach(i,(t,e)=>{i[e]-=(s.alignAttr||s)[e[0]]}),r.renderer.crispLine([["M",i.x1,i.y1],["L",i.x2,i.y2]],s.options?.connectorWidth||0)}return[]}init(){const t=super.init.apply(this,arguments);return t.name=pick(t.name,"Event"),t.y=1,t}isValid(){return null!==this.options.y}setState(){const t=super.setState;this.isNull||t.apply(this,arguments)}setVisible(t,e){const i=this.series;e=pick(e,i.options.ignoreHiddenPoint),PiePoint.prototype.setVisible.call(this,t,!1),i.processData(),e&&i.chart.redraw()}applyOptions(t,e){return t=Point.prototype.optionsToObject.call(this,t),this.userDLOptions=merge(this.userDLOptions,t.dataLabels),super.applyOptions(t,e)}}export default TimelinePoint;