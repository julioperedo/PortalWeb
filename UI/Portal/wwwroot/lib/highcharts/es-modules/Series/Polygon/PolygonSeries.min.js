"use strict";import H from"../../Core/Globals.js";const noop=H["noop"];import PolygonSeriesDefaults from"./PolygonSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{area:AreaSeries,line:LineSeries,scatter:ScatterSeries}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{extend,merge}=U;class PolygonSeries extends ScatterSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}getGraphPath(){const e=LineSeries.prototype.getGraphPath.call(this);let r=e.length+1;for(;r--;)(r===e.length||"M"===e[r][0])&&0<r&&e.splice(r,0,["Z"]);return this.areaPath=e}drawGraph(){this.options.fillColor=this.color,AreaSeries.prototype.drawGraph.call(this)}}PolygonSeries.defaultOptions=merge(ScatterSeries.defaultOptions,PolygonSeriesDefaults),extend(PolygonSeries.prototype,{type:"polygon",drawTracker:LineSeries.prototype.drawTracker,setStackedPoints:noop}),SeriesRegistry.registerSeriesType("polygon",PolygonSeries);export default PolygonSeries;