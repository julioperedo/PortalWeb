"use strict";import DragNodesComposition from"../DragNodesComposition.js";import GraphLayout from"../GraphLayoutComposition.js";import H from"../../Core/Globals.js";const noop=H["noop"];import NetworkgraphPoint from"./NetworkgraphPoint.js";import NetworkgraphSeriesDefaults from"./NetworkgraphSeriesDefaults.js";import NodesComposition from"../NodesComposition.js";import ReingoldFruchtermanLayout from"./ReingoldFruchtermanLayout.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{column:{prototype:columnProto},line:{prototype:lineProto}}}=SeriesRegistry;import D from"../SimulationSeriesUtilities.js";const{initDataLabels,initDataLabelsDefer}=D;import U from"../../Core/Utilities.js";const{addEvent,defined,extend,merge,pick}=U;class NetworkgraphSeries extends Series{constructor(){super(...arguments),this.data=void 0,this.nodes=void 0,this.options=void 0,this.points=void 0,this.deferDataLabels=!0}static compose(t){DragNodesComposition.compose(t),ReingoldFruchtermanLayout.compose(t)}deferLayout(){let t=this.options.layoutAlgorithm,e=this.chart.graphLayoutsStorage,o=this.chart.graphLayoutsLookup,s=this.chart.options.chart,i;this.visible&&(e||(this.chart.graphLayoutsStorage=e={},this.chart.graphLayoutsLookup=o=[]),(i=e[t.type])||(t.enableSimulation=defined(s.forExport)?!s.forExport:t.enableSimulation,e[t.type]=i=new GraphLayout.layouts[t.type],i.init(t),o.splice(i.index,0,i)),(this.layout=i).setArea(0,0,this.chart.plotWidth,this.chart.plotHeight),i.addElementsToCollection([this],i.series),i.addElementsToCollection(this.nodes,i.nodes),i.addElementsToCollection(this.points,i.links))}destroy(){this.layout&&this.layout.removeElementFromCollection(this,this.layout.series),NodesComposition.destroy.call(this)}drawDataLabels(){if(!this.deferDataLabels){const e=this.options.dataLabels;let t;e?.textPath&&(t=e.textPath),Series.prototype.drawDataLabels.call(this,this.nodes),e?.linkTextPath&&(e.textPath=e.linkTextPath),Series.prototype.drawDataLabels.call(this,this.data),e?.textPath&&(e.textPath=t)}}generatePoints(){let t,e;for(NodesComposition.generatePoints.apply(this,arguments),this.options.nodes&&this.options.nodes.forEach(function(t){this.nodeLookup[t.id]||(this.nodeLookup[t.id]=this.createNode(t.id))},this),e=this.nodes.length-1;0<=e;e--)(t=this.nodes[e]).degree=t.getDegree(),t.radius=pick(t.marker&&t.marker.radius,this.options.marker&&this.options.marker.radius,0),this.nodeLookup[t.id]||t.remove();this.data.forEach(function(t){t.formatPrefix="link"}),this.indexateNodes()}getPointsCollection(){return this.nodes||[]}indexateNodes(){this.nodes.forEach(function(t,e){t.index=e})}init(t,e){return super.init(t,e),initDataLabelsDefer.call(this),addEvent(this,"updatedData",()=>{this.layout&&this.layout.stop()}),addEvent(this,"afterUpdate",()=>{this.nodes.forEach(t=>{t&&t.series&&t.resolveColor()})}),addEvent(this,"afterSimulation",function(){this.deferDataLabels=!1,this.drawDataLabels()}),this}markerAttribs(t,e){const o=Series.prototype.markerAttribs.call(this,t,e);return defined(t.plotY)||(o.y=0),o.x=(t.plotX||0)-(o.width||0)/2,o}pointAttribs(t,e){let o=e||t&&t.state||"normal",s=Series.prototype.pointAttribs.call(this,t,o),i=this.options.states[o];return t&&!t.isNode&&(s=t.getLinkAttributes(),i&&(s={stroke:i.linkColor||s.stroke,dashstyle:i.linkDashStyle||s.dashstyle,opacity:pick(i.linkOpacity,s.opacity),"stroke-width":i.linkColor||s["stroke-width"]})),s}render(){const t=this,e=t.points,o=t.chart.hoverPoint,s=[];t.points=t.nodes,lineProto.render.call(this),(t.points=e).forEach(function(t){t.fromNode&&t.toNode&&(t.renderLink(),t.redrawLink())}),o&&o.series===t&&t.redrawHalo(o),t.chart.hasRendered&&!t.options.dataLabels.allowOverlap&&(t.nodes.concat(t.points).forEach(function(t){t.dataLabel&&s.push(t.dataLabel)}),t.chart.hideOverlappingLabels(s))}setState(t,e){e?(this.points=this.nodes.concat(this.data),Series.prototype.setState.apply(this,arguments),this.points=this.data):Series.prototype.setState.apply(this,arguments),this.layout.simulation||t||this.render()}translate(){this.processedXData||this.processData(),this.generatePoints(),this.deferLayout(),this.nodes.forEach(function(t){t.isInside=!0,t.linksFrom.forEach(function(t){t.shapeType="path",t.y=1})})}}NetworkgraphSeries.defaultOptions=merge(Series.defaultOptions,NetworkgraphSeriesDefaults),extend(NetworkgraphSeries.prototype,{pointClass:NetworkgraphPoint,animate:void 0,directTouch:!0,drawGraph:void 0,forces:["barycenter","repulsive","attractive"],hasDraggableNodes:!0,isCartesian:!1,noSharedTooltip:!0,pointArrayMap:["from","to"],requireSorting:!1,trackerGroups:["group","markerGroup","dataLabelsGroup"],initDataLabels:initDataLabels,buildKDTree:noop,createNode:NodesComposition.createNode,drawTracker:columnProto.drawTracker,onMouseDown:DragNodesComposition.onMouseDown,onMouseMove:DragNodesComposition.onMouseMove,onMouseUp:DragNodesComposition.onMouseUp,redrawHalo:DragNodesComposition.redrawHalo}),SeriesRegistry.registerSeriesType("networkgraph",NetworkgraphSeries);export default NetworkgraphSeries;