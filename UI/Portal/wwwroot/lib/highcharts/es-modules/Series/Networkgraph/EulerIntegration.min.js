"use strict";function attractive(e,t,o,i){var r=e.getMass(),n=o.x/i*t,o=o.y/i*t;e.fromNode.fixedPosition||(e.fromNode.dispX-=n*r.fromNode/e.fromNode.degree,e.fromNode.dispY-=o*r.fromNode/e.fromNode.degree),e.toNode.fixedPosition||(e.toNode.dispX+=n*r.toNode/e.toNode.degree,e.toNode.dispY+=o*r.toNode/e.toNode.degree)}function attractiveForceFunction(e,t){return e*e/t}function barycenter(){const o=this.options.gravitationalConstant,i=this.barycenter.xFactor,r=this.barycenter.yFactor;this.nodes.forEach(function(e){var t;e.fixedPosition||(t=(t=e.getDegree())*(1+t/2),e.dispX+=(i-e.plotX)*o*t/e.degree,e.dispY+=(r-e.plotY)*o*t/e.degree)})}function getK(e){return Math.pow(e.box.width*e.box.height/e.nodes.length,.3)}function integrate(e,t){var o;t.dispX+=t.dispX*e.options.friction,t.dispY+=t.dispY*e.options.friction,0!==(o=t.temperature=e.vectorLength({x:t.dispX,y:t.dispY}))&&(t.plotX+=t.dispX/o*Math.min(Math.abs(t.dispX),e.temperature),t.plotY+=t.dispY/o*Math.min(Math.abs(t.dispY),e.temperature))}function repulsive(e,t,o,i){e.dispX+=o.x/i*t/e.degree,e.dispY+=o.y/i*t/e.degree}function repulsiveForceFunction(e,t){return t*t/e}const EulerIntegration={attractive:attractive,attractiveForceFunction:attractiveForceFunction,barycenter:barycenter,getK:getK,integrate:integrate,repulsive:repulsive,repulsiveForceFunction:repulsiveForceFunction};export default EulerIntegration;