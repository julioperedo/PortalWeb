"use strict";import Axis from"../../Core/Axis/Axis.js";import Chart from"../../Core/Chart/Chart.js";import GanttPoint from"./GanttPoint.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{xrange:XRangeSeries}}=SeriesRegistry;import Tick from"../../Core/Axis/Tick.js";import U from"../../Core/Utilities.js";const{extend,isNumber,merge,splat}=U;import TreeGridAxis from"../../Core/Axis/TreeGrid/TreeGridAxis.js";TreeGridAxis.compose(Axis,Chart,Series,Tick);import"../../Extensions/StaticScale.js";import"../../Gantt/Pathfinder.js";class GanttSeries extends XRangeSeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}drawPoint(t,e){let r=this,i=r.options,s=r.chart.renderer,a=t.shapeArgs,o=t.plotY,n=t.graphic,p=t.selected&&"select",l=i.stacking&&!i.borderRadius,d;t.options.milestone?isNumber(o)&&null!==t.y&&!1!==t.visible?(d=s.symbols.diamond(a.x||0,a.y||0,a.width||0,a.height||0),n?n[e]({d:d}):t.graphic=n=s.path(d).addClass(t.getClassName(),!0).add(t.group||r.group),r.chart.styledMode||t.graphic.attr(r.pointAttribs(t,p)).shadow(i.shadow,null,l)):n&&(t.graphic=n.destroy()):XRangeSeries.prototype.drawPoint.call(r,t,e)}translatePoint(t){var e,r;XRangeSeries.prototype.translatePoint.call(this,t),t.options.milestone&&(r=(e=t.shapeArgs).height||0,t.shapeArgs={x:(e.x||0)-r/2,y:e.y,width:r,height:r})}}GanttSeries.defaultOptions=merge(XRangeSeries.defaultOptions,{grouping:!1,dataLabels:{enabled:!0},tooltip:{headerFormat:'<span style="font-size: 0.8em">{series.name}</span><br/>',pointFormat:null,pointFormatter:function(){let t=this,e=t.series,r=e.xAxis,i=e.tooltipOptions.dateTimeLabelFormats,s=r.options.startOfWeek,a=e.tooltipOptions,o=a.xDateFormat,n,p,l=t.options.milestone,d="<b>"+(t.name||t.yCategory)+"</b>";return a.pointFormat?t.tooltipFormatter(a.pointFormat):(!o&&isNumber(t.start)&&(o=e.chart.time.getDateFormat(r.closestPointRange,t.start,s,i||{})),n=e.chart.time.dateFormat(o,t.start),p=e.chart.time.dateFormat(o,t.end),d+="<br/>",l?d+=n+"<br/>":d=d+"Start: "+n+"<br/>End: "+p+"<br/>",d)}},connectors:{type:"simpleConnect",animation:{reversed:!0},radius:0,startMarker:{enabled:!0,symbol:"arrow-filled",radius:4,fill:"#fa0",align:"left"},endMarker:{enabled:!1,align:"right"}}}),extend(GanttSeries.prototype,{pointArrayMap:["start","end","y"],pointClass:GanttPoint,setData:Series.prototype.setData}),SeriesRegistry.registerSeriesType("gantt",GanttSeries);export default GanttSeries;