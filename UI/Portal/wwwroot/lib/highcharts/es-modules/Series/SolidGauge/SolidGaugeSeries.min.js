"use strict";import BorderRadius from"../../Extensions/BorderRadius.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{gauge:GaugeSeries,pie:PieSeries}=SeriesRegistry.seriesTypes;import SolidGaugeAxis from"../../Core/Axis/SolidGaugeAxis.js";import SolidGaugeSeriesDefaults from"./SolidGaugeSeriesDefaults.js";import U from"../../Core/Utilities.js";const{clamp,extend,isNumber,merge,pick,pInt}=U;class SolidGaugeSeries extends GaugeSeries{constructor(){super(...arguments),this.data=void 0,this.points=void 0,this.options=void 0,this.axis=void 0,this.yAxis=void 0,this.startAngleRad=void 0,this.thresholdAngleRad=void 0}translate(){const e=this.yAxis;SolidGaugeAxis.init(e),!e.dataClasses&&e.options.dataClasses&&e.initDataClasses(e.options),e.initStops(),GaugeSeries.prototype.translate.call(this)}drawPoints(){const d=this,n=d.yAxis,l=n.center,u=d.options,g=d.chart.renderer,e=u.overshoot,p=u.rounded&&void 0===u.borderRadius,h=isNumber(e)?e/180*Math.PI:0;let s;isNumber(u.threshold)&&(s=n.startAngleRad+n.translate(u.threshold,void 0,void 0,void 0,!0)),this.thresholdAngleRad=pick(s,n.startAngleRad);for(const A of d.points)if(!A.isNull){var c=pInt(pick(A.options.radius,u.radius,100))*l[2]/200,S=pInt(pick(A.options.innerRadius,u.innerRadius,60))*l[2]/200,R=Math.min(n.startAngleRad,n.endAngleRad),m=Math.max(n.startAngleRad,n.endAngleRad);let e=A.graphic,s=n.startAngleRad+n.translate(A.y,void 0,void 0,void 0,!0),i,t,r=n.toColor(A.y,A);"none"!==(r="none"===r?A.color||d.color||"none":r)&&(A.color=r),s=clamp(s,R-h,m+h),!1===u.wrap&&(s=clamp(s,R,m));R=p?(c-S)/2/c:0,m=Math.min(s,d.thresholdAngleRad)-R;let a=Math.max(s,d.thresholdAngleRad)+R,o=(a-m>2*Math.PI&&(a=m+2*Math.PI),p?"50%":0);u.borderRadius&&(o=BorderRadius.optionsToObject(u.borderRadius).radius),A.shapeArgs=i={x:l[0],y:l[1],r:c,innerR:S,start:m,end:a,borderRadius:o},A.startR=c,e?(t=i.d,e.animate(extend({fill:r},i)),t&&(i.d=t)):A.graphic=e=g.arc(i).attr({fill:r,"sweep-flag":0}).add(d.group),d.chart.styledMode||("square"!==u.linecap&&e.attr({"stroke-linecap":"round","stroke-linejoin":"round"}),e.attr({stroke:u.borderColor||"none","stroke-width":u.borderWidth||0})),e&&e.addClass(A.getClassName(),!0)}}animate(e){e||(this.startAngleRad=this.thresholdAngleRad,PieSeries.prototype.animate.call(this,e))}}SolidGaugeSeries.defaultOptions=merge(GaugeSeries.defaultOptions,SolidGaugeSeriesDefaults),SeriesRegistry.registerSeriesType("solidgauge",SolidGaugeSeries);export default SolidGaugeSeries;