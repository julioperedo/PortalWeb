"use strict";import ColumnRangePoint from"./ColumnRangePoint.js";import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{arearange:AreaRangeSeries,column:ColumnSeries,column:{prototype:columnProto}}=SeriesRegistry["seriesTypes"];import U from"../../Core/Utilities.js";const{addEvent,clamp,extend,isNumber,merge,pick}=U,columnRangeOptions={borderRadius:{where:"all"},pointRange:null,marker:null,states:{hover:{halo:!1}}};class ColumnRangeSeries extends AreaRangeSeries{setOptions(){return merge(!0,arguments[0],{stacking:void 0}),AreaRangeSeries.prototype.setOptions.apply(this,arguments)}translate(){return columnProto.translate.apply(this)}pointAttribs(){return columnProto.pointAttribs.apply(this,arguments)}translate3dPoints(){return columnProto.translate3dPoints.apply(this,arguments)}translate3dShapes(){return columnProto.translate3dShapes.apply(this,arguments)}afterColumnTranslate(){const i=this.yAxis,l=this.xAxis,p=l.startAngleRad,u=this.chart,m=this.xAxis.isRadial,t=Math.max(u.chartWidth,u.chartHeight)+999;let c,g,h,d;function C(e){return clamp(e,-t,t)}this.points.forEach(e=>{const t=e.shapeArgs||{},o=this.options.minPointLength,r=e.plotY,s=i.translate(e.high,0,1,0,1);var n,a;isNumber(s)&&isNumber(r)&&(e.plotHigh=C(s),e.plotLow=C(r),d=e.plotHigh,c=pick(e.rectPlotY,e.plotY)-e.plotHigh,Math.abs(c)<o?(g=o-c,c+=g,d-=g/2):c<0&&(c*=-1,d-=c),m&&this.polar?(h=e.barX+p,e.shapeType="arc",e.shapeArgs=this.polar.arc(d+c,d,h,h+e.pointWidth)):(t.height=c,t.y=d,{x:n=0,width:a=0}=t,e.shapeArgs=merge(e.shapeArgs,this.crispCol(n,d,a,c)),e.tooltipPos=u.inverted?[i.len+i.pos-u.plotLeft-d-c/2,l.len+l.pos-u.plotTop-n-a/2,c]:[l.left-u.plotLeft+n+a/2,i.pos-u.plotTop+d+c/2,c]))})}}ColumnRangeSeries.defaultOptions=merge(ColumnSeries.defaultOptions,AreaRangeSeries.defaultOptions,columnRangeOptions),addEvent(ColumnRangeSeries,"afterColumnTranslate",function(){ColumnRangeSeries.prototype.afterColumnTranslate.apply(this)},{order:5}),extend(ColumnRangeSeries.prototype,{directTouch:!0,pointClass:ColumnRangePoint,trackerGroups:["group","dataLabelsGroup"],adjustForMissingColumns:columnProto.adjustForMissingColumns,animate:columnProto.animate,crispCol:columnProto.crispCol,drawGraph:noop,drawPoints:columnProto.drawPoints,getSymbol:noop,drawTracker:columnProto.drawTracker,getColumnMetrics:columnProto.getColumnMetrics}),SeriesRegistry.registerSeriesType("columnrange",ColumnRangeSeries);export default ColumnRangeSeries;