"use strict";import BubbleLegendComposition from"./BubbleLegendComposition.js";import BubblePoint from"./BubblePoint.js";import Color from"../../Core/Color/Color.js";const color=Color["parse"];import H from"../../Core/Globals.js";const noop=H["noop"];import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{column:{prototype:columnProto},scatter:ScatterSeries}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{addEvent,arrayMax,arrayMin,clamp,extend,isNumber,merge,pick}=U,composedMembers=[];function axisBeforePadding(){const t=this.len,r=(this.chart,this.isXAxis),a=r?"xData":"yData",o=this.min,n=this.max-o;let l=0,h=t,p=t/n,m;this.series.forEach(i=>{if(i.bubblePadding&&i.reserveSpace()){this.allowZoomOutside=!0,m=!0;var e,s=i[a];if(r&&((i.onPoint||i).getRadii(0,0,i),i.onPoint&&(i.radii=i.onPoint.radii)),0<n){let t=s.length;for(;t--;)isNumber(s[t])&&this.dataMin<=s[t]&&s[t]<=this.max&&(e=i.radii&&i.radii[t]||0,l=Math.min((s[t]-o)*p-e,l),h=Math.max((s[t]-o)*p+e,h))}}}),m&&0<n&&!this.logarithmic&&(h-=t,p*=(t+Math.max(0,l)-Math.min(h,t))/t,[["min","userMin",l],["max","userMax",h]].forEach(t=>{void 0===pick(this.options[t[0]],this[t[1]])&&(this[t[0]]+=t[2]/p)}))}class BubbleSeries extends ScatterSeries{constructor(){super(...arguments),this.data=void 0,this.maxPxSize=void 0,this.minPxSize=void 0,this.options=void 0,this.points=void 0,this.radii=void 0,this.yData=void 0,this.zData=void 0}static compose(t,i,e,s){BubbleLegendComposition.compose(i,e,s),U.pushUnique(composedMembers,t)&&(t.prototype.beforePadding=axisBeforePadding)}animate(t){!t&&this.points.length<this.options.animationLimit&&this.points.forEach(function(t){const i=t["graphic"];i&&i.width&&(this.hasRendered||i.attr({x:t.plotX,y:t.plotY,width:1,height:1}),i.animate(this.markerAttribs(t),this.options.animation))},this)}getRadii(){const t=this.zData,i=this.yData,e=[];let s,r,a,o=this.chart.bubbleZExtremes;var{minPxSize:n,maxPxSize:l}=this.getPxExtremes();if(!o){let i=Number.MAX_VALUE,e=-Number.MAX_VALUE,s;this.chart.series.forEach(t=>{t.bubblePadding&&t.reserveSpace()&&((t=(t.onPoint||t).getZExtremes())&&(i=Math.min(pick(i,t.zMin),t.zMin),e=Math.max(pick(e,t.zMax),t.zMax),s=!0))}),s?(o={zMin:i,zMax:e},this.chart.bubbleZExtremes=o):o={zMin:0,zMax:0}}for(r=0,s=t.length;r<s;r++)a=t[r],e.push(this.getRadius(o.zMin,o.zMax,n,l,a,i&&i[r]));this.radii=e}getRadius(t,i,e,s,r,a){var o=this.options,n="width"!==o.sizeBy,l=o.zThreshold;let h=i-t,p=.5;if(null===a||null===r)return null;if(isNumber(r)){if(o.sizeByAbsoluteValue&&(r=Math.abs(r-l),i=h=Math.max(i-l,Math.abs(t-l)),t=0),r<t)return e/2-1;0<h&&(p=(r-t)/h)}return n&&0<=p&&(p=Math.sqrt(p)),Math.ceil(e+p*(s-e))/2}hasData(){return!!this.processedXData.length}pointAttribs(t,i){const e=this.options.marker,s=e.fillOpacity,r=Series.prototype.pointAttribs.call(this,t,i);return 1!==s&&(r.fill=color(r.fill).setOpacity(s).get("rgba")),r}translate(){super.translate.call(this),this.getRadii(),this.translateBubble()}translateBubble(){var{data:t,options:i,radii:e}=this,s=this.getPxExtremes()["minPxSize"];let r=t.length;for(;r--;){const o=t[r];var a=e?e[r]:0;"z"===this.zoneAxis&&(o.negative=(o.z||0)<(i.zThreshold||0)),isNumber(a)&&s/2<=a?(o.marker=extend(o.marker,{radius:a,width:2*a,height:2*a}),o.dlBox={x:o.plotX-a,y:o.plotY-a,width:2*a,height:2*a}):(o.shapeArgs=o.plotY=o.dlBox=void 0,o.isInside=!1)}}getPxExtremes(){const e=Math.min(this.chart.plotWidth,this.chart.plotHeight);var t=t=>{let i;return"string"==typeof t&&(i=/%$/.test(t),t=parseInt(t,10)),i?e*t/100:t},i=t(pick(this.options.minSize,8));return{minPxSize:i,maxPxSize:Math.max(t(pick(this.options.maxSize,"20%")),i)}}getZExtremes(){var t=this.options,i=(this.zData||[]).filter(isNumber);if(i.length){var e=pick(t.zMin,clamp(arrayMin(i),!1===t.displayNegative?t.zThreshold||0:-Number.MAX_VALUE,Number.MAX_VALUE)),t=pick(t.zMax,arrayMax(i));if(isNumber(e)&&isNumber(t))return{zMin:e,zMax:t}}}}BubbleSeries.defaultOptions=merge(ScatterSeries.defaultOptions,{dataLabels:{formatter:function(){const t=this.series.chart["numberFormatter"];var i=this.point["z"];return isNumber(i)?t(i,-1):""},inside:!0,verticalAlign:"middle"},animationLimit:250,marker:{lineColor:null,lineWidth:1,fillOpacity:.5,radius:null,states:{hover:{radiusPlus:0}},symbol:"circle"},minSize:8,maxSize:"20%",softThreshold:!1,states:{hover:{halo:{size:5}}},tooltip:{pointFormat:"({point.x}, {point.y}), Size: {point.z}"},turboThreshold:0,zThreshold:0,zoneAxis:"z"}),extend(BubbleSeries.prototype,{alignDataLabel:columnProto.alignDataLabel,applyZones:noop,bubblePadding:!0,isBubble:!0,pointArrayMap:["y","z"],pointClass:BubblePoint,parallelArrays:["x","y","z"],trackerGroups:["group","dataLabelsGroup"],specialGroup:"group",zoneAxis:"z"}),addEvent(BubbleSeries,"updatedData",t=>{delete t.target.chart.bubbleZExtremes}),addEvent(BubbleSeries,"remove",t=>{delete t.target.chart.bubbleZExtremes}),SeriesRegistry.registerSeriesType("bubble",BubbleSeries);export default BubbleSeries;