"use strict";import DPU from"../DrawPointUtilities.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{pie:{prototype:{pointClass:PiePoint}},scatter:{prototype:{pointClass:ScatterPoint}}}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{extend,isNumber,pick}=U;class TreemapPoint extends ScatterPoint{constructor(){super(...arguments),this.name=void 0,this.node=void 0,this.options=void 0,this.series=void 0,this.shapeType="rect",this.value=void 0}draw(e){DPU.draw(this,e)}getClassName(){var e=this.series,t=e.options;let i=super.getClassName();return this.node.level<=e.nodeMap[e.rootNode].level?i+=" highcharts-above-level":this.node.isLeaf||pick(t.interactByLeaf,!t.allowTraversingTree)?this.node.isLeaf||(i+=" highcharts-internal-node"):i+=" highcharts-internal-node-interactive",i}isValid(){return Boolean(this.id||isNumber(this.value))}setState(e){super.setState.apply(this,arguments),this.graphic&&this.graphic.attr({zIndex:"hover"===e?1:0})}shouldDraw(){return isNumber(this.plotY)&&null!==this.y}}extend(TreemapPoint.prototype,{setVisible:PiePoint.prototype.setVisible});export default TreemapPoint;