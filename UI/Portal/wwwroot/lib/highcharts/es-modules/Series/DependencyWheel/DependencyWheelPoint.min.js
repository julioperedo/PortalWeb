"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{prototype:{pointClass:SankeyPoint}}=SeriesRegistry.seriesTypes["sankey"];import U from"../../Core/Utilities.js";const{pInt,wrap}=U;class DependencyWheelPoint extends SankeyPoint{constructor(){super(...arguments),this.angle=void 0,this.fromNode=void 0,this.index=void 0,this.linksFrom=void 0,this.linksTo=void 0,this.options=void 0,this.series=void 0,this.shapeArgs=void 0,this.toNode=void 0}getDataLabelPath(t){const e=this,a=e.series.chart.renderer,s=e.shapeArgs,i=e.angle<0||e.angle>Math.PI,r=s.start||0,o=s.end||0;return e.dataLabelPath?(e.dataLabelPath=e.dataLabelPath.destroy(),delete e.dataLabelPath):wrap(t,"destroy",function(t){return e.dataLabelPath&&(e.dataLabelPath=e.dataLabelPath.destroy()),t.call(this)}),e.dataLabelPath=a.arc({open:!0,longArc:Math.abs(Math.abs(r)-Math.abs(o))<Math.PI?0:1}).attr({x:s.x,y:s.y,r:(s.r||0)+pInt(t.options?.distance||0),start:i?r:o,end:i?o:r,clockwise:+i}).add(a.defs),e.dataLabelPath}isValid(){return!0}}export default DependencyWheelPoint;