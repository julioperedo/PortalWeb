"use strict";import H from"../Core/Globals.js";const deg2rad=H["deg2rad"];import Series from"../Core/Series/Series.js";import U from"../Core/Utilities.js";const{fireEvent,isNumber,pick,relativeLength}=U;var CenteredUtilities;!function(e){e.getCenter=function(){var e=this.options,t=this.chart,i=2*(e.slicedOffset||0),r=t.plotWidth-2*i,s=t.plotHeight-2*i,n=e.center,o=Math.min(r,s),a=e.thickness;let d,c=e.size,l=e.innerSize||0,p,f;"string"==typeof c&&(c=parseFloat(c)),"string"==typeof l&&(l=parseFloat(l));const g=[pick(n[0],"50%"),pick(n[1],"50%"),pick(c&&c<0?void 0:e.size,"100%"),pick(l&&l<0?void 0:e.innerSize||0,"0%")];for(!t.angular||this instanceof Series||(g[3]=0),p=0;p<4;++p)f=g[p],d=p<2||2===p&&/%$/.test(f),g[p]=relativeLength(f,[r,s,o,g[2]][p])+(d?i:0);return g[3]>g[2]&&(g[3]=g[2]),isNumber(a)&&2*a<g[2]&&0<a&&(g[3]=g[2]-2*a),fireEvent(this,"afterGetCenter",{positions:g}),g},e.getStartAndEndRadians=function(e,t){return e=isNumber(e)?e:0,t=isNumber(t)&&e<t&&t-e<360?t:e+360,{start:deg2rad*(e+-90),end:deg2rad*(t+-90)}}}(CenteredUtilities=CenteredUtilities||{});export default CenteredUtilities;