"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{prototype:{pointClass:ColumnPoint}}=SeriesRegistry.seriesTypes["column"];import U from"../../Core/Utilities.js";const extend=U["extend"];class XRangePoint extends ColumnPoint{constructor(){super(...arguments),this.options=void 0,this.series=void 0}static getColorByCategory(t,o){var e=t.options.colors||t.chart.options.colors,t=e?e.length:t.chart.options.chart.colorCount,o=o.y%t;return{colorIndex:o,color:e&&e[o]}}resolveColor(){var t,o=this.series;o.options.colorByPoint&&!this.options.color?(t=XRangePoint.getColorByCategory(o,this),o.chart.styledMode||(this.color=t.color),this.options.colorIndex||(this.colorIndex=t.colorIndex)):this.color||(this.color=o.color)}init(){return super.init.apply(this,arguments),this.y||(this.y=0),this}setState(){super.setState.apply(this,arguments),this.series.drawPoint(this,this.series.getAnimationVerb())}getLabelConfig(){const t=super.getLabelConfig.call(this),o=this.series.yAxis.categories;return t.x2=this.x2,t.yCategory=this.yCategory=o&&o[this.y],t.key=this.category||this.name,t}isValid(){return"number"==typeof this.x&&"number"==typeof this.x2}}extend(XRangePoint.prototype,{ttBelow:!1,tooltipDateKeys:["x","x2"]});export default XRangePoint;