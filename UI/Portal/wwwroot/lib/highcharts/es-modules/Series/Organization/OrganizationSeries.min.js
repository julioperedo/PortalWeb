"use strict";import OrganizationPoint from"./OrganizationPoint.js";import OrganizationSeriesDefaults from"./OrganizationSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import PathUtilities from"../PathUtilities.js";const SankeySeries=SeriesRegistry.seriesTypes["sankey"];import U from"../../Core/Utilities.js";const{css,extend,isNumber,merge,pick}=U;class OrganizationSeries extends SankeySeries{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}alignDataLabel(e,s,n){e=e.shapeArgs;if(n.useHTML&&e){n=this.options.borderWidth+2*this.options.dataLabels.padding;let i=e.width||0,t=e.height||0;this.chart.inverted&&(i=t,t=e.width||0),t-=n,i-=n;e=s.text;e&&(css(e.element.parentNode,{width:i+"px",height:t+"px"}),css(e.element,{left:0,top:0,width:"100%",height:"100%",overflow:"hidden"})),s.getBBox=()=>({width:i,height:t,x:0,y:0}),s.width=i,s.height=t}super.alignDataLabel.apply(this,arguments)}createNode(i){const t=super.createNode.call(this,i);return t.getSum=()=>1,t}pointAttribs(i,t){const e=this,s=SankeySeries.prototype.pointAttribs.call(e,i,t),n=(i.isNode?i:i.fromNode).level,o=e.mapOptionsToLevel[n||0]||{},a=i.options,r=o.states&&o.states[t]||{},h=pick(r.borderRadius,a.borderRadius,o.borderRadius,e.options.borderRadius),l=pick(r.linkColor,a.linkColor,o.linkColor,e.options.linkColor,r.link&&r.link.color,a.link&&a.link.color,o.link&&o.link.color,e.options.link&&e.options.link.color),p=pick(r.linkLineWidth,a.linkLineWidth,o.linkLineWidth,e.options.linkLineWidth,r.link&&r.link.lineWidth,a.link&&a.link.lineWidth,o.link&&o.link.lineWidth,e.options.link&&e.options.link.lineWidth),d=pick(r.linkOpacity,a.linkOpacity,o.linkOpacity,e.options.linkOpacity,r.link&&r.link.linkOpacity,a.link&&a.link.linkOpacity,o.link&&o.link.linkOpacity,e.options.link&&e.options.link.linkOpacity);return i.isNode?isNumber(h)&&(s.r=h):(s.stroke=l,s["stroke-width"]=p,s.opacity=d,delete s.fill),s}translateLink(o){var a=this.chart,r=this.options,h=o.fromNode,l=o.toNode,p=pick(r.linkLineWidth,r.link.lineWidth),d=Math.round(p)%2/2,g=pick(r.link.offset,.5),k=pick(o.options.link&&o.options.link.type,r.link.type);if(h.shapeArgs&&l.shapeArgs){var c=r.hangingIndent,f=l.options.offset,f=/%$/.test(f)&&parseInt(f,10),y=a.inverted;let i=Math.floor((h.shapeArgs.x||0)+(h.shapeArgs.width||0))+d,t=Math.floor((h.shapeArgs.y||0)+(h.shapeArgs.height||0)/2)+d,e=Math.floor(l.shapeArgs.x||0)+d,s=Math.floor((l.shapeArgs.y||0)+(l.shapeArgs.height||0)/2)+d,n;y&&(i-=h.shapeArgs.width||0,e+=l.shapeArgs.width||0),n=this.colDistance?Math.floor(e+(y?1:-1)*(this.colDistance-this.nodeWidth)/2)+d:Math.floor((e+i)/2)+d,f&&(50<=f||f<=-50)&&(n=e=Math.floor(e+(y?-.5:.5)*(l.shapeArgs.width||0))+d,s=l.shapeArgs.y||0,0<f&&(s+=l.shapeArgs.height||0)),l.hangsFrom===h&&(a.inverted?(t=Math.floor((h.shapeArgs.y||0)+(h.shapeArgs.height||0)-c/2)+d,s=(l.shapeArgs.y||0)+(l.shapeArgs.height||0)):t=Math.floor((h.shapeArgs.y||0)+c/2)+d,n=e=Math.floor((l.shapeArgs.x||0)+(l.shapeArgs.width||0)/2)+d),o.plotX=n,o.plotY=(t+s)/2,o.shapeType="path","straight"===k?o.shapeArgs={d:[["M",i,t],["L",e,s]]}:"curved"===k?(f=Math.abs(e-i)*g*(y?-1:1),o.shapeArgs={d:[["M",i,t],["C",i+f,t,e-f,s,e,s]]}):o.shapeArgs={d:PathUtilities.applyRadius([["M",i,t],["L",n,t],["L",n,s],["L",e,s]],pick(r.linkRadius,r.link.radius))},o.dlBox={x:(i+e)/2,y:(t+s)/2,height:p,width:0}}}translateNode(i,t){super.translateNode(i,t);const e=this.chart,s=this.options,n=s.hangingIndent||0,o=e.inverted?-1:1,a=i.shapeArgs,r=s.hangingIndentTranslation,h=s.minNodeLength||10;let l=i.hangsFrom;if(l)if("cumulative"===r)for(a.height-=n,a.y-=o*n;l;)a.y+=o*n,l=l.hangsFrom;else if("shrink"===r)for(;l&&a.height>n+h;)a.height-=n,l=l.hangsFrom;else a.height-=n,e.inverted||(a.y+=n);i.nodeHeight=e.inverted?a.width:a.height}drawDataLabels(){var i=this.options.dataLabels;if(i.linkTextPath&&i.linkTextPath.enabled)for(const t of this.points)t.options.dataLabels=merge(t.options.dataLabels,{useHTML:!1});super.drawDataLabels()}}OrganizationSeries.defaultOptions=merge(SankeySeries.defaultOptions,OrganizationSeriesDefaults),extend(OrganizationSeries.prototype,{pointClass:OrganizationPoint}),SeriesRegistry.registerSeriesType("organization",OrganizationSeries);export default OrganizationSeries;