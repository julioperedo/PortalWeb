"use strict";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{prototype:{pointClass:SankeyPointClass}}=SeriesRegistry.seriesTypes["sankey"];import U from"../../Core/Utilities.js";const{defined,find,pick}=U;function getOffset(o){let i=o.linksFrom.length;return o.linksFrom.forEach(o=>{o.id===o.toNode.linksTo[0].id?i+=getOffset(o.toNode):i--}),i}class OrganizationPoint extends SankeyPointClass{constructor(){super(...arguments),this.fromNode=void 0,this.linksFrom=void 0,this.linksTo=void 0,this.options=void 0,this.series=void 0,this.toNode=void 0}init(){return super.init.apply(this,arguments),this.isNode||(this.dataLabelOnNull=!0,this.formatPrefix="link"),this}getSum(){return 1}setNodeColumn(){super.setNodeColumn();const e=this,s=e.getFromNode().fromNode;if(!defined(e.options.column)&&0!==e.linksTo.length&&s&&"hanging"===s.options.layout){let t=-1,i;e.options.layout=pick(e.options.layout,"hanging"),e.hangsFrom=s,find(s.linksFrom,(o,i)=>{o=o.toNode===e;return o&&(t=i),o});for(let o=0;o<s.linksFrom.length;++o)(i=s.linksFrom[o]).toNode.id===e.id?o=s.linksFrom.length:t+=getOffset(i.toNode);e.column=(e.column||0)+t}}}export default OrganizationPoint;