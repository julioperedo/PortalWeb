"use strict";import A from"../../Core/Animation/AnimationUtilities.js";const animObject=A["animObject"];import H from"../../Core/Globals.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{scatter:ScatterSeries}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{arrayMax,extend,merge,pick}=U;import VectorSeriesDefaults from"./VectorSeriesDefaults.js";class VectorSeries extends ScatterSeries{constructor(){super(...arguments),this.data=void 0,this.lengthMax=void 0,this.options=void 0,this.points=void 0}animate(t){t?this.markerGroup.attr({opacity:.01}):this.markerGroup.animate({opacity:1},animObject(this.options.animation))}arrow(t){var t=t.length/this.lengthMax*this.options.vectorLength/20,e={start:10*t,center:0,end:-10*t}[this.options.rotationOrigin]||0;return[["M",0,7*t+e],["L",-1.5*t,7*t+e],["L",0,10*t+e],["L",1.5*t,7*t+e],["L",0,7*t+e],["L",0,-10*t+e]]}drawPoints(){const t=this.chart;for(const i of this.points){var e=i.plotX,r=i.plotY;!1===this.options.clip||t.isInsidePlot(e,r,{inverted:t.inverted})?(i.graphic||(i.graphic=this.chart.renderer.path().add(this.markerGroup).addClass("highcharts-point highcharts-color-"+pick(i.colorIndex,i.series.colorIndex))),i.graphic.attr({d:this.arrow(i),translateX:e,translateY:r,rotation:i.direction}),this.chart.styledMode||i.graphic.attr(this.pointAttribs(i))):i.graphic&&(i.graphic=i.graphic.destroy())}}pointAttribs(t,e){var r=this.options;let i=t?.color||this.color,s=this.options.lineWidth;return e&&(i=r.states[e].color||i,s=(r.states[e].lineWidth||s)+(r.states[e].lineWidthPlus||0)),{stroke:i,"stroke-width":s}}translate(){Series.prototype.translate.call(this),this.lengthMax=arrayMax(this.lengthData)}}VectorSeries.defaultOptions=merge(ScatterSeries.defaultOptions,VectorSeriesDefaults),extend(VectorSeries.prototype,{drawGraph:H.noop,getSymbol:H.noop,markerAttribs:H.noop,parallelArrays:["x","y","length","direction"],pointArrayMap:["y","length","direction"]}),SeriesRegistry.registerSeriesType("vector",VectorSeries);export default VectorSeries;