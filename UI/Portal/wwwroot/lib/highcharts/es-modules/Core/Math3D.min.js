"use strict";import H from"./Globals.js";const deg2rad=H["deg2rad"];import U from"./Utilities.js";const pick=U["pick"];function rotate3D(t,e,p,i){return{x:i.cosB*t-i.sinB*p,y:-i.sinA*i.sinB*t+i.cosA*e-i.cosB*i.sinA*p,z:i.cosA*i.sinB*t+i.sinA*e+i.cosA*i.cosB*p}}function perspective(t,e,p,i){const s=e.options.chart.options3d,o=pick(i,!!p&&e.inverted),n={x:e.plotWidth/2,y:e.plotHeight/2,z:s.depth/2,vd:pick(s.depth,1)*pick(s.viewDistance,0)},a=e.scale3d||1,c=deg2rad*s.beta*(o?-1:1),r=deg2rad*s.alpha*(o?-1:1),h={cosA:Math.cos(r),cosB:Math.cos(-c),sinA:Math.sin(r),sinB:Math.sin(-c)};return p||(n.x+=e.plotLeft,n.y+=e.plotTop),t.map(function(t){const e=rotate3D((o?t.y:t.x)-n.x,(o?t.x:t.y)-n.y,(t.z||0)-n.z,h),p=perspective3D(e,n,n.vd);return p.x=p.x*a+n.x,p.y=p.y*a+n.y,p.z=e.z*a+n.z,{x:o?p.y:p.x,y:o?p.x:p.y,z:p.z}})}function perspective3D(t,e,p){e=0<p&&p<Number.POSITIVE_INFINITY?p/(t.z+e.z+p):1;return{x:t.x*e,y:t.y*e}}function pointCameraDistance(t,e){const p=e.options.chart.options3d,i=e.plotWidth/2,s=e.plotHeight/2,o=pick(p.depth,1)*pick(p.viewDistance,0)+p.depth,n=Math.sqrt(Math.pow(i-pick(t.plotX,t.x),2)+Math.pow(s-pick(t.plotY,t.y),2)+Math.pow(o-pick(t.plotZ,t.z),2));return n}function shapeArea(t){let e=0,p,i;for(p=0;p<t.length;p++)i=(p+1)%t.length,e+=t[p].x*t[i].y-t[i].x*t[p].y;return e/2}function shapeArea3D(t,e,p){return shapeArea(perspective(t,e,p))}const Math3D={perspective:perspective,perspective3D:perspective3D,pointCameraDistance:pointCameraDistance,shapeArea:shapeArea,shapeArea3D:shapeArea3D};export default Math3D;