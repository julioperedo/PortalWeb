"use strict";import Color from"../../Color/Color.js";const color=Color["parse"];import RendererRegistry from"../RendererRegistry.js";const SVGElement=RendererRegistry.getRendererType().prototype["Element"];import U from"../../Utilities.js";const{defined,pick}=U;class SVGElement3D extends SVGElement{constructor(){super(...arguments),this.parts=["front","top","side"],this.pathType="cuboid"}initArgs(e){const t=this,r=t.renderer,s=r[t.pathType+"Path"](e),i=s.zIndexes;for(const o of t.parts){const n={class:"highcharts-3d-"+o,zIndex:i[o]||0};r.styledMode&&("top"===o?n.filter="url(#highcharts-brighter)":"side"===o&&(n.filter="url(#highcharts-darker)")),t[o]=r.path(s[o]).attr(n).add(t)}t.attr({"stroke-linejoin":"round",zIndex:i.group}),t.forcedSides=s.forcedSides}singleSetterForParts(e,t,r,s,i,o){const n={},d=[null,null,s||"attr",i,o],l=r&&r.zIndexes;if(r){l&&l.group&&this.attr({zIndex:l.group});for(const a of Object.keys(r))n[a]={},n[a][e]=r[a],l&&(n[a].zIndex=r.zIndexes[a]||0);d[1]=n}else n[e]=t,d[0]=n;return this.processParts.apply(this,d)}processParts(e,t,r,s,i){var o=this;for(const n of o.parts)!1!==(e=t?pick(t[n],!1):e)&&o[n][r](e,s,i);return o}destroy(){return this.processParts(null,null,"destroy"),super.destroy()}attr(e,t,r,s){var i;return"string"==typeof e&&void 0!==t&&(i=e,(e={})[i]=t),e.shapeArgs||defined(e.x)?this.singleSetterForParts("d",null,this.renderer[this.pathType+"Path"](e.shapeArgs||e)):super.attr(e,void 0,r,s)}animate(e,t,r){var s,i;return defined(e.x)&&defined(e.y)?(i=(s=this.renderer[this.pathType+"Path"](e)).forcedSides,this.singleSetterForParts("d",null,s,"animate",t,r),this.attr({zIndex:s.zIndexes.group}),i!==this.forcedSides&&(this.forcedSides=i,this.renderer.styledMode||this.fillSetter(this.fill))):super.animate(e,t,r),this}fillSetter(e){var t=this;return t.forcedSides=t.forcedSides||[],t.singleSetterForParts("fill",null,{front:e,top:color(e).brighten(0<=t.forcedSides.indexOf("top")?0:.1).get(),side:color(e).brighten(0<=t.forcedSides.indexOf("side")?0:-.1).get()}),t.color=t.fill=e,t}}SVGElement3D.types={base:SVGElement3D,cuboid:SVGElement3D};export default SVGElement3D;