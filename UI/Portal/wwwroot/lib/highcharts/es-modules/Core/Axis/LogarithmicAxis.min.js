"use strict";import U from"../Utilities.js";const{addEvent,normalizeTickInterval,pick}=U;var LogarithmicAxis;!function(i){const t=[];function n(i){var t=this,i=i.userOptions;let n=t.logarithmic;"logarithmic"!==i.type?t.logarithmic=void 0:n=n||(t.logarithmic=new r(t))}function o(){var i=this;const t=i.logarithmic;t&&(i.lin2val=function(i){return t.lin2log(i)},i.val2lin=function(i){return t.log2lin(i)})}i.compose=function(i){return U.pushUnique(t,i)&&(i.keepProps.push("logarithmic"),addEvent(i,"init",n),addEvent(i,"afterInit",o)),i};class r{constructor(i){this.axis=i}getLogTickPositions(a,s,c,g){var u=this;const i=u.axis;var t=i.len,n=i.options;let h=[];if(g||(u.minorAutoInterval=void 0),.5<=a)a=Math.round(a),h=i.getLinearTickPositions(a,s,c);else if(.08<=a){var v=Math.floor(s);let i,t,n,o,r,l,e;for(i=.3<a?[1,2,4]:.15<a?[1,2,4,6,8]:[1,2,3,4,5,6,7,8,9],t=v;t<c+1&&!e;t++)for(o=i.length,n=0;n<o&&!e;n++)s<(r=u.log2lin(u.lin2log(t)*i[n]))&&(!g||l<=c)&&void 0!==l&&h.push(l),l>c&&(e=!0),l=r}else{var v=u.lin2log(s),o=u.lin2log(c),r=g?i.getMinorTickInterval():n.tickInterval,r="auto"===r?null:r,n=n.tickPixelInterval/(g?5:1),t=g?t/i.tickPositions.length:t;a=pick(r,u.minorAutoInterval,(o-v)*n/(t||1)),a=normalizeTickInterval(a),h=i.getLinearTickPositions(a,v,o).map(u.log2lin),g||(u.minorAutoInterval=a/5)}return g||(i.tickInterval=a),h}lin2log(i){return Math.pow(10,i)}log2lin(i){return Math.log(i)/Math.LN10}}i.Additions=r}(LogarithmicAxis=LogarithmicAxis||{});export default LogarithmicAxis;