"use strict";import H from"../Globals.js";const isTouchDevice=H["isTouchDevice"];import U from"../Utilities.js";const{addEvent,correctFloat,defined,isNumber,pick}=U,composedMembers=[];function onAxisInit(){var i=this;i.navigatorAxis||(i.navigatorAxis=new NavigatorAxisAdditions(i))}function onAxisZoom(i){const o=this,e=o.chart,t=e.options,a=t.navigator,s=o.navigatorAxis,n=e.zooming.pinchType,r=t.rangeSelector,d=e.zooming.type;var c;o.isXAxis&&(a&&a.enabled||r&&r.enabled)&&("y"===d?i.zoomed=!1:(!isTouchDevice&&"xy"===d||isTouchDevice&&"xy"===n)&&o.options.range&&(c=s.previousZoom,defined(i.newMin)?s.previousZoom=[o.min,o.max]:c&&(i.newMin=c[0],i.newMax=c[1],s.previousZoom=void 0))),void 0!==i.zoomed&&i.preventDefault()}class NavigatorAxisAdditions{static compose(i){U.pushUnique(composedMembers,i)&&(i.keepProps.push("navigatorAxis"),addEvent(i,"init",onAxisInit),addEvent(i,"zoom",onAxisZoom))}constructor(i){this.axis=i}destroy(){this.axis=void 0}toFixedRange(i,o,e,t){const a=this.axis,s=a.chart;let n=pick(e,a.translate(i,!0,!a.horiz)),r=pick(t,a.translate(o,!0,!a.horiz));i=s&&s.fixedRange,o=(a.pointRange||0)/2;return defined(e)||(n=correctFloat(n+o)),defined(t)||(r=correctFloat(r-o)),i&&a.dataMin&&a.dataMax&&(n=r>=a.dataMax?correctFloat(a.dataMax-i):n)<=a.dataMin&&(r=correctFloat(a.dataMin+i)),{min:n=isNumber(n)&&isNumber(r)?n:r=void 0,max:r}}}export default NavigatorAxisAdditions;