"use strict";import U from"../../Utilities.js";const{addEvent,isObject,isNumber,pick,wrap}=U,composedMembers=[];function onTickInit(){var e=this;e.treeGrid||(e.treeGrid=new TreeGridTickAdditions(e))}function onTickHover(e){e.addClass("highcharts-treegrid-node-active"),e.renderer.styledMode||e.css({textDecoration:"underline"})}function onTickHoverExit(e,t){t=isObject(t.style)?t.style:{};e.removeClass("highcharts-treegrid-node-active"),e.renderer.styledMode||e.css({textDecoration:t.textDecoration})}function renderLabelIcon(e,t){const o=e.treeGrid,r=!o.labelIcon,i=t.renderer,s=t.xy,d=t.options,n=d.width||0,a=d.height||0,l={x:s.x-n/2-(d.padding||0),y:s.y-a/2},c=t.collapsed?90:180,p=t.show&&isNumber(l.y);let h=o.labelIcon;h||(o.labelIcon=h=i.path(i.symbols[d.type](d.x||0,d.y||0,n,a)).addClass("highcharts-label-icon").add(t.group)),h[p?"show":"hide"](),i.styledMode||h.attr({cursor:"pointer",fill:pick(t.color,"#666666"),"stroke-width":1,stroke:d.lineColor,strokeWidth:d.lineWidth||0}),h[r?"attr":"animate"]({translateX:l.x,translateY:l.y,rotation:c})}function wrapGetLabelPosition(e,t,o,r,i,s,d,n,a){const l=this,c=pick(l.options&&l.options.labels,s),p=l.pos,h=l.axis,b=h.options,G="treegrid"===b.type,y=e.apply(l,[t,o,r,i,c,d,n,a]);return G&&(s=c&&isObject(c.symbol,!0)?c.symbol:{},e=c&&isNumber(c.indentation)?c.indentation:0,r=(o=(t=h.treeGrid.mapOfPosToGridNode)&&t[p])&&o.depth||1,y.x+=(s.width||0)+2*(s.padding||0)+(r-1)*e),y}function wrapRenderLabel(e){const t=this,o=t.pos,r=t.axis,i=t.label,s=r.treeGrid.mapOfPosToGridNode,d=r.options,n=pick(t.options&&t.options.labels,d&&d.labels),a=n&&isObject(n.symbol,!0)?n.symbol:{},l=s&&s[o],c=l&&l.depth,p="treegrid"===d.type,h=-1<r.tickPositions.indexOf(o),b="highcharts-treegrid-node-",G=r.chart.styledMode;var y;p&&l&&i&&i.element&&i.addClass(b+"level-"+c),e.apply(t,Array.prototype.slice.call(arguments,1)),p&&i&&i.element&&l&&l.descendants&&0<l.descendants&&(e=r.treeGrid.isCollapsed(l),renderLabelIcon(t,{color:!G&&i.styles&&i.styles.color||"",collapsed:e,group:i.parentGroup,options:a,renderer:i.renderer,show:h,xy:i.xy}),y=b+(e?"expanded":"collapsed"),i.addClass(b+(e?"collapsed":"expanded")).removeClass(y),G||i.css({cursor:"pointer"}),[i,t.treeGrid.labelIcon].forEach(e=>{e&&!e.attachedTreeGridEvents&&(addEvent(e.element,"mouseover",function(){onTickHover(i)}),addEvent(e.element,"mouseout",function(){onTickHoverExit(i,n)}),addEvent(e.element,"click",function(){t.treeGrid.toggleCollapse()}),e.attachedTreeGridEvents=!0)}))}class TreeGridTickAdditions{static compose(e){U.pushUnique(composedMembers,e)&&(addEvent(e,"init",onTickInit),wrap(e.prototype,"getLabelPosition",wrapGetLabelPosition),wrap(e.prototype,"renderLabel",wrapRenderLabel),e.prototype.collapse=function(e){this.treeGrid.collapse(e)},e.prototype.expand=function(e){this.treeGrid.expand(e)},e.prototype.toggleCollapse=function(e){this.treeGrid.toggleCollapse(e)})}constructor(e){this.tick=e}collapse(e){const t=this.tick,o=t.axis,r=o.brokenAxis;var i;r&&o.treeGrid.mapOfPosToGridNode&&(i=t.pos,i=o.treeGrid.mapOfPosToGridNode[i],i=o.treeGrid.collapse(i),r.setBreaks(i,pick(e,!0)))}destroy(){this.labelIcon&&this.labelIcon.destroy()}expand(e){const t=this.tick,o=t.axis,r=o.brokenAxis;var i;r&&o.treeGrid.mapOfPosToGridNode&&(i=t.pos,i=o.treeGrid.mapOfPosToGridNode[i],i=o.treeGrid.expand(i),r.setBreaks(i,pick(e,!0)))}toggleCollapse(e){const t=this.tick,o=t.axis,r=o.brokenAxis;var i;r&&o.treeGrid.mapOfPosToGridNode&&(i=t.pos,i=o.treeGrid.mapOfPosToGridNode[i],i=o.treeGrid.toggleCollapse(i),r.setBreaks(i,pick(e,!0)))}}export default TreeGridTickAdditions;