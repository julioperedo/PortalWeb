"use strict";import U from"../Utilities.js";const{addEvent,getMagnitude,normalizeTickInterval,timeUnits}=U;var DateTimeAxis;!function(t){const i=[];function n(){return this.chart.time.getTimeTicks.apply(this.chart.time,arguments)}function a(t){var e=this;"datetime"!==t.userOptions.type?e.dateTime=void 0:e.dateTime||(e.dateTime=new s(e))}t.compose=function(t){if(U.pushUnique(i,t)){t.keepProps.push("dateTime");const e=t.prototype;e.getTimeTicks=n,addEvent(t,"init",a)}return t};class s{constructor(t){this.axis=t}normalizeTimeTickInterval(t,e){var i=e||[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2]],["week",[1,2]],["month",[1,2,3,4,6]],["year",null]];let n=i[i.length-1],a=timeUnits[n[0]],s=n[1],r;for(r=0;r<i.length;r++)if(n=i[r],a=timeUnits[n[0]],s=n[1],i[r+1])if(t<=(a*s[s.length-1]+timeUnits[i[r+1][0]])/2)break;a===timeUnits.year&&t<5*a&&(s=[1,2,5]);e=normalizeTickInterval(t/a,s,"year"===n[0]?Math.max(getMagnitude(t/a),1):1);return{unitRange:a,count:e,unitName:n[0]}}getXDateFormat(t,e){const i=this["axis"],n=i.chart.time;return i.closestPointRange?n.getDateFormat(i.closestPointRange,t,i.options.startOfWeek,e)||n.resolveDTLFormat(e.year).main:n.resolveDTLFormat(e.day).main}}t.Additions=s}(DateTimeAxis=DateTimeAxis||{});export default DateTimeAxis;