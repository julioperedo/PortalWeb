"use strict";import Axis from"../Axis.js";import ColorAxisComposition from"./ColorAxisComposition.js";import ColorAxisDefaults from"./ColorAxisDefaults.js";import ColorAxisLike from"./ColorAxisLike.js";import LegendSymbol from"../../Legend/LegendSymbol.js";import SeriesRegistry from"../../Series/SeriesRegistry.js";const Series=SeriesRegistry["series"];import U from"../../Utilities.js";const{extend,fireEvent,isArray,isNumber,merge,pick}=U;class ColorAxis extends Axis{static compose(e,t,s,i){ColorAxisComposition.compose(ColorAxis,e,t,s,i)}constructor(e,t){super(e,t),this.beforePadding=!1,this.chart=void 0,this.coll="colorAxis",this.dataClasses=void 0,this.options=void 0,this.stops=void 0,this.visible=!0,this.init(e,t)}init(e,t){var s=this,i=e.options.legend||{},o=t.layout?"vertical"!==t.layout:"vertical"!==i.layout,r=t.visible,i=merge(ColorAxis.defaultColorAxisOptions,t,{showEmpty:!1,title:null,visible:i.enabled&&!1!==r});s.side=t.side||o?2:1,s.reversed=t.reversed||!o,s.opposite=!o,super.init(e,i,"colorAxis"),this.userOptions=t,isArray(e.userOptions.colorAxis)&&(e.userOptions.colorAxis[this.index]=t),t.dataClasses&&s.initDataClasses(t),s.initStops(),s.horiz=o,s.zoomEnabled=!1}hasData(){return!!(this.tickPositions||[]).length}setTickPositions(){if(!this.dataClasses)return super.setTickPositions()}setOptions(e){super.setOptions(e),this.options.crosshair=this.options.marker}setAxisSize(){var e=this;const t=e.legendItem&&e.legendItem.symbol;var s,i,o,r,e=e.chart,a=e.options.legend||{};t?(this.left=s=t.attr("x"),this.top=i=t.attr("y"),this.width=o=t.attr("width"),this.height=r=t.attr("height"),this.right=e.chartWidth-s-o,this.bottom=e.chartHeight-i-r,this.len=this.horiz?o:r,this.pos=this.horiz?s:i):this.len=(this.horiz?a.symbolWidth:a.symbolHeight)||ColorAxis.defaultLegendLength}getOffset(){var e=this,t=e.legendItem&&e.legendItem.group,s=e.chart.axisOffset[e.side];if(t){e.axisParent=t,super.getOffset();const i=this.chart.legend;i.allItems.forEach(function(e){e instanceof ColorAxis&&e.drawLegendSymbol(i,e)}),i.render(),this.chart.getMargins(!0),e.added||(e.added=!0,e.labelLeft=0,e.labelRight=e.width),e.chart.axisOffset[e.side]=s}}setLegendColor(){var e=this,t=e.horiz,s=e.reversed,i=s?1:0,s=s?0:1,t=t?[i,0,s,0]:[0,s,0,i];e.legendColor={linearGradient:{x1:t[0],y1:t[1],x2:t[2],y2:t[3]},stops:e.stops}}drawLegendSymbol(e,t){const s=t.legendItem||{},i=e.padding,o=e.options,r=this.options.labels,a=pick(o.itemDistance,10),l=this.horiz,n=pick(o.symbolWidth,l?ColorAxis.defaultLegendLength:12),d=pick(o.symbolHeight,l?12:ColorAxis.defaultLegendLength),h=pick(o.labelPadding,l?16:30);this.setLegendColor(),s.symbol||(s.symbol=this.chart.renderer.symbol("roundedRect",0,e.baseline-11,n,d,{r:o.symbolRadius??3}).attr({zIndex:1}).add(s.group)),s.labelWidth=n+i+(l?a:pick(r.x,r.distance)+this.maxLabelLength),s.labelHeight=d+i+(l?h:0)}setState(t){this.series.forEach(function(e){e.setState(t)})}setVisible(){}getSeriesExtremes(){var e,t=this.series;let s,i,o,r,a,l,n=t.length,d,h;for(this.dataMin=1/0,this.dataMax=-1/0;n--;){if(i=(l=t[n]).colorKey=pick(l.options.colorKey,l.colorKey,l.pointValKey,l.zoneAxis,"y"),r=l.pointArrayMap,a=l[i+"Min"]&&l[i+"Max"],l[i+"Data"])s=l[i+"Data"];else if(r){if(s=[],o=r.indexOf(i),d=l.yData,0<=o&&d)for(h=0;h<d.length;h++)s.push(pick(d[h][o],d[h]))}else s=l.yData;a?(l.minColorValue=l[i+"Min"],l.maxColorValue=l[i+"Max"]):(e=Series.prototype.getExtremes.call(l,s),l.minColorValue=e.dataMin,l.maxColorValue=e.dataMax),void 0!==l.minColorValue&&(this.dataMin=Math.min(this.dataMin,l.minColorValue),this.dataMax=Math.max(this.dataMax,l.maxColorValue)),a||Series.prototype.applyExtremes.call(l)}}drawCrosshair(e,t){var s=this,i=s.legendItem||{},o=t&&t.plotX,r=t&&t.plotY,a=s.pos,l=s.len;let n;t&&((n=s.toPixels(t.getNestedProperty(t.series.colorKey)))<a?n=a-2:n>a+l&&(n=a+l+2),t.plotX=n,t.plotY=s.len-n,super.drawCrosshair(e,t),t.plotX=o,t.plotY=r,s.cross&&!s.cross.addedToColorAxis&&i.group&&(s.cross.addClass("highcharts-coloraxis-marker").add(i.group),s.cross.addedToColorAxis=!0,s.chart.styledMode||"object"!=typeof s.crosshair||s.cross.attr({fill:s.crosshair.color})))}getPlotLinePath(e){var t=this.left,s=e.translatedValue,i=this.top;return isNumber(s)?this.horiz?[["M",s-4,i-6],["L",s+4,i-6],["L",s,i],["Z"]]:[["M",t,s],["L",t-6,s+6],["L",t-6,s-6],["Z"]]:super.getPlotLinePath(e)}update(e,t){const s=this,i=s.chart,o=i.legend;this.series.forEach(e=>{e.isDirtyData=!0}),(e.dataClasses&&o.allItems||s.dataClasses)&&s.destroyItems(),super.update(e,t),s.legendItem&&s.legendItem.label&&(s.setLegendColor(),o.colorizeItem(this,!0))}destroyItems(){const e=this.chart,t=this.legendItem||{};if(t.label)e.legend.destroyItem(this);else if(t.labels)for(const s of t.labels)e.legend.destroyItem(s);e.isDirtyLegend=!0}destroy(){this.chart.isDirtyLegend=!0,this.destroyItems(),super.destroy(...[].slice.call(arguments))}remove(e){this.destroyItems(),super.remove(e)}getDataClassLegendSymbols(){const a=this,l=a.chart,n=a.legendItem&&a.legendItem.labels||[],e=l.options.legend,d=pick(e.valueDecimals,-1),h=pick(e.valueSuffix,""),p=s=>a.series.reduce((e,t)=>(e.push(...t.points.filter(e=>e.dataClass===s)),e),[]);let c;return n.length||a.dataClasses.forEach((e,s)=>{const t=e.from,i=e.to,o=l["numberFormatter"];let r=!0;c="",void 0===t?c="< ":void 0===i&&(c="> "),void 0!==t&&(c+=o(t,d)+h),void 0!==t&&void 0!==i&&(c+=" - "),void 0!==i&&(c+=o(i,d)+h),n.push(extend({chart:l,name:c,options:{},drawLegendSymbol:LegendSymbol.rectangle,visible:!0,isDataClass:!0,setState:e=>{for(const t of p(s))t.setState(e)},setVisible:function(){this.visible=r=a.visible=!r;const e=[];for(const t of p(s))t.setVisible(r),-1===e.indexOf(t.series)&&e.push(t.series);l.legend.colorizeItem(this,r),e.forEach(e=>{fireEvent(e,"afterDataClassLegendClick")})}},e))}),n}}ColorAxis.defaultColorAxisOptions=ColorAxisDefaults,ColorAxis.defaultLegendLength=200,ColorAxis.keepProps=["legendItem"],extend(ColorAxis.prototype,ColorAxisLike),Array.prototype.push.apply(Axis.keepProps,ColorAxis.keepProps);export default ColorAxis;