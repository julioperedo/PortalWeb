"use strict";import DataTable from"../../Data/DataTable.js";import U from"../Utilities.js";const{defined,uniqueKey}=U;class DataSeriesConverter{constructor(e=new DataTable,t={}){this.table=e,this.options=t,this.seriesIdMap={},this.seriesMeta=[]}getSeriesData(s){const a=this.table,t=[];let r,o,n,l;if(s){l=this.seriesIdMap[s].pointArrayMap||["y"];for(let i=0,e=a.getRowCount();i<e;i++){n=!1,r={x:a.getCellAsNumber("x",i,!0)};for(let e=0,t=l.length;e<t;e++)o=l[e]+"_"+s,void 0!==a.getCell(o,i)&&(n=!0,r[l[e]]=a.getCellAsNumber(o,i));n&&t.push(r)}}return t}getAllSeriesData(){const i=this,s=[];var a;for(let e=0,t=i.seriesMeta.length;e<t;e++)a=i.seriesMeta[e].id,s.push({id:a,data:i.getSeriesData(a)});return s}updateTable(i,s){const a=this.table;let r,o,n,l,d,p,f,h,u,x,g,y,M,b,c,D,O,m;if(i&&i.length){this.options.seriesOptions=[],this.seriesMeta=[],this.seriesIdMap={};for(let e=0,t=i.length;e<t;e++){(o=i[e]).id=defined(o.id)?o.id:uniqueKey(),O="_"+o.id,d=(l=o.pointArrayMap||["y"]).length,p=o.options,f=p.keys,h=o.options.data||[],n={id:o.id,pointArrayMap:l,options:o.options},this.options.seriesOptions.push(o.options),this.seriesMeta.push(n),this.seriesIdMap[o.id]=n;for(let e=0,t=h.length;e<t;e++){if(u=h[e],g="y"+O,r={},y=1<d,"number"==typeof u)r[g]=u,r.x=e;else if(u instanceof Array){if(M=f&&-1<f.indexOf("x")?f.indexOf("x"):0,b=f&&-1<f.indexOf("y")?f.indexOf("y"):1,y)for(let e=0;e<d;e++)D=f&&-1<f.indexOf(l[e])?f.indexOf(l[e]):e+u.length-d,c=l[e],r[c+O]=u[D];else r[g]=u[b];r.x=0<u.length-d?u[M]:e}else if(u instanceof Object){if(y){var A=u;for(let e=0;e<d;e++)c=l[e],r[c+O]=A[c]}else r[g]=u.y;r.x=u.x||e}m=""+r.x,(x=a.getRowIndexBy("id",m))?r[g]&&a.setCell(g,x,r[g],s):(r.id=m,a.setRows([r],void 0,s))}}}}}export default DataSeriesConverter;