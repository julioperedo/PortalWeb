"use strict";import Color from"../Color/Color.js";const color=Color["parse"];import D from"../Defaults.js";const genericDefaultOptions=D["defaultOptions"];import Math3D from"../Math3D.js";const{perspective,shapeArea3D}=Math3D;import U from"../Utilities.js";const{addEvent,isArray,merge,pick,wrap}=U;var Chart3D;!function(r){function l(e){this.is3d()&&"scatter"===e.options.type&&(e.options.type="scatter3d")}function s(){if(this.chart3d&&this.is3d()){const e=this,t=e.renderer,i=e.options.chart.options3d,o=e.chart3d.get3dFrame(),r=e.plotLeft,l=e.plotLeft+e.plotWidth,s=e.plotTop,a=e.plotTop+e.plotHeight,x=i.depth,n=r-(o.left.visible?o.left.size:0),h=l+(o.right.visible?o.right.size:0),c=s-(o.top.visible?o.top.size:0),y=a+(o.bottom.visible?o.bottom.size:0),z=0-(o.front.visible?o.front.size:0),b=x+(o.back.visible?o.back.size:0),f=e.hasRendered?"animate":"attr";e.chart3d.frame3d=o,e.frameShapes||(e.frameShapes={bottom:t.polyhedron().add(),top:t.polyhedron().add(),left:t.polyhedron().add(),right:t.polyhedron().add(),back:t.polyhedron().add(),front:t.polyhedron().add()}),e.frameShapes.bottom[f]({class:"highcharts-3d-frame highcharts-3d-frame-bottom",zIndex:o.bottom.frontFacing?-1e3:1e3,faces:[{fill:color(o.bottom.color).brighten(.1).get(),vertexes:[{x:n,y:y,z:z},{x:h,y:y,z:z},{x:h,y:y,z:b},{x:n,y:y,z:b}],enabled:o.bottom.visible},{fill:color(o.bottom.color).brighten(.1).get(),vertexes:[{x:r,y:a,z:x},{x:l,y:a,z:x},{x:l,y:a,z:0},{x:r,y:a,z:0}],enabled:o.bottom.visible},{fill:color(o.bottom.color).brighten(-.1).get(),vertexes:[{x:n,y:y,z:z},{x:n,y:y,z:b},{x:r,y:a,z:x},{x:r,y:a,z:0}],enabled:o.bottom.visible&&!o.left.visible},{fill:color(o.bottom.color).brighten(-.1).get(),vertexes:[{x:h,y:y,z:b},{x:h,y:y,z:z},{x:l,y:a,z:0},{x:l,y:a,z:x}],enabled:o.bottom.visible&&!o.right.visible},{fill:color(o.bottom.color).get(),vertexes:[{x:h,y:y,z:z},{x:n,y:y,z:z},{x:r,y:a,z:0},{x:l,y:a,z:0}],enabled:o.bottom.visible&&!o.front.visible},{fill:color(o.bottom.color).get(),vertexes:[{x:n,y:y,z:b},{x:h,y:y,z:b},{x:l,y:a,z:x},{x:r,y:a,z:x}],enabled:o.bottom.visible&&!o.back.visible}]}),e.frameShapes.top[f]({class:"highcharts-3d-frame highcharts-3d-frame-top",zIndex:o.top.frontFacing?-1e3:1e3,faces:[{fill:color(o.top.color).brighten(.1).get(),vertexes:[{x:n,y:c,z:b},{x:h,y:c,z:b},{x:h,y:c,z:z},{x:n,y:c,z:z}],enabled:o.top.visible},{fill:color(o.top.color).brighten(.1).get(),vertexes:[{x:r,y:s,z:0},{x:l,y:s,z:0},{x:l,y:s,z:x},{x:r,y:s,z:x}],enabled:o.top.visible},{fill:color(o.top.color).brighten(-.1).get(),vertexes:[{x:n,y:c,z:b},{x:n,y:c,z:z},{x:r,y:s,z:0},{x:r,y:s,z:x}],enabled:o.top.visible&&!o.left.visible},{fill:color(o.top.color).brighten(-.1).get(),vertexes:[{x:h,y:c,z:z},{x:h,y:c,z:b},{x:l,y:s,z:x},{x:l,y:s,z:0}],enabled:o.top.visible&&!o.right.visible},{fill:color(o.top.color).get(),vertexes:[{x:n,y:c,z:z},{x:h,y:c,z:z},{x:l,y:s,z:0},{x:r,y:s,z:0}],enabled:o.top.visible&&!o.front.visible},{fill:color(o.top.color).get(),vertexes:[{x:h,y:c,z:b},{x:n,y:c,z:b},{x:r,y:s,z:x},{x:l,y:s,z:x}],enabled:o.top.visible&&!o.back.visible}]}),e.frameShapes.left[f]({class:"highcharts-3d-frame highcharts-3d-frame-left",zIndex:o.left.frontFacing?-1e3:1e3,faces:[{fill:color(o.left.color).brighten(.1).get(),vertexes:[{x:n,y:y,z:z},{x:r,y:a,z:0},{x:r,y:a,z:x},{x:n,y:y,z:b}],enabled:o.left.visible&&!o.bottom.visible},{fill:color(o.left.color).brighten(.1).get(),vertexes:[{x:n,y:c,z:b},{x:r,y:s,z:x},{x:r,y:s,z:0},{x:n,y:c,z:z}],enabled:o.left.visible&&!o.top.visible},{fill:color(o.left.color).brighten(-.1).get(),vertexes:[{x:n,y:y,z:b},{x:n,y:c,z:b},{x:n,y:c,z:z},{x:n,y:y,z:z}],enabled:o.left.visible},{fill:color(o.left.color).brighten(-.1).get(),vertexes:[{x:r,y:s,z:x},{x:r,y:a,z:x},{x:r,y:a,z:0},{x:r,y:s,z:0}],enabled:o.left.visible},{fill:color(o.left.color).get(),vertexes:[{x:n,y:y,z:z},{x:n,y:c,z:z},{x:r,y:s,z:0},{x:r,y:a,z:0}],enabled:o.left.visible&&!o.front.visible},{fill:color(o.left.color).get(),vertexes:[{x:n,y:c,z:b},{x:n,y:y,z:b},{x:r,y:a,z:x},{x:r,y:s,z:x}],enabled:o.left.visible&&!o.back.visible}]}),e.frameShapes.right[f]({class:"highcharts-3d-frame highcharts-3d-frame-right",zIndex:o.right.frontFacing?-1e3:1e3,faces:[{fill:color(o.right.color).brighten(.1).get(),vertexes:[{x:h,y:y,z:b},{x:l,y:a,z:x},{x:l,y:a,z:0},{x:h,y:y,z:z}],enabled:o.right.visible&&!o.bottom.visible},{fill:color(o.right.color).brighten(.1).get(),vertexes:[{x:h,y:c,z:z},{x:l,y:s,z:0},{x:l,y:s,z:x},{x:h,y:c,z:b}],enabled:o.right.visible&&!o.top.visible},{fill:color(o.right.color).brighten(-.1).get(),vertexes:[{x:l,y:s,z:0},{x:l,y:a,z:0},{x:l,y:a,z:x},{x:l,y:s,z:x}],enabled:o.right.visible},{fill:color(o.right.color).brighten(-.1).get(),vertexes:[{x:h,y:y,z:z},{x:h,y:c,z:z},{x:h,y:c,z:b},{x:h,y:y,z:b}],enabled:o.right.visible},{fill:color(o.right.color).get(),vertexes:[{x:h,y:c,z:z},{x:h,y:y,z:z},{x:l,y:a,z:0},{x:l,y:s,z:0}],enabled:o.right.visible&&!o.front.visible},{fill:color(o.right.color).get(),vertexes:[{x:h,y:y,z:b},{x:h,y:c,z:b},{x:l,y:s,z:x},{x:l,y:a,z:x}],enabled:o.right.visible&&!o.back.visible}]}),e.frameShapes.back[f]({class:"highcharts-3d-frame highcharts-3d-frame-back",zIndex:o.back.frontFacing?-1e3:1e3,faces:[{fill:color(o.back.color).brighten(.1).get(),vertexes:[{x:h,y:y,z:b},{x:n,y:y,z:b},{x:r,y:a,z:x},{x:l,y:a,z:x}],enabled:o.back.visible&&!o.bottom.visible},{fill:color(o.back.color).brighten(.1).get(),vertexes:[{x:n,y:c,z:b},{x:h,y:c,z:b},{x:l,y:s,z:x},{x:r,y:s,z:x}],enabled:o.back.visible&&!o.top.visible},{fill:color(o.back.color).brighten(-.1).get(),vertexes:[{x:n,y:y,z:b},{x:n,y:c,z:b},{x:r,y:s,z:x},{x:r,y:a,z:x}],enabled:o.back.visible&&!o.left.visible},{fill:color(o.back.color).brighten(-.1).get(),vertexes:[{x:h,y:c,z:b},{x:h,y:y,z:b},{x:l,y:a,z:x},{x:l,y:s,z:x}],enabled:o.back.visible&&!o.right.visible},{fill:color(o.back.color).get(),vertexes:[{x:r,y:s,z:x},{x:l,y:s,z:x},{x:l,y:a,z:x},{x:r,y:a,z:x}],enabled:o.back.visible},{fill:color(o.back.color).get(),vertexes:[{x:n,y:y,z:b},{x:h,y:y,z:b},{x:h,y:c,z:b},{x:n,y:c,z:b}],enabled:o.back.visible}]}),e.frameShapes.front[f]({class:"highcharts-3d-frame highcharts-3d-frame-front",zIndex:o.front.frontFacing?-1e3:1e3,faces:[{fill:color(o.front.color).brighten(.1).get(),vertexes:[{x:n,y:y,z:z},{x:h,y:y,z:z},{x:l,y:a,z:0},{x:r,y:a,z:0}],enabled:o.front.visible&&!o.bottom.visible},{fill:color(o.front.color).brighten(.1).get(),vertexes:[{x:h,y:c,z:z},{x:n,y:c,z:z},{x:r,y:s,z:0},{x:l,y:s,z:0}],enabled:o.front.visible&&!o.top.visible},{fill:color(o.front.color).brighten(-.1).get(),vertexes:[{x:n,y:c,z:z},{x:n,y:y,z:z},{x:r,y:a,z:0},{x:r,y:s,z:0}],enabled:o.front.visible&&!o.left.visible},{fill:color(o.front.color).brighten(-.1).get(),vertexes:[{x:h,y:y,z:z},{x:h,y:c,z:z},{x:l,y:s,z:0},{x:l,y:a,z:0}],enabled:o.front.visible&&!o.right.visible},{fill:color(o.front.color).get(),vertexes:[{x:l,y:s,z:0},{x:r,y:s,z:0},{x:r,y:a,z:0},{x:l,y:a,z:0}],enabled:o.front.visible},{fill:color(o.front.color).get(),vertexes:[{x:h,y:y,z:z},{x:n,y:y,z:z},{x:n,y:c,z:z},{x:h,y:c,z:z}],enabled:o.front.visible}]})}}function a(){this.styledMode&&[{name:"darker",slope:.6},{name:"brighter",slope:1.4}].forEach(function(e){this.renderer.definition({tagName:"filter",attributes:{id:"highcharts-"+e.name},children:[{tagName:"feComponentTransfer",children:[{tagName:"feFuncR",attributes:{type:"linear",slope:e.slope}},{tagName:"feFuncG",attributes:{type:"linear",slope:e.slope}},{tagName:"feFuncB",attributes:{type:"linear",slope:e.slope}}]}]})},this)}function x(){const t=this.options;this.is3d()&&(t.series||[]).forEach(function(e){"scatter"===(e.type||t.chart.type||t.chart.defaultSeriesType)&&(e.type="scatter3d")})}function n(){const e=this,t=e.options.chart.options3d;if(e.chart3d&&e.is3d()){t&&(t.alpha=t.alpha%360+(0<=t.alpha?0:360),t.beta=t.beta%360+(0<=t.beta?0:360));const i=e.inverted,o=e.clipBox,r=e.margin,l=i?"y":"x",s=i?"x":"y",a=i?"height":"width",x=i?"width":"height";o[l]=-(r[3]||0),o[s]=-(r[0]||0),o[a]=e.chartWidth+(r[3]||0)+(r[1]||0),o[x]=e.chartHeight+(r[0]||0)+(r[2]||0),e.scale3d=1,!0===t.fitToPlot&&(e.scale3d=e.chart3d.getScale(t.depth)),e.chart3d.frame3d=e.chart3d.get3dFrame()}}function h(){this.is3d()&&(this.isDirtyBox=!0)}function c(){this.chart3d&&this.is3d()&&(this.chart3d.frame3d=this.chart3d.get3dFrame())}function y(){this.chart3d||(this.chart3d=new e(this))}function z(e){return this.is3d()||e.apply(this,[].slice.call(arguments,1))}function b(e){let t,i=this.series.length;if(this.is3d())for(;i--;)(t=this.series[i]).translate(),t.render();else e.call(this)}function f(e){e.apply(this,[].slice.call(arguments,1)),this.is3d()&&(this.container.className+=" highcharts-3d-chart")}r.defaultOptions={chart:{options3d:{enabled:!1,alpha:0,beta:0,depth:100,fitToPlot:!0,viewDistance:25,axisLabelPosition:null,frame:{visible:"default",size:1,bottom:{},top:{},left:{},right:{},back:{},front:{}}}}},r.compose=function(e,t){const i=e.prototype,o=t.prototype;i.is3d=function(){return Boolean(this.options.chart.options3d&&this.options.chart.options3d.enabled)},i.propsRequireDirtyBox.push("chart.options3d"),i.propsRequireUpdateSeries.push("chart.options3d"),o.matrixSetter=function(){let t;if(this.pos<1&&(isArray(this.start)||isArray(this.end))){var i=this.start||[1,0,0,1,0,0],o=this.end||[1,0,0,1,0,0];t=[];for(let e=0;e<6;e++)t.push(this.pos*o[e]+(1-this.pos)*i[e])}else t=this.end;this.elem.attr(this.prop,t,null,!0)},merge(!0,genericDefaultOptions,r.defaultOptions),addEvent(e,"init",y),addEvent(e,"addSeries",l),addEvent(e,"afterDrawChartBox",s),addEvent(e,"afterGetContainer",a),addEvent(e,"afterInit",x),addEvent(e,"afterSetChartSize",n),addEvent(e,"beforeRedraw",h),addEvent(e,"beforeRender",c),wrap(i,"isInsidePlot",z),wrap(i,"renderSeries",b),wrap(i,"setClassName",f)};class e{constructor(e){this.frame3d=void 0,this.chart=e}get3dFrame(){function e(e){return.5<(e=shapeArea3D(e,l))?1:e<-.5?-1:0}const l=this.chart,t=l.options.chart.options3d,i=t.frame,o=l.plotLeft,r=l.plotLeft+l.plotWidth,s=l.plotTop,a=l.plotTop+l.plotHeight,x=t.depth,n=e([{x:o,y:a,z:x},{x:r,y:a,z:x},{x:r,y:a,z:0},{x:o,y:a,z:0}]),h=e([{x:o,y:s,z:0},{x:r,y:s,z:0},{x:r,y:s,z:x},{x:o,y:s,z:x}]),c=e([{x:o,y:s,z:0},{x:o,y:s,z:x},{x:o,y:a,z:x},{x:o,y:a,z:0}]),y=e([{x:r,y:s,z:x},{x:r,y:s,z:0},{x:r,y:a,z:0},{x:r,y:a,z:x}]),z=e([{x:o,y:a,z:0},{x:r,y:a,z:0},{x:r,y:s,z:0},{x:o,y:s,z:0}]),b=e([{x:o,y:s,z:x},{x:r,y:s,z:x},{x:r,y:a,z:x},{x:o,y:a,z:x}]);let f=!1,p=!1,d=!1,g=!1;[].concat(l.xAxis,l.yAxis,l.zAxis).forEach(function(e){e&&(e.horiz?e.opposite?p=!0:f=!0:e.opposite?g=!0:d=!0)});function v(t,e,i){const o=["size","color","visible"],r={};for(let e=0;e<o.length;e++){var l=o[e];for(let e=0;e<t.length;e++)if("object"==typeof t[e]){var s=t[e][l];if(null!=s){r[l]=s;break}}}let a=i;return!0===r.visible||!1===r.visible?a=r.visible:"auto"===r.visible&&(a=0<e),{size:pick(r.size,1),color:pick(r.color,"none"),frontFacing:0<e,visible:a}}const m={axes:{},bottom:v([i.bottom,i.top,i],n,f),top:v([i.top,i.bottom,i],h,p),left:v([i.left,i.right,i.side,i],c,d),right:v([i.right,i.left,i.side,i],y,g),back:v([i.back,i.front,i],b,!0),front:v([i.front,i.back,i],z,!1)};if("auto"===t.axisLabelPosition){var u=function(e,t){return e.visible!==t.visible||e.visible&&t.visible&&e.frontFacing!==t.frontFacing};const D=[],k=(u(m.left,m.front)&&D.push({y:(s+a)/2,x:o,z:0,xDir:{x:1,y:0,z:0}}),u(m.left,m.back)&&D.push({y:(s+a)/2,x:o,z:x,xDir:{x:0,y:0,z:-1}}),u(m.right,m.front)&&D.push({y:(s+a)/2,x:r,z:0,xDir:{x:0,y:0,z:1}}),u(m.right,m.back)&&D.push({y:(s+a)/2,x:r,z:x,xDir:{x:-1,y:0,z:0}}),[]),E=(u(m.bottom,m.front)&&k.push({x:(o+r)/2,y:a,z:0,xDir:{x:1,y:0,z:0}}),u(m.bottom,m.back)&&k.push({x:(o+r)/2,y:a,z:x,xDir:{x:-1,y:0,z:0}}),[]),M=(u(m.top,m.front)&&E.push({x:(o+r)/2,y:s,z:0,xDir:{x:1,y:0,z:0}}),u(m.top,m.back)&&E.push({x:(o+r)/2,y:s,z:x,xDir:{x:-1,y:0,z:0}}),[]),A=(u(m.bottom,m.left)&&M.push({z:(0+x)/2,y:a,x:o,xDir:{x:0,y:0,z:-1}}),u(m.bottom,m.right)&&M.push({z:(0+x)/2,y:a,x:r,xDir:{x:0,y:0,z:1}}),[]);u(m.top,m.left)&&A.push({z:(0+x)/2,y:s,x:o,xDir:{x:0,y:0,z:-1}}),u(m.top,m.right)&&A.push({z:(0+x)/2,y:s,x:r,xDir:{x:0,y:0,z:1}});u=function(e,t,i){if(0===e.length)return null;if(1===e.length)return e[0];var o=perspective(e,l,!1);let r=0;for(let e=1;e<o.length;e++)(i*o[e][t]>i*o[r][t]||i*o[e][t]==i*o[r][t]&&o[e].z<o[r].z)&&(r=e);return e[r]};m.axes={y:{left:u(D,"x",-1),right:u(D,"x",1)},x:{top:u(E,"y",-1),bottom:u(k,"y",1)},z:{top:u(A,"y",-1),bottom:u(M,"y",1)}}}else m.axes={y:{left:{x:o,z:0,xDir:{x:1,y:0,z:0}},right:{x:r,z:0,xDir:{x:0,y:0,z:1}}},x:{top:{y:s,z:0,xDir:{x:1,y:0,z:0}},bottom:{y:a,z:0,xDir:{x:1,y:0,z:0}}},z:{top:{x:d?r:o,y:s,xDir:d?{x:0,y:0,z:1}:{x:0,y:0,z:-1}},bottom:{x:d?r:o,y:a,xDir:d?{x:0,y:0,z:1}:{x:0,y:0,z:-1}}}};return m}getScale(e){const t=this.chart,i=t.plotLeft,o=t.plotWidth+i,r=t.plotTop,l=t.plotHeight+r,s=i+t.plotWidth/2,a=r+t.plotHeight/2,x={minX:Number.MAX_VALUE,maxX:-Number.MAX_VALUE,minY:Number.MAX_VALUE,maxY:-Number.MAX_VALUE};let n,h=1;return n=[{x:i,y:r,z:0},{x:i,y:r,z:e}],[0,1].forEach(function(e){n.push({x:o,y:n[e].y,z:n[e].z})}),[0,1,2,3].forEach(function(e){n.push({x:n[e].x,y:l,z:n[e].z})}),(n=perspective(n,t,!1)).forEach(function(e){x.minX=Math.min(x.minX,e.x),x.maxX=Math.max(x.maxX,e.x),x.minY=Math.min(x.minY,e.y),x.maxY=Math.max(x.maxY,e.y)}),i>x.minX&&(h=Math.min(h,1-Math.abs((i+s)/(x.minX+s))%1)),o<x.maxX&&(h=Math.min(h,(o-s)/(x.maxX-s))),r>x.minY&&(h=x.minY<0?Math.min(h,(r+a)/(-x.minY+r+a)):Math.min(h,1-(r+a)/(x.minY+a)%1)),h=l<x.maxY?Math.min(h,Math.abs((l-a)/(x.maxY-a))):h}}r.Additions=e}(Chart3D=Chart3D||{});export default Chart3D;