"use strict";import Fx from"./Fx.js";import U from"../Utilities.js";const{defined,getStyle,isArray,isNumber,isObject,merge,objectEach,pick}=U;function setAnimation(t,e){e.renderer.globalAnimation=pick(t,e.options.chart.animation,!0)}function animObject(t){return isObject(t)?merge({duration:500,defer:0},t):{duration:t?500:0,defer:0}}function getDeferredAnimation(t,e,i){const n=animObject(e),a=i?[i]:t.series;let r=0,o=0;return a.forEach(t=>{t=animObject(t.options.animation);r=e&&defined(e.defer)?n.defer:Math.max(r,t.duration+t.defer),o=Math.min(n.duration,t.duration)}),t.renderer.forExport&&(r=0),{defer:Math.max(0,r-o),duration:Math.min(r,o)}}function animate(i,n,a){let r,o="",s,m,t;isObject(a)||(a={duration:(t=arguments)[2],easing:t[3],complete:t[4]}),isNumber(a.duration)||(a.duration=400),a.easing="function"==typeof a.easing?a.easing:Math[a.easing]||Math.easeInOutSine,a.curAnim=merge(n),objectEach(n,function(t,e){stop(i,e),m=new Fx(i,a,e),s=void 0,"d"===e&&isArray(n.d)?(m.paths=m.initPath(i,i.pathArray,n.d),m.toD=n.d,r=0,s=1):i.attr?r=i.attr(e):(r=parseFloat(getStyle(i,e))||0,"opacity"!==e&&(o="px")),"string"==typeof(s=s||t)&&s.match("px")&&(s=s.replace(/px/g,"")),m.run(r,s,o)})}function stop(t,e){let i=Fx.timers.length;for(;i--;)Fx.timers[i].elem!==t||e&&e!==Fx.timers[i].prop||(Fx.timers[i].stopped=!0)}const animationExports={animate:animate,animObject:animObject,getDeferredAnimation:getDeferredAnimation,setAnimation:setAnimation,stop:stop};export default animationExports;