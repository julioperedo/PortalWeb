"use strict";import Chart from"../parts/Chart.js";var chartProto=Chart.prototype;import ControllableMixin from"./controllable/controllableMixin.js";import ControllableRect from"./controllable/ControllableRect.js";import ControllableCircle from"./controllable/ControllableCircle.js";import ControllablePath from"./controllable/ControllablePath.js";import ControllableImage from"./controllable/ControllableImage.js";import ControllableLabel from"./controllable/ControllableLabel.js";import ControlPoint from"./ControlPoint.js";import EventEmitterMixin from"./eventEmitterMixin.js";import H from"../parts/Globals.js";import MockPoint from"./MockPoint.js";import Pointer from"../parts/Pointer.js";import U from"../parts/Utilities.js";var addEvent=U.addEvent,defined=U.defined,destroyObjectProperties=U.destroyObjectProperties,erase=U.erase,extend=U.extend,find=U.find,fireEvent=U.fireEvent,merge=U.merge,pick=U.pick,splat=U.splat,wrap=U.wrap,Annotation=function(){function t(t,o){var i;this.annotation=void 0,this.coll="annotations",this.collection=void 0,this.graphic=void 0,this.group=void 0,this.labelCollector=void 0,this.labelsGroup=void 0,this.shapesGroup=void 0,this.chart=t,this.points=[],this.controlPoints=[],this.coll="annotations",this.labels=[],this.shapes=[],this.options=merge(this.defaultOptions,o),this.userOptions=o,i=this.getLabelsAndShapesOptions(this.options,o),this.options.labels=i.labels,this.options.shapes=i.shapes,this.init(t,this.options)}return t.prototype.init=function(){this.linkPoints(),this.addControlPoints(),this.addShapes(),this.addLabels(),this.setLabelCollector()},t.prototype.getLabelsAndShapesOptions=function(t,o){var i={};return["labels","shapes"].forEach(function(n){t[n]&&(i[n]=splat(o[n]).map(function(o,i){return merge(t[n][i],o)}))}),i},t.prototype.addShapes=function(){(this.options.shapes||[]).forEach(function(t,o){var i=this.initShape(t,o);merge(!0,this.options.shapes[o],i.options)},this)},t.prototype.addLabels=function(){(this.options.labels||[]).forEach(function(t,o){var i=this.initLabel(t,o);merge(!0,this.options.labels[o],i.options)},this)},t.prototype.addClipPaths=function(){this.setClipAxes(),this.clipXAxis&&this.clipYAxis&&(this.clipRect=this.chart.renderer.clipRect(this.getClipBox()))},t.prototype.setClipAxes=function(){var t=this.chart.xAxis,o=this.chart.yAxis,i=(this.options.labels||[]).concat(this.options.shapes||[]).reduce(function(i,n){return[t[n&&n.point&&n.point.xAxis]||i[0],o[n&&n.point&&n.point.yAxis]||i[1]]},[]);this.clipXAxis=i[0],this.clipYAxis=i[1]},t.prototype.getClipBox=function(){if(this.clipXAxis&&this.clipYAxis)return{x:this.clipXAxis.left,y:this.clipYAxis.top,width:this.clipXAxis.width,height:this.clipYAxis.height}},t.prototype.setLabelCollector=function(){var t=this;t.labelCollector=function(){return t.labels.reduce(function(t,o){return o.options.allowOverlap||t.push(o.graphic),t},[])},t.chart.labelCollectors.push(t.labelCollector)},t.prototype.setOptions=function(t){this.options=merge(this.defaultOptions,t)},t.prototype.redraw=function(t){this.linkPoints(),this.graphic||this.render(),this.clipRect&&this.clipRect.animate(this.getClipBox()),this.redrawItems(this.shapes,t),this.redrawItems(this.labels,t),ControllableMixin.redraw.call(this,t)},t.prototype.redrawItems=function(t,o){for(var i=t.length;i--;)this.redrawItem(t[i],o)},t.prototype.renderItems=function(t){for(var o=t.length;o--;)this.renderItem(t[o])},t.prototype.render=function(){var t=this.chart.renderer;this.graphic=t.g("annotation").attr({zIndex:this.options.zIndex,visibility:this.options.visible?"visible":"hidden"}).add(),this.shapesGroup=t.g("annotation-shapes").add(this.graphic).clip(this.chart.plotBoxClip),this.labelsGroup=t.g("annotation-labels").attr({translateX:0,translateY:0}).add(this.graphic),this.addClipPaths(),this.clipRect&&this.graphic.clip(this.clipRect),this.renderItems(this.shapes),this.renderItems(this.labels),this.addEvents(),ControllableMixin.render.call(this)},t.prototype.setVisibility=function(t){var o=this.options,i=pick(t,!o.visible);this.graphic.attr("visibility",i?"visible":"hidden"),i||this.setControlPointsVisibility(!1),o.visible=i},t.prototype.setControlPointsVisibility=function(t){var o=function(o){o.setControlPointsVisibility(t)};ControllableMixin.setControlPointsVisibility.call(this,t),this.shapes.forEach(o),this.labels.forEach(o)},t.prototype.destroy=function(){var t=this.chart,o=function(t){t.destroy()};this.labels.forEach(o),this.shapes.forEach(o),this.clipXAxis=null,this.clipYAxis=null,erase(t.labelCollectors,this.labelCollector),EventEmitterMixin.destroy.call(this),ControllableMixin.destroy.call(this),destroyObjectProperties(this,t)},t.prototype.remove=function(){return this.chart.removeAnnotation(this)},t.prototype.update=function(t,o){var i=this.chart,n=this.getLabelsAndShapesOptions(this.userOptions,t),e=i.annotations.indexOf(this),s=merge(!0,this.userOptions,t);s.labels=n.labels,s.shapes=n.shapes,this.destroy(),this.constructor(i,s),i.options.annotations[e]=s,this.isUpdating=!0,pick(o,!0)&&i.redraw(),fireEvent(this,"afterUpdate"),this.isUpdating=!1},t.prototype.initShape=function(o,i){var n=merge(this.options.shapeOptions,{controlPointOptions:this.options.controlPointOptions},o),e=new t.shapesMap[n.type](this,n,i);return e.itemType="shape",this.shapes.push(e),e},t.prototype.initLabel=function(t,o){var i=merge(this.options.labelOptions,{controlPointOptions:this.options.controlPointOptions},t),n=new ControllableLabel(this,i,o);return n.itemType="label",this.labels.push(n),n},t.prototype.redrawItem=function(t,o){t.linkPoints(),t.shouldBeDrawn()?(t.graphic||this.renderItem(t),t.redraw(pick(o,!0)&&t.graphic.placed),t.points.length&&this.adjustVisibility(t)):this.destroyItem(t)},t.prototype.adjustVisibility=function(t){var o=!1,i=t.graphic;t.points.forEach(function(t){!1!==t.series.visible&&!1!==t.visible&&(o=!0)}),o?"hidden"===i.visibility&&i.show():i.hide()},t.prototype.destroyItem=function(t){erase(this[t.itemType+"s"],t),t.destroy()},t.prototype.renderItem=function(t){t.render("label"===t.itemType?this.labelsGroup:this.shapesGroup)},t.ControlPoint=ControlPoint,t.MockPoint=MockPoint,t.shapesMap={rect:ControllableRect,circle:ControllableCircle,path:ControllablePath,image:ControllableImage},t.types={},t}();merge(!0,Annotation.prototype,ControllableMixin,EventEmitterMixin,merge(Annotation.prototype,{nonDOMEvents:["add","afterUpdate","drag","remove"],defaultOptions:{visible:!0,draggable:"xy",labelOptions:{align:"center",allowOverlap:!1,backgroundColor:"rgba(0, 0, 0, 0.75)",borderColor:"black",borderRadius:3,borderWidth:1,className:"",crop:!1,formatter:function(){return defined(this.y)?this.y:"Annotation label"},overflow:"justify",padding:5,shadow:!1,shape:"callout",style:{fontSize:"11px",fontWeight:"normal",color:"contrast"},useHTML:!1,verticalAlign:"bottom",x:0,y:-16},shapeOptions:{stroke:"rgba(0, 0, 0, 0.75)",strokeWidth:1,fill:"rgba(0, 0, 0, 0.75)",r:0,snap:2},controlPointOptions:{symbol:"circle",width:10,height:10,style:{stroke:"black","stroke-width":2,fill:"white"},visible:!1,events:{}},events:{},zIndex:6}})),H.extendAnnotation=function(t,o,i,n){o=o||Annotation,merge(!0,t.prototype,o.prototype,i),t.prototype.defaultOptions=merge(t.prototype.defaultOptions,n||{})},extend(chartProto,{initAnnotation:function(t){var o=new(Annotation.types[t.type]||Annotation)(this,t);return this.annotations.push(o),o},addAnnotation:function(t,o){var i=this.initAnnotation(t);return this.options.annotations.push(i.options),pick(o,!0)&&i.redraw(),i},removeAnnotation:function(t){var o=this.annotations,i="annotations"===t.coll?t:find(o,function(o){return o.options.id===t});i&&(fireEvent(i,"remove"),erase(this.options.annotations,i.options),erase(o,i),i.destroy())},drawAnnotations:function(){this.plotBoxClip.attr(this.plotBox),this.annotations.forEach(function(t){t.redraw()})}}),chartProto.collectionsWithUpdate.push("annotations"),chartProto.collectionsWithInit.annotations=[chartProto.addAnnotation],chartProto.callbacks.push(function(t){t.annotations=[],t.options.annotations||(t.options.annotations=[]),t.plotBoxClip=this.renderer.clipRect(this.plotBox),t.controlPointsGroup=t.renderer.g("control-points").attr({zIndex:99}).clip(t.plotBoxClip).add(),t.options.annotations.forEach(function(o,i){var n=t.initAnnotation(o);t.options.annotations[i]=n.options}),t.drawAnnotations(),addEvent(t,"redraw",t.drawAnnotations),addEvent(t,"destroy",function(){t.plotBoxClip.destroy(),t.controlPointsGroup.destroy()})}),wrap(Pointer.prototype,"onContainerMouseDown",function(t){this.chart.hasDraggedAnnotation||t.apply(this,Array.prototype.slice.call(arguments,1))}),H.Annotation=Annotation;export default Annotation;