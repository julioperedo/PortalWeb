!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/cylinder",["highcharts","highcharts/highcharts-3d"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,r,s){e.hasOwnProperty(t)||(e[t]=s.apply(null,r),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Series/Cylinder/SVGElement3DCylinder.js",[e["Core/Color/Color.js"],e["Core/Renderer/RendererRegistry.js"]],function(e,t){const r=e["parse"];e=t.getRendererType().prototype.Element3D;class s extends e{constructor(){super(...arguments),this.parts=["top","bottom","front","back"],this.pathType="cylinder"}fillSetter(e){return this.singleSetterForParts("fill",null,{front:e,back:e,top:r(e).brighten(.1).get(),bottom:r(e).brighten(-.1).get()}),this.color=this.fill=e,this}}return s}),t(e,"Series/Cylinder/CylinderComposition.js",[e["Core/Globals.js"],e["Core/Math3D.js"],e["Series/Cylinder/SVGElement3DCylinder.js"],e["Core/Utilities.js"]],function(e,t,r,s){const{charts:d,deg2rad:f}=e,g=t["perspective"],{extend:n,pick:m,pushUnique:i}=s,o=[];function u(e){return!e.some(e=>"C"===e[0])}function l(e){return this.element3d("cylinder",e)}function h(e){var t=this,r=d[t.chartIndex],s=this.cuboidPath(e),n=!s.isTop,i=!s.isFront,o=t.getCylinderEnd(r,e),r=t.getCylinderEnd(r,e,!0);return{front:t.getCylinderFront(o,r),back:t.getCylinderBack(o,r),top:o,bottom:r,zIndexes:{top:n?3:0,bottom:n?0:3,front:i?2:1,back:i?1:2,group:s.zIndexes.group}}}function p(t){const r=[["M",t[0].x,t[0].y]],s=t.length-2;for(let e=1;e<s;e+=3)r.push(["C",t[e].x,t[e].y,t[e+1].x,t[e+1].y,t[e+2].x,t[e+2].y]);return r}function c(e,t){const r=[];var s,n;return u(e)?(s=e[0],n=e[2],"M"===s[0]&&"L"===n[0]&&(r.push(["M",n[1],n[2]]),r.push(e[3]),r.push(["L",s[1],s[2]]))):("C"===e[2][0]&&r.push(["M",e[2][5],e[2][6]]),r.push(e[3],e[4])),u(t)?"M"===(n=t[0])[0]&&(r.push(["L",n[1],n[2]]),r.push(t[3]),r.push(t[2])):(s=t[2],e=t[3],n=t[4],"C"===s[0]&&"C"===e[0]&&"C"===n[0]&&(r.push(["L",n[5],n[6]]),r.push(["C",n[3],n[4],n[1],n[2],e[5],e[6]]),r.push(["C",e[3],e[4],e[1],e[2],s[5],s[6]]))),r.push(["Z"]),r}function y(e,t,r){var{width:s=0,height:n=0,alphaCorrection:i=0}=t,o=m(t.depth,s,0),d=Math.min(s,o)/2,i=f*(e.options.chart.options3d.beta-90+i),r=(t.y||0)+(r?n:0),n=.5519*d,u=s/2+(t.x||0),l=o/2+(t.z||0),s=[{x:0,y:r,z:d},{x:n,y:r,z:d},{x:d,y:r,z:n},{x:d,y:r,z:0},{x:d,y:r,z:-n},{x:n,y:r,z:-d},{x:0,y:r,z:-d},{x:-n,y:r,z:-d},{x:-d,y:r,z:-n},{x:-d,y:r,z:0},{x:-d,y:r,z:n},{x:-n,y:r,z:d},{x:0,y:r,z:d}],h=Math.cos(i),p=Math.sin(i);let c,y,a;for(const C of s)y=C.x,a=C.z,C.x=y*h-a*p+u,C.z=a*h+y*p+l;o=g(s,e,!0);return c=Math.abs(o[3].y-o[9].y)<2.5&&Math.abs(o[0].y-o[6].y)<2.5?this.toLinePath([o[0],o[3],o[6],o[9]],!0):this.getCurvedPath(o)}function a(e,t){const r=e.slice(0,3);var s;return u(t)?"M"===(e=t[0])[0]&&(r.push(t[2]),r.push(t[1]),r.push(["L",e[1],e[2]])):(e=t[0],s=t[1],t=t[2],"M"===e[0]&&"C"===s[0]&&"C"===t[0]&&(r.push(["L",t[5],t[6]]),r.push(["C",t[3],t[4],t[1],t[2],s[5],s[6]]),r.push(["C",s[3],s[4],s[1],s[2],e[1],e[2]]))),r.push(["Z"]),r}return{compose:function(e){if(i(o,e)){const t=e.prototype;t.Element3D.types.cylinder=r,n(t,{cylinder:l,cylinderPath:h,getCurvedPath:p,getCylinderBack:c,getCylinderEnd:y,getCylinderFront:a})}}}}),t(e,"Series/Cylinder/CylinderPoint.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t){var{pointClass:e}=e.seriesTypes["column"]["prototype"];const r=t["extend"];class s extends e{constructor(){super(...arguments),this.options=void 0,this.series=void 0}}return r(s.prototype,{shapeType:"cylinder"}),s}),t(e,"Series/Cylinder/CylinderSeriesDefaults.js",[],function(){return{}}),t(e,"Series/Cylinder/CylinderSeries.js",[e["Series/Cylinder/CylinderComposition.js"],e["Series/Cylinder/CylinderPoint.js"],e["Series/Cylinder/CylinderSeriesDefaults.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t,r,s,n){var i=s.seriesTypes["column"];const{extend:o,merge:d}=n;class u extends i{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0}}return u.compose=e.compose,u.defaultOptions=d(i.defaultOptions,r),o(u.prototype,{pointClass:t}),s.registerSeriesType("cylinder",u),u}),t(e,"masters/modules/cylinder.src.js",[e["Series/Cylinder/CylinderSeries.js"],e["Core/Renderer/RendererRegistry.js"]],function(e,t){e.compose(t.getRendererType())})});