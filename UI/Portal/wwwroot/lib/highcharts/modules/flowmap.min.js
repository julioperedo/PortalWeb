!function(i){"object"==typeof module&&module.exports?module.exports=i.default=i:"function"==typeof define&&define.amd?define("highcharts/modules/flowmap",["highcharts"],function(t){return i(t),i.Highcharts=t,i}):i("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(t){"use strict";t=t?t._modules:{};function i(t,i,o,e){t.hasOwnProperty(i)||(t[i]=e.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:i,module:t[i]}})))}i(t,"Series/FlowMap/FlowMapPoint.js",[t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,i){let{mapline:{prototype:{pointClass:o}}}=t["seriesTypes"],{pick:e,isString:s,isNumber:r}=i;return class extends o{constructor(){super(...arguments),this.options=void 0,this.series=void 0}isValid(){let i=!(!this.options.to||!this.options.from);return[this.options.to,this.options.from].forEach(function(t){i=!!(i&&t&&(s(t)||r(e(t[0],t.lat))&&r(e(t[1],t.lon))))}),i}}}),i(t,"Series/FlowMap/FlowMapSeries.js",[t["Series/FlowMap/FlowMapPoint.js"],t["Core/Series/SeriesRegistry.js"],t["Core/Utilities.js"]],function(t,i,o){let{series:{prototype:{pointClass:f}},seriesTypes:{column:e,map:s,mapline:r}}=i,{addEvent:c,arrayMax:n,arrayMin:a,defined:b,extend:h,isArray:m,merge:C,pick:k,relativeLength:E}=o;class A extends r{constructor(){super(...arguments),this.data=void 0,this.options=void 0,this.points=void 0,this.smallestWeight=void 0,this.greatestWeight=void 0,this.centerOfPoints=void 0}static getLength(t,i){return Math.sqrt(t*t+i*i)}static normalize(t,i){var o=this.getLength(t,i);return[t/o,i/o]}static markerEndPath(t,i,o,e){let s=E(e.width||0,this.getLength(i[0]-t[0],i[1]-t[1])),r=e.markerType||"arrow",[n,a]=this.normalize(i[0]-t[0],i[1]-t[1]),h=[];var p,l,d,f;return"arrow"===r&&([e,p]=t,e-=n*s,p-=a*s,h.push(["L",e,p]),h.push(["L",o[0],o[1]]),[e,p]=i,e+=n*s,p+=a*s,h.push(["L",e,p])),"mushroom"===r&&([e,p]=t,[t,i]=i,[o,l]=o,d=(t-e)/2+e,f=(i-p)/2+p,e-=n*s,p-=a*s,h.push(["L",e,p]),t+=n*s,i+=a*s,h.push(["Q",2*(o-d)+d,2*(l-f)+f,t,i])),h}animate(t){let i=this.points;t||i.forEach(t=>{if(t.shapeArgs&&m(t.shapeArgs.d)&&t.shapeArgs.d.length){var e=t.shapeArgs.d,s=e[0][1],r=e[0][2];if(s&&r){let o=[];for(let i=0;i<e.length;i++){o.push([...e[i]]);for(let t=1;t<e[i].length;t++)o[i][t]=t%2?s:r}t.graphic&&(t.graphic.attr({d:o}),t.graphic.animate({d:e}))}}})}getLinkWidth(t){var i=this.options.width,o=t.options.weight||this.options.weight;if(t.options.weight=o,i&&!o)return i;t=this.smallestWeight,i=this.greatestWeight;if(!b(o)||!t||!i)return 0;var e=this.options.minWidth;return(o-t)*(this.options.maxWidth-e)/(i-t||1)+e}autoCurve(t,i,o,e,s,r){let n=o-t,a=e-i,h=(o-t)/2+t,p=(e-i)/2+i,l=h-s,d=p-r,f=n*l+a*d,c=n*d-a*l,m=Math.atan2(c,f),g=180*m/Math.PI;return g<0&&(g=360+g),-.7*Math.sin(g*Math.PI/180)}pointAttribs(t,i){let o=s.prototype.pointAttribs.call(this,t,i);return o.fill=k(t.options.fillColor,t.options.color,"none"===this.options.fillColor?null:this.options.fillColor,this.color),o["fill-opacity"]=k(t.options.fillOpacity,this.options.fillOpacity),o["stroke-width"]=k(t.options.lineWidth,this.options.lineWidth,1),t.options.opacity&&(o.opacity=t.options.opacity),o}translate(){!this.chart.hasRendered||!this.isDirtyData&&this.hasRendered||(this.processData(),this.generatePoints());let p=[],l=0,d=0;this.points.forEach(t=>{let i,o,e=this.chart,s=e.mapView,r=t.options,n=()=>{t.series.isDirty=!0},a=t=>{t=e.get(t);if(t instanceof f&&t.plotX&&t.plotY)return c(t,"update",n),{x:t.plotX,y:t.plotY}},h=t=>m(t)?{lon:t[0],lat:t[1]}:t;"string"==typeof r.from?i=a(r.from):"object"==typeof r.from&&s&&(i=s.lonLatToPixels(h(r.from))),"string"==typeof r.to?o=a(r.to):"object"==typeof r.to&&s&&(o=s.lonLatToPixels(h(r.to))),t.fromPos=i,t.toPos=o,i&&o&&(l+=(i.x+o.x)/2,d+=(i.y+o.y)/2),k(t.options.weight,this.options.weight)&&p.push(k(t.options.weight,this.options.weight))}),this.smallestWeight=a(p),this.greatestWeight=n(p),this.centerOfPoints={x:l/this.points.length,y:d/this.points.length},this.points.forEach(t=>{this.getLinkWidth(t)?(t.fromPos&&(t.plotX=t.fromPos.x,t.plotY=t.fromPos.y),t.shapeType="path",t.shapeArgs=this.getPointShapeArgs(t),t.color=k(t.options.color,t.series.color)):t.shapeArgs={d:[]}})}getPointShapeArgs(t){var{fromPos:i,toPos:o}=t;if(!i||!o)return{};let e=this.getLinkWidth(t)/2,s=t.options,r=C(this.options.markerEnd,s.markerEnd),n=k(s.growTowards,this.options.growTowards),a=i.x||0,h=i.y||0,p=o.x||0,l=o.y||0,d=k(s.curveFactor,this.options.curveFactor),f=r&&r.enabled&&r.height||0;b(d)||(d=this.autoCurve(a,h,p,l,this.centerOfPoints.x,this.centerOfPoints.y)),f&&(f=E(f,4*e),i=p-a,c=l-h,g=a+(i*=.5),u=h+(c*=.5),m=i,i=c,c=-m,m=g+i*d,g=u+c*d,[i,u]=A.normalize(m-p,g-l),i*=f,u*=f,p+=i,l+=u);var c=p-a,m=l-h,g=a+(c*=.5),i=h+(m*=.5),u=c,c=m,m=-u;let[y,w]=A.normalize(c,m),v=1+.25*Math.sqrt(d*d),P=(y*=e*v,w*=e*v,g+c*d),x=i+m*d,[M,L]=A.normalize(P-a,x-h);u=M,M=L,L=-u,M*=e,L*=e;var[g,c]=A.normalize(P-p,x-l),u=g,g=-c,c=u;g*=e,c*=e,n&&(M/=e,L/=e,y/=4,w/=4);let W={d:[["M",a-M,h-L],["Q",P-y,x-w,p-g,l-c],["L",p+g,l+c],["Q",P+y,x+w,a+M,h+L],["Z"]]};r&&r.enabled&&W.d&&(i=A.markerEndPath([p-g,l-c],[p+g,l+c],[o.x,o.y],r),W.d.splice(2,0,...i));m=t.options.from,u=t.options.to,g=m.lat,c=m.lon,o=u.lat,i=u.lon;return g&&c&&(t.options.from=+g+", "+ +c),o&&i&&(t.options.to=+o+", "+ +i),W}}return A.defaultOptions=C(r.defaultOptions,{animation:!0,dataLabels:{enabled:!1},fillOpacity:.5,markerEnd:{enabled:!0,height:"40%",width:"40%",markerType:"arrow"},width:1,maxWidth:25,minWidth:5,lineWidth:void 0,tooltip:{headerFormat:'<span style="font-size: 0.8em">{series.name}</span><br/>',pointFormat:"{point.options.from} â†’ {point.options.to}: <b>{point.options.weight}</b>"}}),h(A.prototype,{pointClass:t,pointArrayMap:["from","to","weight"],drawPoints:e.prototype.drawPoints,useMapGeometry:!0}),i.registerSeriesType("flowmap",A),A}),i(t,"masters/modules/flowmap.src.js",[],function(){})});