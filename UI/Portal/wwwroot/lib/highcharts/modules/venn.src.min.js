!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/venn",["highcharts"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,r,n){e.hasOwnProperty(t)||(e[t]=n.apply(null,r),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Core/Geometry/GeometryUtilities.js",[],function(){var e,t;return(t=e=e||{}).getCenterOfPoints=function(e){var t=e.reduce((e,t)=>(e.x+=t.x,e.y+=t.y,e),{x:0,y:0});return{x:t.x/e.length,y:t.y/e.length}},t.getDistanceBetweenPoints=function(e,t){return Math.sqrt(Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2))},t.getAngleBetweenPoints=function(e,t){return Math.atan2(t.x-e.x,t.y-e.y)},e}),t(e,"Core/Geometry/CircleUtilities.js",[e["Core/Geometry/GeometryUtilities.js"]],function(e){const{getAngleBetweenPoints:c,getCenterOfPoints:u,getDistanceBetweenPoints:f}=e;var t;function p(e,t){t=Math.pow(10,t);return Math.round(e*t)/t}function s(e){if(e<=0)throw new Error("radius of circle must be a positive number.");return Math.PI*e*e}function o(e,t){return e*e*Math.acos(1-t/e)-(e-t)*Math.sqrt(t*(2*e-t))}function a(e,t){var r,n,i,s=f(e,t),o=e.r,a=t.r;let l=[];return s<o+a&&s>Math.abs(o-a)&&(a=((o=o*o)-a*a+s*s)/(2*s),o=Math.sqrt(o-a*a),i=(r=e.x)+a*((n=t.x)-r)/s,t=(e=e.y)+a*((a=t.y)-e)/s,a=o/s*-(a-e),e=o/s*-(n-r),l=[{x:p(i+a,14),y:p(t-e,14)},{x:p(i-a,14),y:p(t+e,14)}]),l}function r(e){return e.reduce((e,s,o,t)=>{t=t.slice(o+1).reduce((e,t,r,n)=>{const i=[o,r+o+1];return e.concat(a(s,t).map(e=>(e.indexes=i,e)))},[]);return e.concat(t)},[])}function n(e,t){return f(e,t)<=t.r+1e-10}function i(t,e){return!e.some(function(e){return!n(t,e)})}function d(t){return r(t).filter(function(e){return i(e,t)})}return(e=t=t||{}).round=p,e.getAreaOfCircle=s,e.getCircularSegmentArea=o,e.getOverlapBetweenCircles=function(e,t,r){let n=0;var i;return n=r<e+t?p(n=r<=Math.abs(t-e)?s(e<t?e:t):(i=r-(r=(e*e-t*t+r*r)/(2*r)),o(e,e-r)+o(t,t-i)),14):n},e.getCircleCircleIntersection=a,e.getCirclesIntersectionPoints=r,e.isCircle1CompletelyOverlappingCircle2=function(e,t){return f(e,t)+t.r<e.r+1e-10},e.isPointInsideCircle=n,e.isPointInsideAllCircles=i,e.isPointOutsideAllCircles=function(t,e){return!e.some(function(e){return n(t,e)})},e.getCirclesIntersectionPolygon=d,e.getAreaOfIntersectionBetweenCircles=function(l){let e=d(l),t;if(1<e.length){const n=u(e);var r=(e=e.map(function(e){return e.angle=c(n,e),e}).sort(function(e,t){return t.angle-e.angle}))[e.length-1];const i=e.reduce(function(e,s){const o=e["startPoint"],a=u([o,s]);var t,r=s.indexes.filter(function(e){return-1<o.indexes.indexOf(e)}).reduce(function(e,t){var t=l[t],r=c(t,s),n=c(t,o),n=n-(n-r+(n<r?2*Math.PI:0))/2;let i=f(a,{x:t.x+t.r*Math.sin(n),y:t.y+t.r*Math.cos(n)});r=t.r;return i>2*r&&(i=2*r),e=!e||e.width>i?{r:r,largeArc:i>r?1:0,width:i,x:s.x,y:s.y}:e},null);return r&&(t=r["r"],e.arcs.push(["A",t,t,0,r.largeArc,1,r.x,r.y]),e.startPoint=s),e},{startPoint:r,arcs:[]}).arcs;0!==i.length&&1!==i.length&&(i.unshift(["M",r.x,r.y]),t={center:n,d:i})}return t},t}),t(e,"Series/DrawPointUtilities.js",[e["Core/Utilities.js"]],function(e){var{}=e;return{draw:function(e,t){const{animatableAttribs:r,onComplete:n,css:i,renderer:s}=t;var o=e.series&&e.series.chart.hasRendered?void 0:e.series&&e.series.options.animation;let a=e.graphic;if(t.attribs={...t.attribs,class:e.getClassName()},e.shouldDraw())a||(a="text"===t.shapeType?s.text():"image"===t.shapeType?s.image(t.imageUrl||"").attr(t.shapeArgs||{}):s[t.shapeType](t.shapeArgs||{}),(e.graphic=a).add(t.group)),i&&a.css(i),a.attr(t.attribs).animate(r,!t.isNew&&o,n);else if(a){const l=()=>{e.graphic=a=a&&a.destroy(),"function"==typeof n&&n()};Object.keys(r).length?a.animate(r,void 0,()=>l()):l()}}}}),t(e,"Series/Venn/VennPoint.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t){var{pointClass:e}=e.seriesTypes["scatter"]["prototype"];const r=t["isNumber"];class n extends e{constructor(){super(...arguments),this.options=void 0,this.series=void 0}isValid(){return r(this.value)}shouldDraw(){return!!this.shapeArgs}}return n}),t(e,"Series/Venn/VennSeriesDefaults.js",[],function(){return{borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:!1,colorByPoint:!0,dataLabels:{enabled:!0,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:!0,marker:!1,opacity:.75,showInLegend:!1,legendType:"point",states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:!1},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"},legendSymbol:"rectangle"}}),t(e,"Series/Venn/VennUtils.js",[e["Core/Geometry/CircleUtilities.js"],e["Core/Geometry/GeometryUtilities.js"],e["Core/Utilities.js"]],function(e,t,r){const{getAreaOfCircle:s,getCircleCircleIntersection:m,getOverlapBetweenCircles:o,isPointInsideAllCircles:a,isPointInsideCircle:n,isPointOutsideAllCircles:l}=e,i=t["getDistanceBetweenPoints"],{extend:c,isArray:u,isNumber:f,isObject:p,isString:d}=r;function x(e){const i={};return e.filter(e=>2===e.sets.length).forEach(n=>{n.sets.forEach((e,t,r)=>{p(i[e])||(i[e]={totalOverlap:0,overlapping:{}}),i[e]={totalOverlap:(i[e].totalOverlap||0)+n.value,overlapping:{...i[e].overlapping||{},[r[1-t]]:n.value}}})}),e.filter(C).forEach(e=>{var t=i[e.sets[0]];c(e,t)}),e}function h(e,t,r,n,i){let s=e(t),o=e(r),a=i||100,l=n||1e-10,c=r-t,u=1,f,p;if(r<=t)throw new Error("a must be smaller than b.");if(0<s*o)throw new Error("f(a) and f(b) must have opposite signs.");if(0===s)f=t;else if(0===o)f=r;else for(;u++<=a&&0!==p&&c>l;)c=(r-t)/2,f=t+c,0<s*(p=e(f))?t=f:r=f;return f}function y(e){const t=e.slice(0,-1),r=t.length,n=[],i=(e,t)=>(e.sum+=t[e.i],e);for(let e=0;e<r;e++)n[e]=t.reduce(i,{sum:0,i:e}).sum/r;return n}function v(t,r,n){let e=t+r,i;return i=n<=0?e:s(t<r?t:r)<=n?0:h(e=>{e=o(t,r,e);return n-e},0,e)}function C(e){return u(e.sets)&&1===e.sets.length}function g(e){const r={};return p(e)&&f(e.value)&&-1<e.value&&u(e.sets)&&0<e.sets.length&&!e.sets.some(function(e){let t=!1;return!r[e]&&d(e)?r[e]=!0:t=!0,t})}function b(n,e){return e.reduce(function(e,t){let r=0;return 1<t.sets.length&&(t=t.value-function(e){let t=0;var r;return 2===e.length&&(r=e[0],e=e[1],t=o(r.r,e.r,i(r,e))),t}(t.sets.map(function(e){return n[e]})),r=Math.round(t*t*1e11)/1e11),e+r},0)}function A(e,t){return void 0!==t.totalOverlap&&void 0!==e.totalOverlap?t.totalOverlap-e.totalOverlap:NaN}return{geometry:t,geometryCircles:e,addOverlapToSets:x,getCentroid:y,getDistanceBetweenCirclesByOverlap:v,getLabelWidth:function(i,s,e){const t=s.reduce((e,t)=>Math.min(t.r,e),1/0),o=e.filter(e=>!n(i,e));function r(r,n){return h(e=>{var t={x:i.x+n*e,y:i.y},t=a(t,s)&&l(t,o);return-(r-e)+(t?0:Number.MAX_VALUE)},0,r)}return 2*Math.min(r(t,-1),r(t,1))},getMarginFromCircles:function(r,e,t){return e=e.reduce((e,t)=>{t=t.r-i(r,t);return t<=e?t:e},Number.MAX_VALUE),t.reduce((e,t)=>{t=i(r,t)-t.r;return t<=e?t:e},e)},isSet:C,layoutGreedyVenn:function(e){const f=[],p={};e.filter(e=>1===e.sets.length).forEach(e=>{p[e.sets[0]]=e.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(e.value/Math.PI)}});var t=(e,t)=>{const r=e.circle;r&&(r.x=t.x,r.y=t.y),f.push(e)};x(e);const r=e.filter(C).sort(A),d=(t(r.shift(),{x:0,y:0}),e.filter(e=>2===e.sets.length));for(const i of r){const h=i.circle;if(h){const y=h.r,g=i.overlapping;var n=f.reduce((e,t,r)=>{var n=t.circle;if(!n||!g)return e;var t=g[t.sets[0]],i=v(y,n.r,t);let s=[{x:n.x+i,y:n.y},{x:n.x-i,y:n.y},{x:n.x,y:n.y+i},{x:n.x,y:n.y-i}];for(const c of f.slice(r+1)){var o=c.circle,a=g[c.sets[0]];o&&(a=v(y,o.r,a),s=s.concat(m({x:n.x,y:n.y,r:i},{x:o.x,y:o.y,r:a})))}for(const u of s){h.x=u.x,h.y=u.y;var l=b(p,d);l<e.loss&&(e.loss=l,e.coordinates=u)}return e},{loss:Number.MAX_VALUE,coordinates:void 0});t(i,n.coordinates)}}return p},loss:b,nelderMead:function(s,e){function t(e,t){return e.fx-t.fx}const o=(r,e,n,i)=>e.map((e,t)=>r*e+n*i[t]);var r=(e,t)=>(t.fx=s(t),e[e.length-1]=t,e),n=e=>{const r=e[0];return e.map(e=>{const t=o(.5,r,.5,e);return t.fx=s(t),t})},i=(e,t,r,n)=>{const i=o(r,e,n,t);return i.fx=s(i),i};let a=(t=>{const r=t.length,n=new Array(r+1);n[0]=t,n[0].fx=s(t);for(let e=0;e<r;++e){const i=t.slice();i[e]=i[e]?1.05*i[e]:.001,i.fx=s(i),n[e+1]=i}return n})(e);for(let e=0;e<100;e++){a.sort(t);var l=a[a.length-1],c=y(a),u=i(c,l,2,-1);if(u.fx<a[0].fx){var f=i(c,l,3,-2);a=r(a,f.fx<u.fx?f:u)}else if(u.fx>=a[a.length-2].fx){let e;a=u.fx>l.fx?(e=i(c,l,.5,.5)).fx<l.fx?r(a,e):n(a):(e=i(c,l,1.5,-.5)).fx<u.fx?r(a,e):n(a)}else a=r(a,u)}return a[0]},processVennData:function(e,s){const t=u(e)?e:[],r=t.reduce(function(e,t){var r;return t.sets&&(g(r=t)&&C(r)&&0<r.value)&&-1===e.indexOf(t.sets[0])&&e.push(t.sets[0]),e},[]).sort(),n=t.reduce(function(e,t){return t.sets&&g(t)&&!t.sets.some(function(e){return-1===r.indexOf(e)})&&(e[t.sets.sort().join(s)]={sets:t.sets,value:t.value||0}),e},{});return r.reduce(function(t,r,e,n){const i=n.slice(e+1);return i.forEach(function(e){t.push(r+s+e)}),t},[]).forEach(function(e){var t;n[e]||(t={sets:e.split(s),value:0},n[e]=t)}),Object.keys(n).map(function(e){return n[e]})},sortByTotalOverlap:A}}),t(e,"Series/Venn/VennSeries.js",[e["Core/Animation/AnimationUtilities.js"],e["Core/Color/Color.js"],e["Core/Geometry/CircleUtilities.js"],e["Series/DrawPointUtilities.js"],e["Core/Geometry/GeometryUtilities.js"],e["Core/Series/SeriesRegistry.js"],e["Series/Venn/VennPoint.js"],e["Series/Venn/VennSeriesDefaults.js"],e["Series/Venn/VennUtils.js"],e["Core/Utilities.js"]],function(e,t,r,a,n,i,s,o,y,l){const c=e["animObject"],u=t["parse"],{getAreaOfIntersectionBetweenCircles:f,getCirclesIntersectionPolygon:p,isCircle1CompletelyOverlappingCircle2:d,isPointInsideAllCircles:h,isPointOutsideAllCircles:g}=r,m=n["getCenterOfPoints"],x=i.seriesTypes["scatter"],{addEvent:v,extend:C,isArray:b,isNumber:A,isObject:O,merge:w}=l;class M extends x{constructor(){super(...arguments),this.data=void 0,this.mapOfIdToRelation=void 0,this.options=void 0,this.points=void 0}static getLabelPosition(n,i){let e=n.reduce((e,t)=>{var r=t.r/2;return[{x:t.x,y:t.y},{x:t.x+r,y:t.y},{x:t.x-r,y:t.y},{x:t.x,y:t.y+r},{x:t.x,y:t.y-r}].reduce((e,t)=>{var r=y.getMarginFromCircles(t,n,i);return e.margin<r&&(e.point=t,e.margin=r),e},e)},{point:void 0,margin:-Number.MAX_VALUE}).point;var t=y.nelderMead(e=>-y.getMarginFromCircles({x:e[0],y:e[1]},n,i),[e.x,e.y]);return e={x:t[0],y:t[1]},e=h(e,n)&&g(e,i)?e:1<n.length?m(p(n)):{x:n[0].x,y:n[0].y}}static getLabelValues(e,t){const n=e.sets,r=t.reduce((e,t)=>{var r=-1<n.indexOf(t.sets[0]);return t.circle&&e[r?"internal":"external"].push(t.circle),e},{internal:[],external:[]});r.external=r.external.filter(t=>r.internal.some(e=>!d(t,e)));e=M.getLabelPosition(r.internal,r.external);return{position:e,width:y.getLabelWidth(e,r.internal,r.external)}}static layout(e){const t={},r={};if(0<e.length){const o=y.layoutGreedyVenn(e);var n=e.filter(y.isSet);for(const a of e){const l=a.sets;var i=l.join(),s=y.isSet(a)?o[i]:f(l.map(e=>o[e]));s&&(t[i]=s,r[i]=M.getLabelValues(a,n))}}return{mapOfIdToShape:t,mapOfIdToLabelValues:r}}static getScale(e,t,r){var n=r.bottom-r.top,i=r.right-r.left,s=(r.right+r.left)/2,r=(r.top+r.bottom)/2,i=Math.min(0<i?1/i*e:1,0<n?1/n*t:1);return{scale:i,centerX:e/2-s*i,centerY:t/2-r*i}}static updateFieldBoundaries(e,t){var r=t.x-t.r,n=t.x+t.r,i=t.y+t.r,t=t.y-t.r;return(!A(e.left)||e.left>r)&&(e.left=r),(!A(e.right)||e.right<n)&&(e.right=n),(!A(e.top)||e.top>t)&&(e.top=t),(!A(e.bottom)||e.bottom<i)&&(e.bottom=i),e}animate(e){if(!e){var t=c(this.options.animation);for(const n of this.points){var r=n.shapeArgs;if(n.graphic&&r){const i={},s={};r.d?i.opacity=.001:(i.r=0,s.r=r.r),n.graphic.attr(i).animate(s,t),r.d&&setTimeout(()=>{n&&n.graphic&&n.graphic.animate({opacity:1})},t.duration)}}}}drawPoints(){var e=this.chart,t=this.group,r=this.points||[],n=e.renderer;for(const o of r){var i={zIndex:b(o.sets)?o.sets.length:0},s=o.shapeArgs;e.styledMode||C(i,this.pointAttribs(o,o.state)),a.draw(o,{isNew:!o.graphic,animatableAttribs:s,attribs:i,group:t,renderer:n,shapeType:s&&s.d?"path":"circle"})}}init(){x.prototype.init.apply(this,arguments),delete this.opacity}pointAttribs(e,t){var r=this.options||{},n=e&&e.options||{},t=t&&r.states[t]||{},r=w(r,{color:e&&e.color},n,t);return{fill:u(r.color).brighten(r.brightness).get(),opacity:r.opacity,stroke:r.borderColor,"stroke-width":r.borderWidth,dashstyle:r.borderDashStyle}}translate(){var e=this.chart,t=(this.processedXData=this.xData,this.generatePoints(),y.processVennData(this.options.data,M.splitter));const{mapOfIdToShape:l,mapOfIdToLabelValues:c}=M.layout(t),r=Object.keys(l).filter(e=>{e=l[e];return e&&A(e.r)}).reduce((e,t)=>M.updateFieldBoundaries(e,l[t]),{top:0,bottom:0,left:0,right:0}),n=M.getScale(e.plotWidth,e.plotHeight,r),u=n.scale,f=n.centerX,p=n.centerY;for(const d of this.points){let e=b(d.sets)?d.sets:[],t=e.join(),r=l[t],n,i=c[t]||{},s=i.width,o=i.position,a=d.options&&d.options.dataLabels;if(r){if(r.r)n={x:f+r.x*u,y:p+r.y*u,r:r.r*u};else if(r.d){const h=r.d;h.forEach(e=>{"M"===e[0]?(e[1]=f+e[1]*u,e[2]=p+e[2]*u):"A"===e[0]&&(e[1]=e[1]*u,e[2]=e[2]*u,e[6]=f+e[6]*u,e[7]=p+e[7]*u)}),n={d:h}}o?(o.x=f+o.x*u,o.y=p+o.y*u):o={},A(s)&&(s=Math.round(s*u))}d.shapeArgs=n,o&&n&&(d.plotX=o.x,d.plotY=o.y),s&&n&&(d.dlOptions=w(!0,{style:{width:s}},O(a,!0)?a:void 0)),d.name=d.options.name||e.join("∩")}}}return M.splitter="highcharts-split",M.defaultOptions=w(x.defaultOptions,o),C(M.prototype,{axisTypes:[],directTouch:!0,isCartesian:!1,pointArrayMap:["value"],pointClass:s,utils:y}),v(M,"afterSetOptions",function(e){const t=e.options,r=t.states||{};if(this.is("venn"))for(const n of Object.keys(r))r[n].halo=!1}),i.registerSeriesType("venn",M),M}),t(e,"masters/modules/venn.src.js",[],function(){})});